[{"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\index.js":"1","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\serviceWorker.js":"2","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\context\\LayoutContext.js":"3","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\context\\UserContext.js":"4","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\App.js":"5","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\themes\\index.js":"6","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Layout\\Layout.js":"7","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\error\\Error.js":"8","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\login\\Login.js":"9","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\themes\\default.js":"10","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\login\\styles.js":"11","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\error\\styles.js":"12","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Layout\\styles.js":"13","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\Statistics.js":"14","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Image_Segmentation\\Image_Segmentation.js":"15","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Vari\\Vari.js":"16","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\tables\\Tables.js":"17","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\Charts.js":"18","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\notifications\\Notifications.js":"19","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\typography\\Typography.js":"20","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\maps\\Maps.js":"21","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Header\\Header.js":"22","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\Dashboard.js":"23","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\Sidebar.js":"24","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\icons\\Icons.js":"25","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Webcam\\Webcam.js":"26","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Vari\\styles.js":"27","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\NDVI_Layers.js":"28","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Image_Segmentation\\styles.js":"29","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Charts\\NDVI_Chart.js":"30","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PolygonsTable\\PolygonsTable.js":"31","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Image_Picker\\Image_Picker.js":"32","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Audio_Player\\Audio_Player.js":"33","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Tab\\Tab.js":"34","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\mock.js":"35","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\maps\\styles.js":"36","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\typography\\styles.js":"37","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\components\\ApexLineChart.js":"38","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\components\\ApexHeatmap.js":"39","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Header\\styles.js":"40","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Webcam\\styles.js":"41","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\components\\Table\\Table.js":"42","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Widget\\Widget.js":"43","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PageTitle\\PageTitle.js":"44","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\icons\\styles.js":"45","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Wrappers\\Wrappers.js":"46","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Notification\\Notification.js":"47","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\UserAvatar\\UserAvatar.js":"48","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\styles.js":"49","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Image_Picker\\styles.js":"50","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Tab\\styles.js":"51","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"52","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\UserAvatar\\styles.js":"53","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\Dot.js":"54","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"55","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\styles.js":"56","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Notification\\styles.js":"57","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PageTitle\\styles.js":"58","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Widget\\styles.js":"59","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\notifications\\styles.js":"60","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PolygonsTable\\DashboardPolygonTable.js":"61","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Weather_Widget\\WeatherWidget.js":"62","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\styles.js":"63"},{"size":869,"mtime":1645948903236,"results":"64","hashOfConfig":"65"},{"size":5005,"mtime":1644734741771,"results":"66","hashOfConfig":"65"},{"size":1515,"mtime":1645958803860,"results":"67","hashOfConfig":"65"},{"size":2022,"mtime":1647160376384,"results":"68","hashOfConfig":"65"},{"size":1867,"mtime":1647164374748,"results":"69","hashOfConfig":"65"},{"size":502,"mtime":1618263416000,"results":"70","hashOfConfig":"65"},{"size":1451,"mtime":1647152551501,"results":"71","hashOfConfig":"65"},{"size":1571,"mtime":1618263416000,"results":"72","hashOfConfig":"65"},{"size":9197,"mtime":1647162504429,"results":"73","hashOfConfig":"65"},{"size":2987,"mtime":1618263416000,"results":"74","hashOfConfig":"65"},{"size":3711,"mtime":1647161619350,"results":"75","hashOfConfig":"65"},{"size":1334,"mtime":1618263416000,"results":"76","hashOfConfig":"65"},{"size":827,"mtime":1647168638235,"results":"77","hashOfConfig":"65"},{"size":5555,"mtime":1646560781779,"results":"78","hashOfConfig":"65"},{"size":17548,"mtime":1647168115976,"results":"79","hashOfConfig":"65"},{"size":3102,"mtime":1645340330612,"results":"80","hashOfConfig":"65"},{"size":2082,"mtime":1632834226363,"results":"81","hashOfConfig":"65"},{"size":5556,"mtime":1632834226309,"results":"82","hashOfConfig":"65"},{"size":13470,"mtime":1632834226346,"results":"83","hashOfConfig":"65"},{"size":4506,"mtime":1632834226363,"results":"84","hashOfConfig":"65"},{"size":971,"mtime":1632834226339,"results":"85","hashOfConfig":"65"},{"size":3646,"mtime":1646554375737,"results":"86","hashOfConfig":"65"},{"size":7067,"mtime":1646559576296,"results":"87","hashOfConfig":"65"},{"size":4192,"mtime":1647152560844,"results":"88","hashOfConfig":"65"},{"size":377833,"mtime":1632834226329,"results":"89","hashOfConfig":"65"},{"size":2027,"mtime":1647154094931,"results":"90","hashOfConfig":"65"},{"size":331,"mtime":1630570274648,"results":"91","hashOfConfig":"65"},{"size":11034,"mtime":1646579808711,"results":"92","hashOfConfig":"65"},{"size":778,"mtime":1647167751418,"results":"93","hashOfConfig":"65"},{"size":5143,"mtime":1646560066669,"results":"94","hashOfConfig":"65"},{"size":4604,"mtime":1646578961842,"results":"95","hashOfConfig":"65"},{"size":949,"mtime":1646574095274,"results":"96","hashOfConfig":"65"},{"size":416,"mtime":1647153416923,"results":"97","hashOfConfig":"65"},{"size":6234,"mtime":1647168348155,"results":"98","hashOfConfig":"65"},{"size":4105,"mtime":1618263416000,"results":"99","hashOfConfig":"65"},{"size":171,"mtime":1632834226339,"results":"100","hashOfConfig":"65"},{"size":374,"mtime":1632834226363,"results":"101","hashOfConfig":"65"},{"size":1328,"mtime":1632834226313,"results":"102","hashOfConfig":"65"},{"size":1794,"mtime":1632834226309,"results":"103","hashOfConfig":"65"},{"size":3856,"mtime":1646554391839,"results":"104","hashOfConfig":"65"},{"size":278,"mtime":1639327855362,"results":"105","hashOfConfig":"65"},{"size":1274,"mtime":1627636511007,"results":"106","hashOfConfig":"65"},{"size":2485,"mtime":1632834226299,"results":"107","hashOfConfig":"65"},{"size":427,"mtime":1632834226286,"results":"108","hashOfConfig":"65"},{"size":780,"mtime":1632834226339,"results":"109","hashOfConfig":"65"},{"size":3790,"mtime":1632834209189,"results":"110","hashOfConfig":"65"},{"size":3296,"mtime":1632834202209,"results":"111","hashOfConfig":"65"},{"size":593,"mtime":1632834226289,"results":"112","hashOfConfig":"65"},{"size":1749,"mtime":1639413136307,"results":"113","hashOfConfig":"65"},{"size":1792,"mtime":1646573982543,"results":"114","hashOfConfig":"65"},{"size":293,"mtime":1647153805349,"results":"115","hashOfConfig":"65"},{"size":4723,"mtime":1645366699705,"results":"116","hashOfConfig":"65"},{"size":276,"mtime":1632834127575,"results":"117","hashOfConfig":"65"},{"size":862,"mtime":1618263416000,"results":"118","hashOfConfig":"65"},{"size":2193,"mtime":1646553545929,"results":"119","hashOfConfig":"65"},{"size":2531,"mtime":1645959195119,"results":"120","hashOfConfig":"65"},{"size":993,"mtime":1618263416000,"results":"121","hashOfConfig":"65"},{"size":462,"mtime":1632834226289,"results":"122","hashOfConfig":"65"},{"size":969,"mtime":1632834226306,"results":"123","hashOfConfig":"65"},{"size":1858,"mtime":1632834226363,"results":"124","hashOfConfig":"65"},{"size":8459,"mtime":1646579123373,"results":"125","hashOfConfig":"65"},{"size":2123,"mtime":1647152323766,"results":"126","hashOfConfig":"65"},{"size":861,"mtime":1646559906674,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"2fdfhm",{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\index.js",[],["269","270"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\serviceWorker.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\context\\LayoutContext.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\context\\UserContext.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\App.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\themes\\index.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Layout\\Layout.js",["271","272","273","274","275"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\error\\Error.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\login\\Login.js",["276"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\themes\\default.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\login\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\error\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Layout\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\Statistics.js",["277","278","279"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// import useStyles from \"./styles.js\";\n\nimport NDVIChart from \"../../components/Charts/NDVI_Chart\";\n// import WeatherChart from \"../../components/WeatherChart/WeatherChart\";\nimport PolygonTable from \"../../components/PolygonsTable/PolygonsTable\";\nimport NDVILayers from \"./NDVI_Layers\";\nimport useStyles from \"./styles.js\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function Statistics(props) {\n  var classes = useStyles();\n\n  const initialToDate = new Date();\n  const UNIX_initialToDate = initialToDate.getTime() / 1000;\n\n  const priorDate = new Date();\n  priorDate.setDate(priorDate.getDate() - 30);\n\n  const UNIX_initialFromDate = priorDate.getTime() / 1000;\n\n  const initialDate = new Date();\n  initialDate.setDate(initialDate.getDate() - 30);\n\n  const [fromDate, setfromDate] = useState(initialDate);\n  const [toDate, settoDate] = useState(new Date());\n  const [fromDateUNIX, setfromDateUNIX] = useState(UNIX_initialFromDate);\n  const [toDateUNIX, settoDateUNIX] = useState(UNIX_initialToDate);\n  const [NDVI_data, setNDVI_data] = useState([]);\n  const [polygonId, setPolygonId] = useState(\"\");\n  const [firstPolygonId, setFirstPolygonId] = useState(\"\");\n  const [mountComponent, setMountComponent] = useState(false);\n\n  useEffect(() => {\n    let firstPolygon;\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        firstPolygon = data[0].id;\n        setPolygonId(firstPolygon);\n        setFirstPolygonId(firstPolygon);\n        setTimeout(() => {\n          setMountComponent(true);\n        }, 1000);\n      });\n\n    setTimeout(() => {\n      console.log(firstPolygon);\n      fetch(\n        `${process.env.REACT_APP_AGROMONITORING_API_URL}ndvi/history?polyid=${firstPolygon}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setNDVI_data(data);\n        });\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    getNDVI();\n  }, [toDateUNIX, fromDateUNIX, polygonId]);\n\n  const handleFromDateChange = (date) => {\n    setfromDate(date);\n    const UNIX_dateFrom = date.getTime() / 1000;\n    setfromDateUNIX(UNIX_dateFrom);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleToDateChange = (date) => {\n    settoDate(date);\n    const UNIX_dateTo = date.getTime() / 1000;\n    settoDateUNIX(UNIX_dateTo);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleChange = (value) => {\n    setPolygonId(value);\n    setTimeout(() => {\n      setMountComponent(true);\n    }, 1000);\n  };\n\n  const getNDVI = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        `${process.env.REACT_APP_AGROMONITORING_API_URL}ndvi/history?polyid=${polygonId}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      );\n      const data = await rawResponse.json();\n      setNDVI_data(data);\n    })();\n  };\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item md={12} xs={12}>\n        <PolygonTable onChange={handleChange} value={polygonId} />\n      </Grid>\n      <Grid container className={classes.NDVIContainer}>\n        <Grid item md={5}>\n          <Typography variant=\"h5\" style={{ color: \"#fff\" }}>\n            Historical\n          </Typography>\n          <Typography variant=\"h1\" style={{ color: \"#fff\" }}>\n            NDVI\n          </Typography>\n        </Grid>\n        <Grid item md={3}></Grid>\n        <Grid\n          item\n          md={4}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              label=\"From\"\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n              disableFuture\n            />\n          </MuiPickersUtilsProvider>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              label=\"To\"\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={toDate}\n              onChange={handleToDateChange}\n              maxDate={new Date()}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item md={12} xs={12}>\n          {\" \"}\n          {NDVI_data.length > 0 && <NDVIChart data={NDVI_data} />}\n        </Grid>\n      </Grid>\n\n      <Grid item md={12} xs={12}>\n        {mountComponent && (\n          <NDVILayers\n            fromDateUNIX={fromDateUNIX}\n            toDateUNIX={toDateUNIX}\n            polygonId={polygonId}\n          />\n        )}\n      </Grid>\n      {/* {mountComponent && (\n          <WeatherChart firstPolygon={firstPolygonId} polygonId={polygonId} />\n        )} */}\n    </Grid>\n  );\n}\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Image_Segmentation\\Image_Segmentation.js",["280","281","282","283"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Vari\\Vari.js",["284","285","286"],"import React from \"react\";\nimport ImagePicker from \"../../components/Image_Picker/Image_Picker\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst clientId = \"IoAOqmmySnC58B2PDyV6uQ\";\nconst clientSecret = \"liqJb6t8lDlLIiclaGuogFzmFNBZrsaz\";\n\nfunction Vari() {\n  const classes = useStyles();\n\n  function range(start, end) {\n    return Array(end - start + 1)\n      .fill()\n      .map((_, idx) => start + idx);\n  }\n  var result = range(0, 1000);\n\n  const availableTimeslots = result.map((id) => {\n    return {\n      id,\n      startTime: new Date(\n        new Date(new Date().setDate(new Date().getDate() + id)).setHours(\n          9,\n          0,\n          0,\n          0,\n        ),\n      ),\n      endTime: new Date(\n        new Date(new Date().setDate(new Date().getDate() + id)).setHours(\n          21,\n          0,\n          0,\n          0,\n        ),\n      ),\n    };\n  });\n\n  // React.useEffect(() => {\n  //   if (router.query.code) {\n  //     fetch(\"/connectZoom\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ code: router.query.code }),\n  //     })\n  //       .then(() => {\n  //         /* Show success message to user */\n  //       })\n  //       .catch(() => {\n  //         /* Show error message to user */\n  //       });\n  //   }\n  // }, [router.query.code]);\n\n  var options = {\n    method: \"POST\",\n    qs: {\n      grant_type: \"authorization_code\",\n      //The code below is a sample authorization code. Replace it with your actual authorization code while making requests.\n      code: \"B1234558uQ\",\n      //The uri below is a sample redirect_uri. Replace it with your actual redirect_uri while making requests.\n      redirect_uri: \"http://localhost:3000/#/app/vari\",\n    },\n    headers: {\n      /**The credential below is a sample base64 encoded credential. Replace it with \"Authorization: 'Basic ' + Buffer.from(your_app_client_id + ':' + your_app_client_secret).toString('base64')\"\n       **/\n      Authorization:\n        \"Basic \" +\n        Buffer.from(clientId + \":\" + clientSecret).toString(\"base64\"),\n    },\n  };\n\n  const handleSubmit = (data) => {\n    fetch(\"https://zoom.us/oauth/token\", options)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3} className={classes.grid_container}>\n        <Grid item md={12} sm={12}>\n          <h3>Vari Calculation</h3>\n        </Grid>\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          <ImagePicker url=\"https://agri-vision-server.herokuapp.com/vari\" />\n        </Grid>\n\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          {/* <Button>\n            <a\n              href={`https://zoom.us/oauth/authorize?response_type=code&client_id=IoAOqmmySnC58B2PDyV6uQ&redirect_uri=http://localhost:3000/#/app/vari`}\n            >\n              Connect Zoom\n            </a>\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Vari;\n",["287","288"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\tables\\Tables.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\Charts.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\notifications\\Notifications.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\typography\\Typography.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\maps\\Maps.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Header\\Header.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        {isMobile && (\n          <IconButton\n            color=\"inherit\"\n            onClick={() => toggleSidebar(layoutDispatch)}\n            className={classNames(\n              classes.headerMenuButtonSandwich,\n              classes.headerMenuButtonCollapse,\n            )}\n          >\n            {layoutState.isSidebarOpened ? (\n              <ArrowBackIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            ) : (\n              <MenuIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n          </IconButton>\n        )}\n        <Typography variant=\"h4\" weight=\"medium\" className={classes.logotype}>\n          Agri D Map\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\Dashboard.js",["319","320"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n// import Audio_Player from \"../../components/Audio_Player/Audio_Player\";\n\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from \"@turf/turf\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport WeatherWidget from \"../../components/Weather_Widget/WeatherWidget\";\nimport DashboardPolygonTable from \"../../components/PolygonsTable/DashboardPolygonTable\";\n\nimport Button from \"@material-ui/core/Button\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_GL_ACCESS_TOKEN;\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const draw = useRef(null);\n  const [lng, setLng] = useState(73.1386);\n  const [lat, setLat] = useState(33.6762);\n  const [zoom, setZoom] = useState(8);\n  const [roundedArea, setroundedArea] = useState(0);\n  const [location, setLocation] = useState({\n    latitude: 32,\n    longitude: 73,\n  });\n  const [polygon, setPolygon] = useState({});\n\n  const [polygonName, setpolygonName] = useState(\"\");\n  const [fieldHelperText, setFieldHelperText] = useState(\"\");\n\n  const childRef = useRef();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_GEO_LOCATION_URL}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setLocation({\n          latitude: data.latitude,\n          longitude: data.longitude,\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: process.env.REACT_APP_MAPBOX_GL_STYLE,\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    draw.current = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true,\n      },\n      defaultMode: \"draw_polygon\",\n    });\n    map.current.addControl(draw.current);\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    map.current.on(\"draw.create\", updateArea);\n    map.current.on(\"draw.delete\", updateArea);\n    map.current.on(\"draw.update\", updateArea);\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  const showMyLocation = () => {\n    if (!map.current) return;\n    map.current.flyTo({\n      center: [location.longitude, location.latitude],\n      essential: true,\n      zoom: 13,\n      speed: 2, // make the flying slow\n      curve: 1,\n    });\n  };\n\n  function updateArea(e) {\n    const data = draw.current.getAll();\n\n    if (data.features.length > 0) {\n      const area = turf.area(data);\n      setroundedArea(Math.round(area * 100) / 100 / 10000);\n      setFieldHelperText(\"\");\n\n      const polygonData = turf.polygon(data.features[0].geometry.coordinates, {\n        name: { polygonName },\n      });\n\n      setPolygon(polygonData);\n    } else {\n      setroundedArea(0);\n      if (e.type !== \"draw.delete\") alert(\"Click the map to draw a polygon.\");\n    }\n  }\n\n  const createPolygon = () => {\n    if (roundedArea > 250) {\n      setFieldHelperText(\"Area cannot exceed 200ha\");\n    } else {\n      (async () => {\n        const rawResponse = await fetch(\n          `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ geo_json: polygon, name: polygonName }),\n          },\n        );\n        const content = await rawResponse.json();\n        console.log(content);\n        childRef.current.updateTable();\n      })();\n      setpolygonName(\"\");\n    }\n  };\n\n  const handlePolygonNameChange = (e) => {\n    setpolygonName(e.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        item\n        xs={12}\n        md={7}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Grid item md={12} style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              left: \"10px\",\n              zIndex: \"2\",\n              backgroundColor: \"white\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n            }}\n          >\n            <p style={{ margin: \"0px\" }}>Click the map to draw a polygon.</p>{\" \"}\n            <p style={{ margin: \"0px\" }}>\n              Note: Area cannot be greater than 200ha\n            </p>\n            <p style={{ margin: \"0px\" }}>\n              {\" \"}\n              {roundedArea > 0 ? `${roundedArea.toFixed(2)} ha` : \"\"}\n            </p>\n          </div>\n          <div ref={mapContainer} className={classes.map_container} />\n        </Grid>\n        <Button\n          onClick={showMyLocation}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.locateButton}\n          startIcon={<LocationOnIcon />}\n        >\n          Locate Me\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={5}>\n        <WeatherWidget location={location} />\n      </Grid>\n\n      <Grid item md={7} xs={12} m={20} className={classes.addPolygonContainer}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Enter field name\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={polygonName}\n          onChange={handlePolygonNameChange}\n          className={classes.addPolygonInput}\n          helperText={fieldHelperText}\n          FormHelperTextProps={{\n            classes: {\n              root: classes.root,\n            },\n          }}\n          style={{\n            backgroundColor: \"rgba(255,255,255,1)\",\n            borderRadius: 25,\n            color: \"#fff\",\n          }}\n        />\n        <Button\n          onClick={createPolygon}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.createPolygonButon}\n          // startIcon={<AddIcon />}\n          disabled={roundedArea > 0 ? false : true}\n        >\n          Create field\n        </Button>\n      </Grid>\n      <Grid item md={12} xs={12} style={{ marginTop: \"50px\" }}>\n        <DashboardPolygonTable ref={childRef} />\n      </Grid>\n    </Grid>\n  );\n}\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\Sidebar.js",["321","322","323","324","325","326","327","328","329","330"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\icons\\Icons.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Webcam\\Webcam.js",["331"],"import React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@material-ui/core\";\nimport useStyles from \"./styles.js\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\n\nconst WebcamCapture = (props) => {\n  const classes = useStyles();\n\n  const [image, setImage] = useState(\"\");\n  const webcamRef = useRef(null);\n\n  const videoConstraints = {\n    width: 300,\n    height: 300,\n    facingMode: \"user\",\n  };\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n    props.handleImage(imageSrc);\n  });\n\n  const retake = () => {\n    setImage(\"\");\n    props.handleImagePresent(false);\n  };\n\n  return (\n    <div className=\"webcam-container\">\n      <div className=\"webcam-img\">\n        {image === \"\" ? (\n          <Webcam\n            audio={false}\n            // height={400}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            // width={300}\n            videoConstraints={videoConstraints}\n          />\n        ) : (\n          <img src={image} alt=\"img\" />\n        )}\n        {/* <input type=\"file\" accept=\"image/*\" capture=\"environment\" />{\" \"} */}\n      </div>\n      <div>\n        {image !== \"\" ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => {\n              e.preventDefault();\n              retake();\n            }}\n            className={classes.webcamBtn}\n            startIcon={<CameraAltIcon />}\n          >\n            Retake Image\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => {\n              e.preventDefault();\n              capture();\n            }}\n            className={classes.webcamBtn}\n            startIcon={<CameraAltIcon />}\n          >\n            Capture\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WebcamCapture;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Vari\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\NDVI_Layers.js",["332","333","334","335","336","337"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport useStyles from \"./styles.js\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledTableCell = withStyles({\r\n  root: {\r\n    color: \"#fff\",\r\n  },\r\n})(TableCell);\r\n\r\nfunction NDVILayers(props) {\r\n  var classes = useStyles();\r\n\r\n  const initialDate = new Date();\r\n  initialDate.setDate(initialDate.getDate() - 30);\r\n\r\n  const [metric, setMetric] = useState(\"ndvi\");\r\n  const [layersData, setLayersData] = useState([]);\r\n  const [tableData, setTableData] = useState({});\r\n  const [metricDate, setMetricDate] = useState(\"\");\r\n  const [imageURL, setImageURL] = useState();\r\n  const [imageLoading, setImageLoading] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}image/search?start=${props.fromDateUNIX}&end=${props.toDateUNIX}&polyid=${props.polygonId}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\r\n    )\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        const dataB = data;\r\n        setLayersData(dataB);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error: \", error);\r\n      });\r\n  }, [props]);\r\n\r\n  const handleDateChange = (event) => {\r\n    setMetricDate(event.target.value);\r\n    const required_layer_object = layersData.filter(\r\n      (layer) => layer.dt === event.target.value,\r\n    );\r\n    switchFunction(metric, required_layer_object);\r\n    setImageLoading(true);\r\n  };\r\n\r\n  const handleMetricChange = (event) => {\r\n    setMetric(event.target.value);\r\n    const required_layer_object = layersData.filter(\r\n      (layer) => layer.dt === metricDate,\r\n    );\r\n    switchFunction(event.target.value, required_layer_object);\r\n  };\r\n\r\n  const switchFunction = (value, required_layer_object) => {\r\n    switch (value) {\r\n      case \"ndvi\":\r\n        setImageURL(required_layer_object[0].image.ndvi);\r\n        fetchStatsData(required_layer_object[0].stats.ndvi);\r\n        break;\r\n      case \"evi\":\r\n        setImageURL(required_layer_object[0].image.evi);\r\n        fetchStatsData(required_layer_object[0].stats.evi);\r\n        break;\r\n      case \"evi2\":\r\n        setImageURL(required_layer_object[0].image.evi2);\r\n        fetchStatsData(required_layer_object[0].stats.evi2);\r\n        break;\r\n      case \"ndwi\":\r\n        setImageURL(required_layer_object[0].image.ndwi);\r\n        fetchStatsData(required_layer_object[0].stats.ndwi);\r\n        break;\r\n      case \"nri\":\r\n        setImageURL(required_layer_object[0].image.nri);\r\n        fetchStatsData(required_layer_object[0].stats.nri);\r\n        break;\r\n      case \"dswi\":\r\n        setImageURL(required_layer_object[0].image.dswi);\r\n        fetchStatsData(required_layer_object[0].stats.dswi);\r\n        break;\r\n      default:\r\n        console.log(\"Incorrect choice\");\r\n    }\r\n    setImageLoading(false);\r\n  };\r\n\r\n  const fetchStatsData = (url) => {\r\n    if (url.includes(\"http\")) {\r\n      url = url.replace(\"http\", \"https\");\r\n    }\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTableData(data);\r\n      });\r\n  };\r\n\r\n  const formatDate = (d) => {\r\n    const date = new Date(d * 1000);\r\n    // return (\r\n    //   date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()\r\n    // );\r\n\r\n    return date.toDateString();\r\n  };\r\n\r\n  const Layers = () => {\r\n    const standard_date = formatDate(metricDate);\r\n    return (\r\n      <Card\r\n        style={{\r\n          backgroundColor: \"#3F4257\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <TableContainer\r\n            // component={Card}\r\n            style={{ backgroundColor: \"transparent\", color: \"white\" }}\r\n            sx={{\r\n              \".MuiTableBody-root\": {\r\n                backgroundColor: \"transparent\",\r\n                color: \"white\",\r\n              },\r\n            }}\r\n          >\r\n            <Table\r\n              sx={{ minWidth: 650, color: \"#fff\" }}\r\n              aria-label=\"simple table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>{standard_date}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {metric.toUpperCase()}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Maximum\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.max.toFixed(2)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Minimum\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.min.toFixed(2)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Mean\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.mean.toFixed(2)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Median\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.median.toFixed(2)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Deviation\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.std.toFixed(2)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n                <TableRow\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    Number of pixels\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {tableData.num.toFixed(0)}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  var dateToBeSelected;\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item md={6} xs={12}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={6} xs={5}>\r\n            <FormControl fullWidth>\r\n              <InputLabel\r\n                id=\"demo-simple-select-label\"\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                Select Date\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={metricDate}\r\n                label=\"date\"\r\n                defaultValue={\r\n                  layersData.length > 0 ? formatDate(layersData[1].dt) : \"\"\r\n                }\r\n                onChange={(e) => handleDateChange(e)}\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                {layersData.map(\r\n                  (layer, i) => (\r\n                    (dateToBeSelected = formatDate(layer.dt)),\r\n                    (\r\n                      <MenuItem value={layer.dt} key={i}>\r\n                        {dateToBeSelected}\r\n                      </MenuItem>\r\n                    )\r\n                  ),\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} xs={5}>\r\n            <FormControl fullWidth>\r\n              <InputLabel\r\n                id=\"demo-simple-select-label\"\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                Select Metric\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={metric}\r\n                label=\"metric\"\r\n                onChange={(e) => handleMetricChange(e)}\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                <MenuItem value=\"ndvi\">NDVI</MenuItem>\r\n                <MenuItem value=\"evi\">EVI</MenuItem>\r\n                <MenuItem value=\"evi2\">EVI2</MenuItem>\r\n                <MenuItem value=\"ndwi\">NDWI</MenuItem>\r\n                <MenuItem value=\"nri\">NRI</MenuItem>\r\n                <MenuItem value=\"dswi\">DSWI</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item md={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid\r\n            item\r\n            md={4}\r\n            xs={12}\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n            }}\r\n          >\r\n            {tableData.max && <Layers />}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={6}\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {tableData.max && (\r\n              <img\r\n                src={imageURL.replace(\"http\", \"https\")}\r\n                alt=\"loading\"\r\n                className={classes.layersImage}\r\n              ></img>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NDVILayers;\r\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Image_Segmentation\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Charts\\NDVI_Chart.js",["338","339","340","341","342"],"import React, { useState, useEffect } from \"react\";\n// import { Chart, LineAdvance, Axis } from \"bizcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction NDVIChart(props) {\n  let result = [];\n  // const [options, setOptions] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [chartDate, setChartDate] = useState([]);\n  result.push({\n    name: \"Maximum\",\n    data: [],\n  });\n  result.push({\n    name: \"Minimum\",\n    data: [],\n  });\n  result.push({\n    name: \"Mean\",\n    data: [],\n  });\n  props.data.map((item, i) => {\n    var unixTimestamp = props.data[i].dt;\n    var date = new Date(unixTimestamp * 1000);\n    const standard_date =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n    result[0].data.push(item.data.max.toFixed(2));\n    result[1].data.push(item.data.min.toFixed(2));\n    result[2].data.push(item.data.mean.toFixed(2));\n    // setChartDate((prevState) => [...prevState, standard_date]);\n    chartDate.push(standard_date);\n    console.log(\"result array: \" + result);\n  });\n\n  const options = {\n    chart: {\n      borderRadius: 10,\n      foreColor: \"#fff\",\n      height: \"auto\",\n      type: \"line\",\n      // background: \"#373368\",\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 3,\n    },\n    // title: {\n    //   text: \"NDVI Statistics\",\n    //   margin: 20,\n    //   style: {\n    //     fontSize: \"18px\",\n    //     fontWeight: \"light\",\n    //     color: \"white\",\n    //   },\n    //   align: \"center\",\n    // },\n\n    legend: {\n      show: true,\n      showForSingleSeries: false,\n      showForNullSeries: true,\n      showForZeroSeries: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      fontFamily: \"Helvetica, Arial\",\n      fontWeight: 400,\n      formatter: undefined,\n      inverseOrder: false,\n      height: 50,\n      tooltipHoverFormatter: function (val, opts) {\n        return (\n          val +\n          \" - \" +\n          opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\n          \"\"\n        );\n      },\n      customLegendItems: [],\n      offsetX: 0,\n      offsetY: 0,\n      labels: {\n        // colors: \"#fff\",\n        useSeriesColors: false,\n      },\n      markers: {\n        width: 12,\n        height: 12,\n        strokeWidth: 0,\n        // strokeColor: \"#fff\",\n        fillColors: undefined,\n        radius: 12,\n        customHTML: undefined,\n        onClick: undefined,\n        offsetX: 0,\n        offsetY: 0,\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 0,\n      },\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n\n    xaxis: {\n      categories: chartDate.reverse(),\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    // grid: {\n    //   borderColor: \"red\",\n    //   strokeDashArray: 0,\n    //   position: \"back\",\n    //   show: true,\n    //   xaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    //   yaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    // },\n    theme: {\n      pallete: \"palette2\",\n      // mode: \"dark\",\n    },\n    tooltip: {\n      theme: false,\n      y: [\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      ],\n    },\n    colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n    responsive: [\n      {\n        breakpoint: 1000,\n        options: {\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    animations: {\n      enabled: true,\n      easing: \"easeinout\",\n      speed: 800,\n      animateGradually: {\n        enabled: true,\n        delay: 150,\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 350,\n      },\n    },\n  };\n\n  return (\n    // <Chart\n    //   padding={\"auto\"}\n    //   appendPadding={10}\n    //   scale={{ date: { type: \"cat\", nice: false } }}\n    //   autoFit\n    //   height={300}\n    //   data={result}\n    // >\n    //   <LineAdvance shape=\"smooth\" point position=\"date*value\" color=\"label\" />\n    //   <Axis\n    //     name=\"date\"\n    //     label={{\n    //       rotate: 0.5,\n    //       autoRotate: true,\n    //       style: { textAlign: \"start\", fontSize: 11 },\n    //     }}\n    //   />\n    // </Chart>\n    <ReactApexChart\n      options={options}\n      series={result}\n      type=\"line\"\n      height={350}\n      style={{ borderRadius: \"5px\" }}\n    />\n  );\n}\n\nexport default NDVIChart;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PolygonsTable\\PolygonsTable.js",["343"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst PolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setValue(data[0].id);\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n          data[i].area.toFixed(1);\n        });\n        setdata(data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 10);\n  };\n\n  const handleChange = (event) => {\n    props.onChange(event.target.value);\n    setValue(event.target.value);\n  };\n\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\n    <Cell {...props}>\n      <div>\n        <Radio\n          checked={value === rowData.id}\n          onChange={handleChange}\n          value={rowData.id}\n          name=\"radio-button\"\n          inputProps={{ \"aria-label\": \"A\" }}\n        />\n      </div>\n    </Cell>\n  );\n\n  return loading ? (\n    <div style={{ height: \"200px\" }}>\n      <img\n        src=\"/horizontal-loader.gif\"\n        alt=\"loader\"\n        style={{ display: \"block\", margin: \"auto\" }}\n      ></img>\n    </div>\n  ) : (\n    <Table\n      height={420}\n      data={getData()}\n      sortColumn={sortColumn}\n      sortType={sortType}\n      onSortColumn={handleSortColumn}\n      loading={loading}\n      autoHeight={true}\n      hover={false}\n      rowHeight={60}\n      headerHeight={40}\n      cellBordered={false}\n      bordered={false}\n      style={{\n        width: \"100%\",\n        backgroundColor: \"transparent\",\n        borderRadius: \"1rem\",\n        border: \"1px solid #fff\",\n      }}\n    >\n      <Column\n        width={isMobile ? 60 : 100}\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell\n          style={{ backgroundColor: \"#3f4257\", color: \"white\", height: \"3rem\" }}\n        >\n          Select\n        </HeaderCell>\n        <CheckCell dataKey=\"id\" />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Polygon Name\n        </HeaderCell>\n        <Cell dataKey=\"name\" style={{ padding: \"20px\", border: \"none\" }} />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Created at\n        </HeaderCell>\n        <Cell dataKey=\"created_at\" style={{ padding: \"20px\" }} />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Area\n        </HeaderCell>\n        <Cell dataKey=\"area\" style={{ padding: \"20px\" }} />\n      </Column>\n    </Table>\n  );\n};\n\nexport default PolygonTable;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Image_Picker\\Image_Picker.js",["344","345"],"import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport ImageUploader from \"react-images-upload\";\n\nfunction ImagePicker(props) {\n  const classes = useStyles();\n\n  const onDrop = (pictureFile, pictureDataURL) => {\n    if (pictureDataURL.length > 0) {\n      props.handleImage(pictureDataURL[0]);\n    } else {\n      console.log(\"No image selected\");\n      props.handleImagePresent(false);\n    }\n  };\n\n  return (\n    <div className={classes.image_picker_container}>\n      <ImageUploader\n        singleImage={true}\n        withPreview={true}\n        withIcon={true}\n        buttonText=\"Choose an image\"\n        onChange={onDrop}\n        imgExtension={[\".jpg\", \".jpeg\", \".png\"]}\n        label=\"Max file size: 10MB, accepted: JPG, PNG, JPEG\"\n        maxFileSize={10485760}\n      />\n    </div>\n  );\n}\n\nexport default ImagePicker;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Audio_Player\\Audio_Player.js",["346","347","348"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import AudioPlayer from \"material-ui-audio-player\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nfunction Audio(props) {\n  return <AudioPlayer src={props.audio} style={{ borderRadius: \"10px\" }} />;\n}\n\nexport default Audio;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Tab\\Tab.js",["349","350"],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\mock.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\maps\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\typography\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Header\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Webcam\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Widget\\Widget.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\icons\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Notification\\Notification.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Image_Picker\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Tab\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["351"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { useMediaQuery } from \"react-responsive\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../../../context/LayoutContext.js\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n  var layoutDispatch = useLayoutDispatch();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n  if (link && link.includes(\"http\")) {\n    return (\n      <ListItem\n        button\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <a className={classes.externalLink} href={link}>\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive,\n            })}\n          >\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened,\n              }),\n            }}\n            primary={label}\n          />\n        </a>\n      </ListItem>\n    );\n  }\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n        onClick={() => (isMobile ? toggleSidebar(layoutDispatch) : \"\")}\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map((childrenLink) => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\UserAvatar\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",["352","353"],"import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    // color: \"white\",\n    background: \"linear-gradient(to right, #3F4257, #3F4257)\",\n    backgroundRepeat: \"no-repeat\",\n    transition: \"background-size 1s 0s\",\n    transform: \"perspective(1px) translateZ(0)\",\n    position: \"relative\",\n    transition: \"color 0.3s\",\n    \"&:hover\": {\n      color: \"black\",\n      \"& $linkIcon\": {\n        color: \"#3F4257\",\n      },\n      \"& $linkText\": {\n        color: \"#3F4257\",\n      },\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\",\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      zIndex: \"-1\",\n      background: \"white\",\n      transform: \"scaleX(0)\",\n      transformOrigin: \"0 50%;\",\n      transition: \"transform 0.3s ease-out\",\n    },\n    \"&:hover:before\": {\n      transform: \"scaleX(1)\",\n    },\n  },\n  externalLink: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n  linkActive: {\n    background: \"white\",\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"white\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  linkIconActive: {\n    // color: theme.palette.primary.main,\n    color: \"#3F4257\",\n  },\n  linkText: {\n    padding: 0,\n    color: \"white\",\n    // color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: \"#3F4257\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\dashboard\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Notification\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PageTitle\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Widget\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\notifications\\styles.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\PolygonsTable\\DashboardPolygonTable.js",["354","355","356","357","358","359"],"import React, {\n  useState,\n  useEffect,\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport {\n  Dialog,\n  Button,\n  TextField,\n  Modal,\n  DialogActions,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst DashboardPolygonTable = forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [editName, setEditName] = useState(\"\");\n  const [polygonId, setPolygonId] = useState();\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [polygonToDelete, setPolygonToDelete] = useState();\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    fetchPolygons();\n  }, []);\n\n  const fetchPolygons = () => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n        });\n        setdata(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useImperativeHandle(ref, () => ({\n    updateTable() {\n      fetchPolygons();\n    },\n  }));\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 5);\n  };\n\n  const ModalClick = (id) => {\n    setOpen(true);\n    setPolygonId(id);\n  };\n\n  const EditPolygon = () => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons/${polygonId}?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: editName,\n        }),\n      },\n    );\n    setOpen(false);\n    setEditName(\"\");\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const DeletePolygon = (id) => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons/${id}?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      {\n        method: \"DELETE\",\n      },\n    );\n    console.log(\"Delete polygon id: \", id);\n    setTimeout(() => {\n      fetchPolygons();\n      setDialogOpen(false);\n    }, 500);\n  };\n\n  const EditPolygonsCell = ({\n    rowData,\n    onChange,\n    checkedKeys,\n    dataKey,\n    ...props\n  }) => (\n    <Cell {...props}>\n      <div>\n        <IconButton size=\"small\">\n          <EditIcon\n            style={{ color: \"#fff\" }}\n            onClick={() => ModalClick(rowData.id)}\n          />\n        </IconButton>\n        |\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setDialogOpen(true);\n            setPolygonToDelete(rowData.id);\n          }}\n        >\n          <DeleteIcon style={{ color: \"#fff\" }} />\n        </IconButton>\n      </div>\n    </Cell>\n  );\n\n  const handleEditNameChange = (e) => {\n    setEditName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Table\n        height={420}\n        data={getData()}\n        sortColumn={sortColumn}\n        sortType={sortType}\n        onSortColumn={handleSortColumn}\n        loading={loading}\n        autoHeight={true}\n        cellBordered={false}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"transparent\",\n          borderRadius: \"1rem\",\n          border: \"1px solid #fff\",\n        }}\n      >\n        <Column\n          sortable\n          align=\"center\"\n          flexGrow={2}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Field Name\n          </HeaderCell>\n          <Cell dataKey=\"name\" />\n        </Column>\n\n        <Column\n          sortable\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Created at\n          </HeaderCell>\n          <Cell dataKey=\"created_at\" />\n        </Column>\n\n        <Column\n          sortable\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Area\n          </HeaderCell>\n          <Cell dataKey=\"area\" />\n        </Column>\n\n        <Column\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell\n            style={{\n              backgroundColor: \"#3f4257\",\n              color: \"white\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button onClick={() => fetchPolygons()}>\n              <RefreshIcon style={{ color: \"white\" }} />\n            </Button>\n          </HeaderCell>\n          <EditPolygonsCell />\n        </Column>\n      </Table>\n\n      <Dialog\n        fullWidth\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        BackdropProps={{ style: { backgroundColor: \"rgba(0,0,0,0.5)\" } }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">Edit field name</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Enter field name\"\n              variant=\"outlined\"\n              defaultValue={editName}\n              value={editName}\n              fullWidth\n              onChange={handleEditNameChange}\n              required\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            onClick={EditPolygon}\n            color=\"primary\"\n            disabled={editName === \"\" ? true : false}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullWidth\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        BackdropProps={{ style: { backgroundColor: \"rgba(0,0,0,0.5)\" } }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirm delete</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this field?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => setDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => DeletePolygon(polygonToDelete)}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n});\n\nexport default DashboardPolygonTable;\n","D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\components\\Weather_Widget\\WeatherWidget.js",[],"D:\\Shared Data\\Coding Folder\\Agri D Map\\src\\pages\\Statistics\\styles.js",[],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":2,"column":25,"nodeType":"366","messageId":"367","endLine":2,"endColumn":33},{"ruleId":"364","severity":1,"message":"368","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":13},{"ruleId":"364","severity":1,"message":"369","line":4,"column":15,"nodeType":"366","messageId":"367","endLine":4,"endColumn":25},{"ruleId":"364","severity":1,"message":"370","line":4,"column":27,"nodeType":"366","messageId":"367","endLine":4,"endColumn":31},{"ruleId":"364","severity":1,"message":"371","line":5,"column":8,"nodeType":"366","messageId":"367","endLine":5,"endColumn":12},{"ruleId":"364","severity":1,"message":"372","line":23,"column":9,"nodeType":"366","messageId":"367","endLine":23,"endColumn":16},{"ruleId":"364","severity":1,"message":"373","line":38,"column":10,"nodeType":"366","messageId":"367","endLine":38,"endColumn":24},{"ruleId":"374","severity":1,"message":"375","line":66,"column":6,"nodeType":"376","endLine":66,"endColumn":8,"suggestions":"377"},{"ruleId":"374","severity":1,"message":"378","line":70,"column":6,"nodeType":"376","endLine":70,"endColumn":43,"suggestions":"379"},{"ruleId":"364","severity":1,"message":"380","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":22},{"ruleId":"364","severity":1,"message":"381","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":13},{"ruleId":"364","severity":1,"message":"382","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":22},{"ruleId":"364","severity":1,"message":"383","line":27,"column":10,"nodeType":"366","messageId":"367","endLine":27,"endColumn":17},{"ruleId":"364","severity":1,"message":"384","line":3,"column":16,"nodeType":"366","messageId":"367","endLine":3,"endColumn":22},{"ruleId":"364","severity":1,"message":"385","line":19,"column":9,"nodeType":"366","messageId":"367","endLine":19,"endColumn":27},{"ruleId":"364","severity":1,"message":"386","line":77,"column":9,"nodeType":"366","messageId":"367","endLine":77,"endColumn":21},{"ruleId":"360","replacedBy":"387"},{"ruleId":"362","replacedBy":"388"},{"ruleId":"364","severity":1,"message":"389","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":12},{"ruleId":"364","severity":1,"message":"390","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":7},{"ruleId":"364","severity":1,"message":"391","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":11},{"ruleId":"364","severity":1,"message":"392","line":9,"column":3,"nodeType":"366","messageId":"367","endLine":9,"endColumn":6},{"ruleId":"364","severity":1,"message":"370","line":10,"column":3,"nodeType":"366","messageId":"367","endLine":10,"endColumn":7},{"ruleId":"364","severity":1,"message":"393","line":14,"column":18,"nodeType":"366","messageId":"367","endLine":14,"endColumn":26},{"ruleId":"364","severity":1,"message":"394","line":15,"column":24,"nodeType":"366","messageId":"367","endLine":15,"endColumn":41},{"ruleId":"364","severity":1,"message":"395","line":16,"column":13,"nodeType":"366","messageId":"367","endLine":16,"endColumn":24},{"ruleId":"364","severity":1,"message":"396","line":17,"column":13,"nodeType":"366","messageId":"367","endLine":17,"endColumn":23},{"ruleId":"364","severity":1,"message":"397","line":18,"column":11,"nodeType":"366","messageId":"367","endLine":18,"endColumn":19},{"ruleId":"364","severity":1,"message":"398","line":27,"column":10,"nodeType":"366","messageId":"367","endLine":27,"endColumn":15},{"ruleId":"364","severity":1,"message":"384","line":27,"column":29,"nodeType":"366","messageId":"367","endLine":27,"endColumn":35},{"ruleId":"364","severity":1,"message":"399","line":28,"column":8,"nodeType":"366","messageId":"367","endLine":28,"endColumn":20},{"ruleId":"364","severity":1,"message":"400","line":29,"column":8,"nodeType":"366","messageId":"367","endLine":29,"endColumn":18},{"ruleId":"364","severity":1,"message":"401","line":37,"column":27,"nodeType":"366","messageId":"367","endLine":37,"endColumn":34},{"ruleId":"364","severity":1,"message":"402","line":40,"column":7,"nodeType":"366","messageId":"367","endLine":40,"endColumn":15},{"ruleId":"364","severity":1,"message":"403","line":71,"column":7,"nodeType":"366","messageId":"367","endLine":71,"endColumn":20},{"ruleId":"364","severity":1,"message":"404","line":100,"column":7,"nodeType":"366","messageId":"367","endLine":100,"endColumn":19},{"ruleId":"364","severity":1,"message":"405","line":103,"column":8,"nodeType":"366","messageId":"367","endLine":103,"endColumn":16},{"ruleId":"364","severity":1,"message":"406","line":103,"column":18,"nodeType":"366","messageId":"367","endLine":103,"endColumn":29},{"ruleId":"364","severity":1,"message":"407","line":104,"column":8,"nodeType":"366","messageId":"367","endLine":104,"endColumn":21},{"ruleId":"364","severity":1,"message":"408","line":104,"column":23,"nodeType":"366","messageId":"367","endLine":104,"endColumn":39},{"ruleId":"364","severity":1,"message":"409","line":105,"column":8,"nodeType":"366","messageId":"367","endLine":105,"endColumn":25},{"ruleId":"364","severity":1,"message":"410","line":105,"column":27,"nodeType":"366","messageId":"367","endLine":105,"endColumn":47},{"ruleId":"364","severity":1,"message":"411","line":106,"column":8,"nodeType":"366","messageId":"367","endLine":106,"endColumn":29},{"ruleId":"364","severity":1,"message":"412","line":106,"column":31,"nodeType":"366","messageId":"367","endLine":106,"endColumn":55},{"ruleId":"364","severity":1,"message":"413","line":107,"column":8,"nodeType":"366","messageId":"367","endLine":107,"endColumn":19},{"ruleId":"364","severity":1,"message":"414","line":107,"column":21,"nodeType":"366","messageId":"367","endLine":107,"endColumn":35},{"ruleId":"364","severity":1,"message":"415","line":108,"column":8,"nodeType":"366","messageId":"367","endLine":108,"endColumn":20},{"ruleId":"364","severity":1,"message":"416","line":108,"column":22,"nodeType":"366","messageId":"367","endLine":108,"endColumn":35},{"ruleId":"364","severity":1,"message":"417","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":15},{"ruleId":"364","severity":1,"message":"418","line":24,"column":8,"nodeType":"366","messageId":"367","endLine":24,"endColumn":20},{"ruleId":"364","severity":1,"message":"394","line":5,"column":24,"nodeType":"366","messageId":"367","endLine":5,"endColumn":41},{"ruleId":"364","severity":1,"message":"419","line":6,"column":17,"nodeType":"366","messageId":"367","endLine":6,"endColumn":31},{"ruleId":"364","severity":1,"message":"420","line":7,"column":17,"nodeType":"366","messageId":"367","endLine":7,"endColumn":31},{"ruleId":"364","severity":1,"message":"421","line":8,"column":16,"nodeType":"366","messageId":"367","endLine":8,"endColumn":25},{"ruleId":"364","severity":1,"message":"422","line":9,"column":21,"nodeType":"366","messageId":"367","endLine":9,"endColumn":32},{"ruleId":"364","severity":1,"message":"423","line":10,"column":19,"nodeType":"366","messageId":"367","endLine":10,"endColumn":30},{"ruleId":"364","severity":1,"message":"424","line":11,"column":18,"nodeType":"366","messageId":"367","endLine":11,"endColumn":25},{"ruleId":"364","severity":1,"message":"425","line":50,"column":7,"nodeType":"366","messageId":"367","endLine":50,"endColumn":16},{"ruleId":"364","severity":1,"message":"426","line":54,"column":9,"nodeType":"366","messageId":"367","endLine":54,"endColumn":17},{"ruleId":"427","severity":1,"message":"428","line":59,"column":7,"nodeType":"366","messageId":"429","endLine":59,"endColumn":19},{"ruleId":"374","severity":1,"message":"430","line":19,"column":19,"nodeType":"431","endLine":19,"endColumn":36},{"ruleId":"364","severity":1,"message":"368","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":11},{"ruleId":"364","severity":1,"message":"432","line":10,"column":8,"nodeType":"366","messageId":"367","endLine":10,"endColumn":19},{"ruleId":"364","severity":1,"message":"433","line":12,"column":8,"nodeType":"366","messageId":"367","endLine":12,"endColumn":17},{"ruleId":"364","severity":1,"message":"434","line":21,"column":8,"nodeType":"366","messageId":"367","endLine":21,"endColumn":13},{"ruleId":"364","severity":1,"message":"435","line":41,"column":10,"nodeType":"366","messageId":"367","endLine":41,"endColumn":22},{"ruleId":"436","severity":1,"message":"437","line":255,"column":62,"nodeType":"438","messageId":"439","endLine":255,"endColumn":63},{"ruleId":"364","severity":1,"message":"440","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":36},{"ruleId":"364","severity":1,"message":"441","line":8,"column":10,"nodeType":"366","messageId":"367","endLine":8,"endColumn":19},{"ruleId":"364","severity":1,"message":"442","line":8,"column":21,"nodeType":"366","messageId":"367","endLine":8,"endColumn":33},{"ruleId":"364","severity":1,"message":"443","line":9,"column":21,"nodeType":"366","messageId":"367","endLine":9,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":22,"column":28,"nodeType":"446","messageId":"447","endLine":22,"endColumn":30},{"ruleId":"444","severity":1,"message":"445","line":24,"column":28,"nodeType":"446","messageId":"447","endLine":24,"endColumn":30},{"ruleId":"364","severity":1,"message":"448","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"449","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":16},{"ruleId":"364","severity":1,"message":"448","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"450","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":20},{"ruleId":"364","severity":1,"message":"384","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"364","severity":1,"message":"451","line":51,"column":10,"nodeType":"366","messageId":"367","endLine":51,"endColumn":15},{"ruleId":"374","severity":1,"message":"452","line":64,"column":6,"nodeType":"376","endLine":64,"endColumn":8,"suggestions":"453"},{"ruleId":"364","severity":1,"message":"454","line":18,"column":3,"nodeType":"366","messageId":"367","endLine":18,"endColumn":17},{"ruleId":"455","severity":1,"message":"456","line":12,"column":5,"nodeType":"457","messageId":"458","endLine":12,"endColumn":15},{"ruleId":"455","severity":1,"message":"459","line":64,"column":5,"nodeType":"457","messageId":"458","endLine":64,"endColumn":10},{"ruleId":"364","severity":1,"message":"460","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":9},{"ruleId":"364","severity":1,"message":"461","line":14,"column":3,"nodeType":"366","messageId":"367","endLine":14,"endColumn":8},{"ruleId":"364","severity":1,"message":"462","line":16,"column":3,"nodeType":"366","messageId":"367","endLine":16,"endColumn":13},{"ruleId":"364","severity":1,"message":"463","line":32,"column":9,"nodeType":"366","messageId":"367","endLine":32,"endColumn":16},{"ruleId":"364","severity":1,"message":"426","line":45,"column":9,"nodeType":"366","messageId":"367","endLine":45,"endColumn":17},{"ruleId":"444","severity":1,"message":"445","line":57,"column":28,"nodeType":"446","messageId":"447","endLine":57,"endColumn":30},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'history' is assigned a value but never used.","'firstPolygonId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromDateUNIX' and 'toDateUNIX'. Either include them or remove the dependency array.","ArrayExpression",["466"],"React Hook useEffect has a missing dependency: 'getNDVI'. Either include it or remove the dependency array.",["467"],"'LoadingOverlay' is defined but never used.","'Audio' is defined but never used.","'FileUplaodIcon' is defined but never used.","'loading' is assigned a value but never used.","'Button' is defined but never used.","'availableTimeslots' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["464"],["465"],"'InputBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'AddIcon' is defined but never used.","'DateFnsUtils' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'isDesktop' is assigned a value but never used.","'isMobile' is assigned a value but never used.","no-redeclare","'userDispatch' is already defined.","redeclared","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'imageLoading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'chartData' is assigned a value but never used.","'setChartData' is assigned a value but never used.","'setChartDate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Dropzone' is defined but never used.","'makeStyles' is defined but never used.","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.image'. Either include it or remove the dependency array. If 'setImage' needs the current value of 'props.image', you can also switch to useReducer instead of useState and read 'props.image' in the reducer.",["468"],"'useLayoutState' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","Duplicate key 'color'.","'useRef' is defined but never used.","'Modal' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},"Update the dependencies array to be: [fromDateUNIX, toDateUNIX]",{"range":"475","text":"476"},"Update the dependencies array to be: [toDateUNIX, fromDateUNIX, polygonId, getNDVI]",{"range":"477","text":"478"},"Update the dependencies array to be: [props.image]",{"range":"479","text":"480"},[2327,2329],"[fromDateUNIX, toDateUNIX]",[2373,2410],"[toDateUNIX, fromDateUNIX, polygonId, getNDVI]",[1836,1838],"[props.image]"]