[{"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/index.js":"1","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/serviceWorker.js":"2","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/LayoutContext.js":"3","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/App.js":"4","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/UserContext.js":"5","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/index.js":"6","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/Layout.js":"7","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/Error.js":"8","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/Login.js":"9","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/default.js":"10","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/Statistics.js":"11","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/Charts.js":"12","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexHeatmap.js":"13","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexLineChart.js":"14","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/PageTitle.js":"15","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/Widget.js":"16","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/styles.js":"17","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/styles.js":"18","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/NDVI_Layers.js":"19","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/PolygonsTable.js":"20","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Charts/NDVI_Chart.js":"21","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Wrappers/Wrappers.js":"22","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/styles.js":"23","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/styles.js":"24","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/styles.js":"25","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/Vari.js":"26","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js":"27","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/tables/Tables.js":"28","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/Maps.js":"29","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/Typography.js":"30","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/Notifications.js":"31","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/Dashboard.js":"32","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/Header.js":"33","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/Sidebar.js":"34","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/Icons.js":"35","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/styles.js":"36","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/styles.js":"37","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/Image_Picker.js":"38","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js":"39","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/styles.js":"40","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/styles.js":"41","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/styles.js":"42","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Weather_Widget/WeatherWidget.js":"43","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/styles.js":"44","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"45","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/UserAvatar.js":"46","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/styles.js":"47","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/Notification.js":"48","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/styles.js":"49","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/styles.js":"50","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/Dot.js":"51","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js":"52","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/styles.js":"53","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/styles.js":"54","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/styles.js":"55","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/mock.js":"56","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/components/Table/Table.js":"57","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Webcam/Webcam.js":"58","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Audio_Player/Audio_Player.js":"59","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Tab/Tab.js":"60"},{"size":869,"mtime":1633025995997,"results":"61","hashOfConfig":"62"},{"size":4948,"mtime":1618263416000,"results":"63","hashOfConfig":"62"},{"size":1392,"mtime":1618263416000,"results":"64","hashOfConfig":"62"},{"size":1715,"mtime":1633025940609,"results":"65","hashOfConfig":"62"},{"size":1977,"mtime":1618263416000,"results":"66","hashOfConfig":"62"},{"size":502,"mtime":1618263416000,"results":"67","hashOfConfig":"62"},{"size":2275,"mtime":1633255491593,"results":"68","hashOfConfig":"62"},{"size":1571,"mtime":1618263416000,"results":"69","hashOfConfig":"62"},{"size":8758,"mtime":1629189251132,"results":"70","hashOfConfig":"62"},{"size":2987,"mtime":1618263416000,"results":"71","hashOfConfig":"62"},{"size":5536,"mtime":1635420419475,"results":"72","hashOfConfig":"62"},{"size":5556,"mtime":1632834226309,"results":"73","hashOfConfig":"62"},{"size":1794,"mtime":1632834226309,"results":"74","hashOfConfig":"62"},{"size":1328,"mtime":1632834226313,"results":"75","hashOfConfig":"62"},{"size":427,"mtime":1632834226286,"results":"76","hashOfConfig":"62"},{"size":2485,"mtime":1632834226299,"results":"77","hashOfConfig":"62"},{"size":969,"mtime":1632834226306,"results":"78","hashOfConfig":"62"},{"size":462,"mtime":1632834226289,"results":"79","hashOfConfig":"62"},{"size":8447,"mtime":1638938899453,"results":"80","hashOfConfig":"62"},{"size":3880,"mtime":1633783895228,"results":"81","hashOfConfig":"62"},{"size":5146,"mtime":1638773623237,"results":"82","hashOfConfig":"62"},{"size":3790,"mtime":1632834209189,"results":"83","hashOfConfig":"62"},{"size":3361,"mtime":1627796859864,"results":"84","hashOfConfig":"62"},{"size":1334,"mtime":1618263416000,"results":"85","hashOfConfig":"62"},{"size":680,"mtime":1618263416000,"results":"86","hashOfConfig":"62"},{"size":3083,"mtime":1639226170043,"results":"87","hashOfConfig":"62"},{"size":3997,"mtime":1639294122535,"results":"88","hashOfConfig":"62"},{"size":2082,"mtime":1632834226363,"results":"89","hashOfConfig":"62"},{"size":971,"mtime":1632834226339,"results":"90","hashOfConfig":"62"},{"size":4506,"mtime":1632834226363,"results":"91","hashOfConfig":"62"},{"size":13470,"mtime":1632834226346,"results":"92","hashOfConfig":"62"},{"size":6374,"mtime":1638727583871,"results":"93","hashOfConfig":"62"},{"size":9914,"mtime":1632834226283,"results":"94","hashOfConfig":"62"},{"size":4226,"mtime":1633255345445,"results":"95","hashOfConfig":"62"},{"size":377833,"mtime":1632834226329,"results":"96","hashOfConfig":"62"},{"size":331,"mtime":1630570274648,"results":"97","hashOfConfig":"62"},{"size":330,"mtime":1639153521481,"results":"98","hashOfConfig":"62"},{"size":937,"mtime":1639243505005,"results":"99","hashOfConfig":"62"},{"size":5516,"mtime":1633437571832,"results":"100","hashOfConfig":"62"},{"size":1749,"mtime":1629096633284,"results":"101","hashOfConfig":"62"},{"size":3907,"mtime":1627566897234,"results":"102","hashOfConfig":"62"},{"size":1522,"mtime":1633164564476,"results":"103","hashOfConfig":"62"},{"size":2805,"mtime":1638937124288,"results":"104","hashOfConfig":"62"},{"size":780,"mtime":1632834226339,"results":"105","hashOfConfig":"62"},{"size":4380,"mtime":1627570127491,"results":"106","hashOfConfig":"62"},{"size":593,"mtime":1632834226289,"results":"107","hashOfConfig":"62"},{"size":1771,"mtime":1639118787312,"results":"108","hashOfConfig":"62"},{"size":3296,"mtime":1632834202209,"results":"109","hashOfConfig":"62"},{"size":1858,"mtime":1632834226363,"results":"110","hashOfConfig":"62"},{"size":276,"mtime":1632834127575,"results":"111","hashOfConfig":"62"},{"size":862,"mtime":1618263416000,"results":"112","hashOfConfig":"62"},{"size":2193,"mtime":1627575172512,"results":"113","hashOfConfig":"62"},{"size":993,"mtime":1618263416000,"results":"114","hashOfConfig":"62"},{"size":374,"mtime":1632834226363,"results":"115","hashOfConfig":"62"},{"size":171,"mtime":1632834226339,"results":"116","hashOfConfig":"62"},{"size":4105,"mtime":1618263416000,"results":"117","hashOfConfig":"62"},{"size":1274,"mtime":1627636511007,"results":"118","hashOfConfig":"62"},{"size":1664,"mtime":1639242036697,"results":"119","hashOfConfig":"62"},{"size":1320,"mtime":1639291639523,"results":"120","hashOfConfig":"62"},{"size":1785,"mtime":1639294055011,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1xnk6j6",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/index.js",[],["259","260"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/serviceWorker.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/LayoutContext.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/App.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/UserContext.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/index.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/Layout.js",["261","262","263","264"],"import React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from \"@material-ui/core\";\nimport Icon from \"@mdi/react\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Image_Segmentation from \"../../pages/Image_Segmentation/Image_Segmentation\";\nimport Vari from \"../../pages/Vari/Vari\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport Statistics from \"../../pages/Statistics/Statistics\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/statistics\" component={Statistics} />\n            <Route path=\"/app/segmentation\" component={Image_Segmentation} />\n\n            <Route path=\"/app/vari\" component={Vari} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/tables\" component={Tables} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n          </Switch>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/Error.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/Login.js",["265"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"demo@demo.com\");\n  var [loginPasswordValue, setLoginPasswordValue] = useState(\"demo\");\n\n  var [signupValue, setSignupValue] = useState(\"\");\n  var [signupPasswordValue, setSignupPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\n      </div> */}\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"Sign up\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.greeting}>\n                Welcome Back!\n              </Typography>\n              {/* <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div> */}\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginPasswordValue}\n                onChange={(e) => setLoginPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || loginPasswordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        loginPasswordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.submitButton}\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forgot Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              {/* <Typography variant=\"h2\" className={classes.greeting}>\n                Welcome!\n              </Typography> */}\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={(e) => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupValue}\n                onChange={(e) => setSignupValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupPasswordValue}\n                onChange={(e) => setSignupPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        signupValue,\n                        signupPasswordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      signupValue.length === 0 ||\n                      signupPasswordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/default.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/Statistics.js",["266","267","268","269"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// import useStyles from \"./styles.js\";\n\nimport NDVIChart from \"../../components/Charts/NDVI_Chart\";\n// import WeatherChart from \"../../components/WeatherChart/WeatherChart\";\nimport PolygonTable from \"../../components/PolygonsTable/PolygonsTable\";\nimport NDVILayers from \"./NDVI_Layers\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function Statistics(props) {\n  const initialToDate = new Date();\n  const UNIX_initialToDate = initialToDate.getTime() / 1000;\n\n  const priorDate = new Date();\n  priorDate.setDate(priorDate.getDate() - 30);\n\n  const UNIX_initialFromDate = priorDate.getTime() / 1000;\n\n  const initialDate = new Date();\n  initialDate.setDate(initialDate.getDate() - 30);\n\n  const [fromDate, setfromDate] = useState(initialDate);\n  const [toDate, settoDate] = useState(new Date());\n  const [fromDateUNIX, setfromDateUNIX] = useState(UNIX_initialFromDate);\n  const [toDateUNIX, settoDateUNIX] = useState(UNIX_initialToDate);\n  const [NDVI_data, setNDVI_data] = useState([]);\n  const [polygonId, setPolygonId] = useState(\"\");\n  const [firstPolygonId, setFirstPolygonId] = useState(\"\");\n  const [mountComponent, setMountComponent] = useState(false);\n\n  useEffect(() => {\n    let firstPolygon;\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons?appid=b22d00c2f91807b86822083ead929d76`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        firstPolygon = data[0].id;\n        setPolygonId(firstPolygon);\n        setFirstPolygonId(firstPolygon);\n        setTimeout(() => {\n          setMountComponent(true);\n        }, 1000);\n      });\n\n    setTimeout(() => {\n      console.log(firstPolygon);\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/ndvi/history?polyid=${firstPolygon}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=b22d00c2f91807b86822083ead929d76`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setNDVI_data(data);\n        });\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    getNDVI();\n  }, [toDateUNIX, fromDateUNIX, polygonId]);\n\n  const handleFromDateChange = (date) => {\n    setfromDate(date);\n    const UNIX_dateFrom = date.getTime() / 1000;\n    setfromDateUNIX(UNIX_dateFrom);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleToDateChange = (date) => {\n    settoDate(date);\n    const UNIX_dateTo = date.getTime() / 1000;\n    settoDateUNIX(UNIX_dateTo);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleChange = (value) => {\n    setPolygonId(value);\n    setTimeout(() => {\n      setMountComponent(true);\n    }, 1000);\n  };\n\n  const getNDVI = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        `https://api.agromonitoring.com/agro/1.0/ndvi/history?polyid=${polygonId}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=b22d00c2f91807b86822083ead929d76`,\n      );\n      const data = await rawResponse.json();\n      setNDVI_data(data);\n    })();\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        item\n        md={12}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          margin: \"10px\",\n          padding: \"20px\",\n        }}\n      >\n        <PolygonTable onChange={handleChange} value={polygonId} />\n      </Grid>\n      <Grid\n        container\n        style={{\n          margin: \"10px\",\n          padding: \"20px\",\n          // backgroundColor: \"#373368\",\n          // color: \"white\",\n          borderRadius: \"10px\",\n        }}\n      >\n        <Grid item md={5}>\n          <h4>Historical</h4>\n          <h2>NDVI</h2>\n        </Grid>\n        <Grid item md={3}></Grid>\n        <Grid\n          item\n          md={4}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              label=\"From\"\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n            />\n          </MuiPickersUtilsProvider>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              label=\"To\"\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={toDate}\n              onChange={handleToDateChange}\n              maxDate={new Date()}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item md={12}>\n          {\" \"}\n          {NDVI_data.length > 0 && <NDVIChart data={NDVI_data} />}\n        </Grid>\n      </Grid>\n\n      <Grid item md={12}>\n        {mountComponent && (\n          <NDVILayers\n            fromDateUNIX={fromDateUNIX}\n            toDateUNIX={toDateUNIX}\n            polygonId={polygonId}\n          />\n        )}\n      </Grid>\n      {/* {mountComponent && (\n          <WeatherChart firstPolygon={firstPolygonId} polygonId={polygonId} />\n        )} */}\n    </Grid>\n  );\n}\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/Charts.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexHeatmap.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexLineChart.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/PageTitle.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/Widget.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/NDVI_Layers.js",["270","271","272","273","274"],"import React, { useState, useEffect } from \"react\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n\nfunction NDVILayers(props) {\n  const initialDate = new Date();\n  initialDate.setDate(initialDate.getDate() - 30);\n\n  const [metric, setMetric] = useState(\"ndvi\");\n  const [layersData, setLayersData] = useState([]);\n  const [tableData, setTableData] = useState({});\n  const [metricDate, setMetricDate] = useState(\"\");\n  const [imageURL, setImageURL] = useState();\n  const [imageLoading, setImageLoading] = useState();\n\n  useEffect(() => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/image/search?start=${props.fromDateUNIX}&end=${props.toDateUNIX}&polyid=${props.polygonId}&appid=${API_KEY}`,\n    )\n      .then((response) => response.json())\n\n      .then((data) => {\n        const dataB = data;\n        setLayersData(dataB);\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  }, [props]);\n\n  const handleDateChange = (event) => {\n    setMetricDate(event.target.value);\n    const required_layer_object = layersData.filter(\n      (layer) => layer.dt === event.target.value,\n    );\n    switchFunction(metric, required_layer_object);\n    setImageLoading(true);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    const required_layer_object = layersData.filter(\n      (layer) => layer.dt === metricDate,\n    );\n    switchFunction(event.target.value, required_layer_object);\n  };\n\n  const switchFunction = (value, required_layer_object) => {\n    switch (value) {\n      case \"ndvi\":\n        setImageURL(required_layer_object[0].image.ndvi);\n        fetchStatsData(required_layer_object[0].stats.ndvi);\n        break;\n      case \"evi\":\n        setImageURL(required_layer_object[0].image.evi);\n        fetchStatsData(required_layer_object[0].stats.evi);\n        break;\n      case \"evi2\":\n        setImageURL(required_layer_object[0].image.evi2);\n        fetchStatsData(required_layer_object[0].stats.evi2);\n        break;\n      case \"ndwi\":\n        setImageURL(required_layer_object[0].image.ndwi);\n        fetchStatsData(required_layer_object[0].stats.ndwi);\n        break;\n      case \"nri\":\n        setImageURL(required_layer_object[0].image.nri);\n        fetchStatsData(required_layer_object[0].stats.nri);\n        break;\n      case \"dswi\":\n        setImageURL(required_layer_object[0].image.dswi);\n        fetchStatsData(required_layer_object[0].stats.dswi);\n        break;\n      default:\n        console.log(\"Incorrect choice\");\n    }\n    setImageLoading(false);\n  };\n\n  const fetchStatsData = (url) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setTableData(data);\n      });\n  };\n\n  const formatDate = (d) => {\n    const date = new Date(d * 1000);\n    return (\n      date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()\n    );\n  };\n\n  const Layers = () => {\n    const standard_date = formatDate(metricDate);\n    return (\n      <Card>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>{standard_date}</TableCell>\n                <TableCell align=\"right\">{metric.toUpperCase()}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Maximum\n                </TableCell>\n                <TableCell align=\"right\">{tableData.max.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Minimum\n                </TableCell>\n                <TableCell align=\"right\">{tableData.min.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Mean\n                </TableCell>\n                <TableCell align=\"right\">{tableData.mean.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Median\n                </TableCell>\n                <TableCell align=\"right\">\n                  {tableData.median.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Deviation\n                </TableCell>\n                <TableCell align=\"right\">{tableData.std.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Number of pixels\n                </TableCell>\n                <TableCell align=\"right\">{tableData.num.toFixed(0)}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Card>\n    );\n  };\n\n  var dateToBeSelected;\n\n  return (\n    <div>\n      <Box\n        style={{\n          width: \"400px\",\n          margin: \"50px 20px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"space-around\",\n        }}\n      >\n        {\" \"}\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Select Date</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={metricDate}\n            label=\"date\"\n            defaultValue={\n              layersData.length > 0 ? formatDate(layersData[1].dt) : \"\"\n            }\n            onChange={(e) => handleDateChange(e)}\n          >\n            {layersData.map(\n              (layer, i) => (\n                (dateToBeSelected = formatDate(layer.dt)),\n                (\n                  <MenuItem value={layer.dt} key={i}>\n                    {dateToBeSelected}\n                  </MenuItem>\n                )\n              ),\n            )}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Select Metric</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={metric}\n            label=\"metric\"\n            onChange={(e) => handleMetricChange(e)}\n          >\n            <MenuItem value=\"ndvi\">NDVI</MenuItem>\n            <MenuItem value=\"evi\">EVI</MenuItem>\n            <MenuItem value=\"evi2\">EVI2</MenuItem>\n            <MenuItem value=\"ndwi\">NDWI</MenuItem>\n            <MenuItem value=\"nri\">NRI</MenuItem>\n            <MenuItem value=\"dswi\">DSWI</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item md={4}>\n          {\" \"}\n          {tableData.max && <Layers />}\n        </Grid>\n        <Grid item md={6}>\n          {tableData.max && (\n            <img src={imageURL} alt=\"loading\" height=\"300\" width=\"400\"></img>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default NDVILayers;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/PolygonsTable.js",["275"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n\nconst PolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://api.agromonitoring.com/agro/1.0/polygons?appid=${API_KEY}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setValue(data[0].id);\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n          data[i].area.toFixed(1);\n        });\n        setdata(data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 10);\n  };\n\n  const handleChange = (event) => {\n    props.onChange(event.target.value);\n    setValue(event.target.value);\n  };\n\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\n    <Cell {...props} sstyle={{ padding: \"auto 0px\" }}>\n      <div>\n        <Radio\n          checked={value === rowData.id}\n          onChange={handleChange}\n          value={rowData.id}\n          name=\"radio-button\"\n          inputProps={{ \"aria-label\": \"A\" }}\n        />\n      </div>\n    </Cell>\n  );\n\n  return loading ? (\n    <div style={{ height: \"200px\" }}>\n      <img\n        src=\"/horizontal-loader.gif\"\n        alt=\"loader\"\n        style={{ display: \"block\", margin: \"auto\" }}\n      ></img>\n    </div>\n  ) : (\n    <Table\n      height={420}\n      data={getData()}\n      sortColumn={sortColumn}\n      sortType={sortType}\n      onSortColumn={handleSortColumn}\n      loading={loading}\n      autoHeight={true}\n      hover={false}\n      rowHeight={60}\n      headerHeight={50}\n      // cellBordered={false}\n      // bordered={false}\n      style={{\n        width: \"80%\",\n      }}\n    >\n      <Column width={200} align=\"center\" fixed>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Select a polygon\n        </HeaderCell>\n        <CheckCell dataKey=\"id\" />\n      </Column>\n\n      <Column width={250} fixed sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Polygon Name\n        </HeaderCell>\n        <Cell dataKey=\"name\" />\n      </Column>\n\n      <Column width={200} sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Created at\n        </HeaderCell>\n        <Cell dataKey=\"created_at\" />\n      </Column>\n\n      <Column width={150} sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Area\n        </HeaderCell>\n        <Cell dataKey=\"area\" />\n      </Column>\n    </Table>\n  );\n};\n\nexport default PolygonTable;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Charts/NDVI_Chart.js",["276","277","278","279","280"],"import React, { useState, useEffect } from \"react\";\n// import { Chart, LineAdvance, Axis } from \"bizcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction NDVIChart(props) {\n  let result = [];\n  // const [options, setOptions] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [chartDate, setChartDate] = useState([]);\n  result.push({\n    name: \"Maximum\",\n    data: [],\n  });\n  result.push({\n    name: \"Minimum\",\n    data: [],\n  });\n  result.push({\n    name: \"Mean\",\n    data: [],\n  });\n  props.data.map((item, i) => {\n    var unixTimestamp = props.data[i].dt;\n    var date = new Date(unixTimestamp * 1000);\n    const standard_date =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n    result[0].data.push(item.data.max.toFixed(2));\n    result[1].data.push(item.data.min.toFixed(2));\n    result[2].data.push(item.data.mean.toFixed(2));\n    // setChartDate((prevState) => [...prevState, standard_date]);\n    chartDate.push(standard_date);\n    console.log(\"result array: \" + result);\n  });\n\n  const options = {\n    chart: {\n      borderRadius: 10,\n      foreColor: \"#373d3f\",\n      height: \"auto\",\n      type: \"line\",\n      // background: \"#373368\",\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 3,\n    },\n    // title: {\n    //   text: \"NDVI Statistics\",\n    //   margin: 20,\n    //   style: {\n    //     fontSize: \"18px\",\n    //     fontWeight: \"light\",\n    //     color: \"white\",\n    //   },\n    //   align: \"center\",\n    // },\n\n    legend: {\n      show: true,\n      showForSingleSeries: false,\n      showForNullSeries: true,\n      showForZeroSeries: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      fontFamily: \"Helvetica, Arial\",\n      fontWeight: 400,\n      formatter: undefined,\n      inverseOrder: false,\n      height: 50,\n      tooltipHoverFormatter: function (val, opts) {\n        return (\n          val +\n          \" - \" +\n          opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\n          \"\"\n        );\n      },\n      customLegendItems: [],\n      offsetX: 0,\n      offsetY: 0,\n      labels: {\n        // colors: \"#fff\",\n        useSeriesColors: false,\n      },\n      markers: {\n        width: 12,\n        height: 12,\n        strokeWidth: 0,\n        // strokeColor: \"#fff\",\n        fillColors: undefined,\n        radius: 12,\n        customHTML: undefined,\n        onClick: undefined,\n        offsetX: 0,\n        offsetY: 0,\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 0,\n      },\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n\n    xaxis: {\n      categories: chartDate.reverse(),\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    // grid: {\n    //   borderColor: \"red\",\n    //   strokeDashArray: 0,\n    //   position: \"back\",\n    //   show: true,\n    //   xaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    //   yaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    // },\n    theme: {\n      pallete: \"palette1\",\n      // mode: \"dark\",\n    },\n    tooltip: {\n      theme: false,\n      y: [\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      ],\n    },\n    colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n    responsive: [\n      {\n        breakpoint: 1000,\n        options: {\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    animations: {\n      enabled: true,\n      easing: \"easeinout\",\n      speed: 800,\n      animateGradually: {\n        enabled: true,\n        delay: 150,\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 350,\n      },\n    },\n  };\n\n  return (\n    // <Chart\n    //   padding={\"auto\"}\n    //   appendPadding={10}\n    //   scale={{ date: { type: \"cat\", nice: false } }}\n    //   autoFit\n    //   height={300}\n    //   data={result}\n    // >\n    //   <LineAdvance shape=\"smooth\" point position=\"date*value\" color=\"label\" />\n    //   <Axis\n    //     name=\"date\"\n    //     label={{\n    //       rotate: 0.5,\n    //       autoRotate: true,\n    //       style: { textAlign: \"start\", fontSize: 11 },\n    //     }}\n    //   />\n    // </Chart>\n    <ReactApexChart\n      options={options}\n      series={result}\n      type=\"line\"\n      height={350}\n      style={{ borderRadius: \"5px\" }}\n    />\n  );\n}\n\nexport default NDVIChart;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Wrappers/Wrappers.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/Vari.js",["281","282","283"],"import React from \"react\";\nimport ImagePicker from \"../../components/Image_Picker/Image_Picker\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst clientId = \"IoAOqmmySnC58B2PDyV6uQ\";\nconst clientSecret = \"liqJb6t8lDlLIiclaGuogFzmFNBZrsaz\";\n\nfunction Vari() {\n  const classes = useStyles();\n\n  function range(start, end) {\n    return Array(end - start + 1)\n      .fill()\n      .map((_, idx) => start + idx);\n  }\n  var result = range(0, 1000);\n\n  const availableTimeslots = result.map((id) => {\n    return {\n      id,\n      startTime: new Date(\n        new Date(new Date().setDate(new Date().getDate() + id)).setHours(\n          9,\n          0,\n          0,\n          0,\n        ),\n      ),\n      endTime: new Date(\n        new Date(new Date().setDate(new Date().getDate() + id)).setHours(\n          21,\n          0,\n          0,\n          0,\n        ),\n      ),\n    };\n  });\n\n  // React.useEffect(() => {\n  //   if (router.query.code) {\n  //     fetch(\"/connectZoom\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ code: router.query.code }),\n  //     })\n  //       .then(() => {\n  //         /* Show success message to user */\n  //       })\n  //       .catch(() => {\n  //         /* Show error message to user */\n  //       });\n  //   }\n  // }, [router.query.code]);\n\n  var options = {\n    method: \"POST\",\n    qs: {\n      grant_type: \"authorization_code\",\n      //The code below is a sample authorization code. Replace it with your actual authorization code while making requests.\n      code: \"B1234558uQ\",\n      //The uri below is a sample redirect_uri. Replace it with your actual redirect_uri while making requests.\n      redirect_uri: \"http://localhost:3000/#/app/vari\",\n    },\n    headers: {\n      /**The credential below is a sample base64 encoded credential. Replace it with \"Authorization: 'Basic ' + Buffer.from(your_app_client_id + ':' + your_app_client_secret).toString('base64')\"\n       **/\n      Authorization:\n        \"Basic \" +\n        Buffer.from(clientId + \":\" + clientSecret).toString(\"base64\"),\n    },\n  };\n\n  const handleSubmit = (data) => {\n    fetch(\"https://zoom.us/oauth/token\", options)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3} className={classes.grid_container}>\n        <Grid item md={12} sm={12}>\n          <h3>Vari Calculation</h3>\n        </Grid>\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          <ImagePicker url=\"http://localhost:5000/vari\" />\n        </Grid>\n\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          {/* <Button>\n            <a\n              href={`https://zoom.us/oauth/authorize?response_type=code&client_id=IoAOqmmySnC58B2PDyV6uQ&redirect_uri=http://localhost:3000/#/app/vari`}\n            >\n              Connect Zoom\n            </a>\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Vari;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js",["284","285"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/tables/Tables.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/Maps.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/Typography.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/Notifications.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/Dashboard.js",["286","287","288"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n// import Audio_Player from \"../../components/Audio_Player/Audio_Player\";\n\nimport Geocode from \"react-geocode\";\n\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from \"@turf/turf\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport WeatherWidget from \"../../components/Weather_Widget/WeatherWidget\";\nimport DashboardPolygonTable from \"../../components/PolygonsTable/DashboardPolygonTable\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoic2FsbWFuLWluYXlhdCIsImEiOiJja3U3OGNzZzQzNHVlMm9xaG9sZmtoOXI3In0.rF7GhHsrNL8YPMUCLCI92A\";\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const draw = useRef(null);\n  const [lng, setLng] = useState(73.1386);\n  const [lat, setLat] = useState(33.6762);\n  const [zoom, setZoom] = useState(8);\n  const [roundedArea, setroundedArea] = useState(0);\n  const [location, setLocation] = useState({\n    latitude: 32,\n    longitude: 73,\n  });\n  const [city, setCity] = useState(\"\");\n  const [polygon, setPolygon] = useState({});\n\n  const [polygonName, setpolygonName] = useState(\"\");\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      });\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   getCity();\n  // }, [location.latitude, location.longitude]);\n\n  const getCity = () => {\n    return Geocode.fromLatLng(location.latitude, location.longitude).then(\n      (response) => {\n        let city;\n        for (\n          let i = 0;\n          i < response.results[0].address_components.length;\n          i++\n        ) {\n          for (\n            let j = 0;\n            j < response.results[0].address_components[i].types.length;\n            j++\n          ) {\n            switch (response.results[0].address_components[i].types[j]) {\n              case \"locality\":\n                city = response.results[0].address_components[i].long_name;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n        setCity(city);\n      },\n      (error) => {\n        console.error(error);\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/salman-inayat/cku817f1m079d18mqqh70gguw\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    draw.current = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true,\n      },\n      defaultMode: \"draw_polygon\",\n    });\n    map.current.addControl(draw.current);\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    map.current.on(\"draw.create\", updateArea);\n    map.current.on(\"draw.delete\", updateArea);\n    map.current.on(\"draw.update\", updateArea);\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  const showMyLocation = () => {\n    if (!map.current) return;\n    map.current.flyTo({\n      center: [location.longitude, location.latitude],\n      essential: true,\n      zoom: zoom,\n      speed: 0.8, // make the flying slow\n      curve: 1,\n    });\n  };\n\n  function updateArea(e) {\n    const data = draw.current.getAll();\n    const polygonData = turf.polygon(data.features[0].geometry.coordinates, {\n      name: { polygonName },\n    });\n\n    setPolygon(polygonData);\n\n    if (data.features.length > 0) {\n      const area = turf.area(data);\n      setroundedArea(Math.round(area * 100) / 100 / 10000);\n    } else {\n      if (e.type !== \"draw.delete\") alert(\"Click the map to draw a polygon.\");\n    }\n  }\n\n  const createPolygon = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        \"http://api.agromonitoring.com/agro/1.0/polygons?appid=b22d00c2f91807b86822083ead929d76\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ geo_json: polygon, name: polygonName }),\n        },\n      );\n      const content = await rawResponse.json();\n      console.log(content);\n    })();\n    setpolygonName(\"\");\n  };\n\n  const handlePolygonNameChange = (e) => {\n    setpolygonName(e.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={7}>\n        <Grid item md={12} style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              left: \"10px\",\n              zIndex: \"2\",\n              backgroundColor: \"white\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n            }}\n          >\n            <p>Click the map to draw a polygon.</p>\n            <div> {roundedArea} ha</div>\n          </div>\n          <div ref={mapContainer} className={classes.map_container} />\n        </Grid>\n        <Button onClick={showMyLocation} variant=\"contained\" color=\"primary\">\n          Locate Me\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={5}>\n        <WeatherWidget location={location} />\n      </Grid>\n\n      <Grid item md={12}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Enter polygon name\"\n          variant=\"outlined\"\n          value={polygonName}\n          onChange={handlePolygonNameChange}\n        />\n        <Button onClick={createPolygon} variant=\"contained\" color=\"primary\">\n          Create polygon\n        </Button>\n      </Grid>\n      <Grid item md={12}>\n        <DashboardPolygonTable />\n      </Grid>\n    </Grid>\n  );\n}\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/Header.js",["289","290","291","292","293","294","295","296","297"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Agri D Map\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        {/* <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(e) => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map((message) => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map((notification) => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              John Doe\n            </Typography>\n            {/* <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              Flalogic.com\n            </Typography> */}\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/Sidebar.js",["298","299","300","301","302","303","304"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  { id: 1, label: \"Statistics\", link: \"/app/statistics\", icon: <HomeIcon /> },\n  {\n    id: 2,\n    label: \"Image Segmentation\",\n    link: \"/app/segmentation\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 3,\n    label: \"Vari  Calculation\",\n    link: \"/app/vari\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 4,\n    label: \"Demo page\",\n    // link: \"/app/dashboard\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 5,\n    label: \"Demo page\",\n    // link: \"/app/dashboard\",\n    icon: <HomeIcon />,\n  },\n  // {\n  //   id: 2,\n  //   label: \"Typography\",\n  //   link: \"/app/typography\",\n  //   icon: <TypographyIcon />,\n  // },\n  // { id: 3, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n  // {\n  //   id: 4,\n  //   label: \"Notifications\",\n  //   link: \"/app/notifications\",\n  //   icon: <NotificationsIcon />,\n  // },\n  // {\n  //   id: 5,\n  //   label: \"UI Elements\",\n  //   link: \"/app/ui\",\n  //   icon: <UIElementsIcon />,\n  //   children: [\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\n  //   ],\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n      // style={{ backgroundColor: \"#373368\" }}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <div className={classes.userArea}>\n        <img src=\"/person.png\" className={classes.sideBarImage} alt=\"\" />\n        <h3>John Doe</h3>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/Icons.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/Image_Picker.js",["305","306"],"import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport ImageUploader from \"react-images-upload\";\n\nfunction ImagePicker(props) {\n  const classes = useStyles();\n\n  const onDrop = (pictureFile, pictureDataURL) => {\n    if (pictureDataURL.length > 0) {\n      props.handleImage(pictureDataURL[0]);\n    } else {\n      console.log(\"No image selected\");\n      props.handleImagePresent(false);\n    }\n  };\n\n  return (\n    <div className={classes.image_picker_container}>\n      <ImageUploader\n        singleImage={true}\n        withPreview={true}\n        withIcon={true}\n        buttonText=\"Choose an image\"\n        onChange={onDrop}\n        imgExtension={[\".jpg\", \".png\"]}\n        label=\"Max file size: 10MB, accepted: JPG, PNG\"\n        // maxFileSize={10242880}\n      />\n    </div>\n  );\n}\n\nexport default ImagePicker;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js",["307"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst DashboardPolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [editName, setEditName] = useState(\"\");\n  const [polygonId, setPolygonId] = useState();\n\n  const API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n  useEffect(() => {\n    fetchPolygons();\n  }, []);\n\n  const fetchPolygons = () => {\n    fetch(`http://api.agromonitoring.com/agro/1.0/polygons?appid=${API_KEY}`)\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n        });\n        setdata(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 5);\n  };\n\n  const ModalClick = (id) => {\n    setOpen(true);\n    setPolygonId(id);\n  };\n\n  const EditPolygon = () => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${polygonId}?appid=${API_KEY}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: editName,\n        }),\n      },\n    );\n    setOpen(false);\n    setEditName(\"\");\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const DeletePolygon = (id) => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${id}?appid=${API_KEY}`,\n      {\n        method: \"DELETE\",\n      },\n    );\n    console.log(\"Delete polygon id: \", id);\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const EditPolygonsCell = ({\n    rowData,\n    onChange,\n    checkedKeys,\n    dataKey,\n    ...props\n  }) => (\n    <Cell {...props} style={{ padding: 0 }}>\n      <div style={{ lineHeight: \"46px\" }}>\n        <Button>\n          <EditIcon onClick={() => ModalClick(rowData.id)} />\n        </Button>\n        |\n        <Button onClick={() => DeletePolygon(rowData.id)}>\n          <DeleteIcon />\n        </Button>\n      </div>\n    </Cell>\n  );\n\n  const handleEditNameChange = (e) => {\n    setEditName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Table\n        height={300}\n        width={900}\n        data={getData()}\n        sortColumn={sortColumn}\n        sortType={sortType}\n        onSortColumn={handleSortColumn}\n        loading={loading}\n        autoHeight={true}\n      >\n        <Column width={250} fixed sortable align=\"center\">\n          <HeaderCell>Polygon Name </HeaderCell>\n          <Cell dataKey=\"name\" />\n        </Column>\n\n        <Column width={250} sortable align=\"center\">\n          <HeaderCell>Created at</HeaderCell>\n          <Cell dataKey=\"created_at\" />\n        </Column>\n\n        <Column width={250} sortable align=\"center\">\n          <HeaderCell>Area</HeaderCell>\n          <Cell dataKey=\"area\" />\n        </Column>\n\n        <Column width={150} align=\"center\">\n          <HeaderCell>\n            <Button onClick={() => fetchPolygons()}>\n              <RefreshIcon />\n            </Button>\n          </HeaderCell>\n          <EditPolygonsCell />\n        </Column>\n      </Table>\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            backgroundColor: \"white\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"500px\",\n            height: \"200px\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter polygon name\"\n            variant=\"outlined\"\n            value={editName}\n            onChange={handleEditNameChange}\n          />\n          <Button onClick={EditPolygon} variant=\"contained\" color=\"primary\">\n            Update Polygon\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DashboardPolygonTable;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Weather_Widget/WeatherWidget.js",["308","309","310","311"],"import React, { useState, useEffect } from \"react\";\n\nimport ReactWeather from \"react-open-weather-widget\";\nimport \"react-open-weather-widget/lib/css/ReactWeather.css\";\n\n// mapbox access token\nvar ACCESS_TOKEN =\n  \"pk.eyJ1Ijoic2FsbWFuLWluYXlhdCIsImEiOiJja3U3OGNzZzQzNHVlMm9xaG9sZmtoOXI3In0.rF7GhHsrNL8YPMUCLCI92A\";\n\n// LocationIQ access token\nvar access_token = \"pk.e83540a57ec2bee941bf85a4d0a2186c\";\n\n// geolocation-db access token\nvar token = \"8dd79c70-0801-11ec-a29f-e381a788c2c0\";\n\nexport default function WeatherWidget(props) {\n  const customStyles = {\n    fontFamily: \"Helvetica, sans-serif\",\n    gradientStart: \"#0181C2\",\n    gradientMid: \"#04A7F9\",\n    gradientEnd: \"#4BC4F7\",\n    locationFontColor: \"#FFF\",\n    todayTempFontColor: \"#FFF\",\n    todayDateFontColor: \"#B5DEF4\",\n    todayRangeFontColor: \"#B5DEF4\",\n    todayDescFontColor: \"#B5DEF4\",\n    todayInfoFontColor: \"#B5DEF4\",\n    todayIconColor: \"#FFF\",\n    forecastBackgroundColor: \"#FFF\",\n    forecastSeparatorColor: \"#DDD\",\n    forecastDateColor: \"#777\",\n    forecastDescColor: \"#777\",\n    forecastRangeColor: \"#777\",\n    forecastIconColor: \"#4BC4F7\",\n  };\n\n  const [city, setCity] = useState();\n  const [status, setStatus] = useState(null);\n\n  const reverseGeocoding = function (latitude, longitude) {\n    var url = `https://us1.locationiq.com/v1/reverse.php?key=${access_token}&lat=${latitude}&lon=${longitude}&format=json`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCity(data.address.city);\n        console.log(data.address.city);\n      });\n  };\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\",\n  };\n\n  const getData = async () => {\n    const res = await fetch(\"/json/\");\n    console.log(res);\n    //  setIP(res.data.IPv4);\n  };\n\n  useEffect(() => {\n    // var url = `https://cors-anywhere.herokuapp.com/https://geolocation-db.com/json/${token}`;\n\n    setStatus(\"Fetching location...\");\n    // getData();\n    // fetch(`/json/${token}/111.68.97.206`)\n    //   .then((response) => response.text())\n    //   .then((result) => console.log(result))\n    //   .catch((error) => console.log(\"error\", error));\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(position.coords.latitude, position.coords.longitude);\n\n      reverseGeocoding(position.coords.latitude, position.coords.longitude);\n    });\n  }, []);\n\n  return (\n    <div>\n      {city ? (\n        <ReactWeather\n          forecast=\"5days\"\n          apikey=\"f6973195b3a29969a6ad7e393d2ac38b\"\n          type=\"city\"\n          city={city}\n          theme={customStyles}\n        />\n      ) : (\n        <div>\n          <h4>{status}</h4>\n        </div>\n      )}\n    </div>\n  );\n}\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/UserAvatar.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/Notification.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/Dot.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js",["312","313"],"import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    // color: \"white\",\n    background: \"linear-gradient(to right, #373368, #373368)\",\n    backgroundRepeat: \"no-repeat\",\n    transition: \"background-size 1s 0s\",\n    transform: \"perspective(1px) translateZ(0)\",\n    position: \"relative\",\n    transition: \"color 0.3s\",\n    \"&:hover\": {\n      color: \"black\",\n      \"& $linkIcon\": {\n        color: \"#373368\",\n      },\n      \"& $linkText\": {\n        color: \"#373368\",\n      },\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\",\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      zIndex: \"-1\",\n      background: \"white\",\n      transform: \"scaleX(0)\",\n      transformOrigin: \"0 50%;\",\n      transition: \"transform 0.3s ease-out\",\n    },\n    \"&:hover:before\": {\n      transform: \"scaleX(1)\",\n    },\n  },\n  externalLink: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n  linkActive: {\n    background: \"white\",\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"white\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  linkIconActive: {\n    // color: theme.palette.primary.main,\n    color: \"#373368\",\n  },\n  linkText: {\n    padding: 0,\n    color: \"white\",\n    // color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: \"#373368\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/mock.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/components/Table/Table.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Webcam/Webcam.js",["314"],"import React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@material-ui/core\";\n\nconst WebcamCapture = (props) => {\n  const [image, setImage] = useState(\"\");\n  const webcamRef = useRef(null);\n\n  const videoConstraints = {\n    width: 300,\n    height: 300,\n    facingMode: \"user\",\n  };\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n    props.handleImage(imageSrc);\n  });\n\n  const retake = () => {\n    setImage(\"\");\n    props.handleImagePresent(false);\n  };\n\n  return (\n    <div className=\"webcam-container\">\n      <div className=\"webcam-img\">\n        {image === \"\" ? (\n          <Webcam\n            audio={false}\n            height={300}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            width={250}\n            videoConstraints={videoConstraints}\n          />\n        ) : (\n          <img src={image} alt=\"img\" />\n        )}\n      </div>\n      <div>\n        {image !== \"\" ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              retake();\n            }}\n            className=\"webcam-btn\"\n          >\n            Retake Image\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              capture();\n            }}\n            className=\"webcam-btn\"\n          >\n            Capture\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WebcamCapture;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Audio_Player/Audio_Player.js",["315","316"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AudioPlayer from \"material-ui-audio-player\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\",\n      },\n    },\n    loopIcon: {\n      color: \"#3f51b5\",\n      \"&.selected\": {\n        color: \"#0921a9\",\n      },\n      \"&:hover\": {\n        color: \"#7986cb\",\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n    playIcon: {\n      color: \"#f50057\",\n      \"&:hover\": {\n        color: \"#ff4081\",\n      },\n    },\n    replayIcon: {\n      color: \"#e6e600\",\n    },\n    pauseIcon: {\n      color: \"#0099ff\",\n    },\n    volumeIcon: {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    volumeSlider: {\n      color: \"black\",\n    },\n    progressTime: {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    mainSlider: {\n      color: \"#3f51b5\",\n      \"& .MuiSlider-rail\": {\n        color: \"#7986cb\",\n      },\n      \"& .MuiSlider-track\": {\n        color: \"#3f51b5\",\n      },\n      \"& .MuiSlider-thumb\": {\n        color: \"#303f9f\",\n      },\n    },\n  };\n});\n\nfunction Audio(props) {\n  return <AudioPlayer width=\"300px\" useStyles={useStyles} src={props.audio} />;\n}\n\nexport default Audio;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Tab/Tab.js",["317"],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":13},{"ruleId":"322","severity":1,"message":"326","line":4,"column":15,"nodeType":"324","messageId":"325","endLine":4,"endColumn":25},{"ruleId":"322","severity":1,"message":"327","line":4,"column":27,"nodeType":"324","messageId":"325","endLine":4,"endColumn":31},{"ruleId":"322","severity":1,"message":"328","line":5,"column":8,"nodeType":"324","messageId":"325","endLine":5,"endColumn":12},{"ruleId":"322","severity":1,"message":"329","line":13,"column":8,"nodeType":"324","messageId":"325","endLine":13,"endColumn":18},{"ruleId":"322","severity":1,"message":"330","line":11,"column":8,"nodeType":"324","messageId":"325","endLine":11,"endColumn":14},{"ruleId":"322","severity":1,"message":"331","line":35,"column":10,"nodeType":"324","messageId":"325","endLine":35,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":63,"column":6,"nodeType":"334","endLine":63,"endColumn":8,"suggestions":"335"},{"ruleId":"332","severity":1,"message":"336","line":67,"column":6,"nodeType":"334","endLine":67,"endColumn":43,"suggestions":"337"},{"ruleId":"322","severity":1,"message":"338","line":10,"column":8,"nodeType":"324","messageId":"325","endLine":10,"endColumn":19},{"ruleId":"322","severity":1,"message":"339","line":11,"column":8,"nodeType":"324","messageId":"325","endLine":11,"endColumn":19},{"ruleId":"322","severity":1,"message":"340","line":12,"column":8,"nodeType":"324","messageId":"325","endLine":12,"endColumn":17},{"ruleId":"322","severity":1,"message":"341","line":33,"column":10,"nodeType":"324","messageId":"325","endLine":33,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":212,"column":58,"nodeType":"344","messageId":"345","endLine":212,"endColumn":59},{"ruleId":"346","severity":1,"message":"347","line":21,"column":28,"nodeType":"348","messageId":"349","endLine":21,"endColumn":30},{"ruleId":"322","severity":1,"message":"350","line":1,"column":27,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"322","severity":1,"message":"351","line":8,"column":10,"nodeType":"324","messageId":"325","endLine":8,"endColumn":19},{"ruleId":"322","severity":1,"message":"352","line":8,"column":21,"nodeType":"324","messageId":"325","endLine":8,"endColumn":33},{"ruleId":"322","severity":1,"message":"353","line":9,"column":21,"nodeType":"324","messageId":"325","endLine":9,"endColumn":33},{"ruleId":"346","severity":1,"message":"347","line":22,"column":28,"nodeType":"348","messageId":"349","endLine":22,"endColumn":30},{"ruleId":"322","severity":1,"message":"330","line":3,"column":16,"nodeType":"324","messageId":"325","endLine":3,"endColumn":22},{"ruleId":"322","severity":1,"message":"354","line":19,"column":9,"nodeType":"324","messageId":"325","endLine":19,"endColumn":27},{"ruleId":"322","severity":1,"message":"355","line":77,"column":9,"nodeType":"324","messageId":"325","endLine":77,"endColumn":21},{"ruleId":"322","severity":1,"message":"356","line":9,"column":8,"nodeType":"324","messageId":"325","endLine":9,"endColumn":13},{"ruleId":"322","severity":1,"message":"357","line":15,"column":10,"nodeType":"324","messageId":"325","endLine":15,"endColumn":16},{"ruleId":"322","severity":1,"message":"358","line":24,"column":8,"nodeType":"324","messageId":"325","endLine":24,"endColumn":20},{"ruleId":"322","severity":1,"message":"359","line":43,"column":10,"nodeType":"324","messageId":"325","endLine":43,"endColumn":14},{"ruleId":"322","severity":1,"message":"360","line":61,"column":9,"nodeType":"324","messageId":"325","endLine":61,"endColumn":16},{"ruleId":"322","severity":1,"message":"327","line":10,"column":3,"nodeType":"324","messageId":"325","endLine":10,"endColumn":7},{"ruleId":"322","severity":1,"message":"361","line":14,"column":18,"nodeType":"324","messageId":"325","endLine":14,"endColumn":26},{"ruleId":"322","severity":1,"message":"362","line":15,"column":24,"nodeType":"324","messageId":"325","endLine":15,"endColumn":41},{"ruleId":"322","severity":1,"message":"363","line":27,"column":10,"nodeType":"324","messageId":"325","endLine":27,"endColumn":15},{"ruleId":"322","severity":1,"message":"330","line":27,"column":29,"nodeType":"324","messageId":"325","endLine":27,"endColumn":35},{"ruleId":"322","severity":1,"message":"364","line":102,"column":8,"nodeType":"324","messageId":"325","endLine":102,"endColumn":21},{"ruleId":"322","severity":1,"message":"365","line":102,"column":23,"nodeType":"324","messageId":"325","endLine":102,"endColumn":39},{"ruleId":"322","severity":1,"message":"366","line":104,"column":8,"nodeType":"324","messageId":"325","endLine":104,"endColumn":29},{"ruleId":"322","severity":1,"message":"367","line":104,"column":31,"nodeType":"324","messageId":"325","endLine":104,"endColumn":55},{"ruleId":"322","severity":1,"message":"362","line":5,"column":24,"nodeType":"324","messageId":"325","endLine":5,"endColumn":41},{"ruleId":"322","severity":1,"message":"368","line":6,"column":17,"nodeType":"324","messageId":"325","endLine":6,"endColumn":31},{"ruleId":"322","severity":1,"message":"369","line":7,"column":17,"nodeType":"324","messageId":"325","endLine":7,"endColumn":31},{"ruleId":"322","severity":1,"message":"370","line":8,"column":16,"nodeType":"324","messageId":"325","endLine":8,"endColumn":25},{"ruleId":"322","severity":1,"message":"371","line":9,"column":21,"nodeType":"324","messageId":"325","endLine":9,"endColumn":32},{"ruleId":"322","severity":1,"message":"372","line":10,"column":19,"nodeType":"324","messageId":"325","endLine":10,"endColumn":30},{"ruleId":"322","severity":1,"message":"373","line":11,"column":18,"nodeType":"324","messageId":"325","endLine":11,"endColumn":25},{"ruleId":"322","severity":1,"message":"374","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"375","line":2,"column":8,"nodeType":"324","messageId":"325","endLine":2,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":29,"column":28,"nodeType":"348","messageId":"349","endLine":29,"endColumn":30},{"ruleId":"322","severity":1,"message":"376","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":17},{"ruleId":"322","severity":1,"message":"377","line":14,"column":5,"nodeType":"324","messageId":"325","endLine":14,"endColumn":10},{"ruleId":"322","severity":1,"message":"378","line":53,"column":7,"nodeType":"324","messageId":"325","endLine":53,"endColumn":21},{"ruleId":"322","severity":1,"message":"379","line":59,"column":9,"nodeType":"324","messageId":"325","endLine":59,"endColumn":16},{"ruleId":"380","severity":1,"message":"381","line":12,"column":5,"nodeType":"382","messageId":"383","endLine":12,"endColumn":15},{"ruleId":"380","severity":1,"message":"384","line":64,"column":5,"nodeType":"382","messageId":"383","endLine":64,"endColumn":10},{"ruleId":"332","severity":1,"message":"385","line":15,"column":19,"nodeType":"386","endLine":15,"endColumn":36},{"ruleId":"322","severity":1,"message":"374","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"330","line":4,"column":8,"nodeType":"324","messageId":"325","endLine":4,"endColumn":14},{"ruleId":"322","severity":1,"message":"387","line":8,"column":8,"nodeType":"324","messageId":"325","endLine":8,"endColumn":18},"no-native-reassign",["388"],"no-negated-in-lhs",["389"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'classnames' is defined but never used.","'Button' is defined but never used.","'firstPolygonId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromDateUNIX' and 'toDateUNIX'. Either include them or remove the dependency array.","ArrayExpression",["390"],"React Hook useEffect has a missing dependency: 'getNDVI'. Either include it or remove the dependency array.",["391"],"'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'imageLoading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'chartData' is assigned a value but never used.","'setChartData' is assigned a value but never used.","'setChartDate' is assigned a value but never used.","'availableTimeslots' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Audio' is defined but never used.","'result' is assigned a value but never used.","'DateFnsUtils' is defined but never used.","'city' is assigned a value but never used.","'getCity' is assigned a value but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'useState' is defined but never used.","'Dropzone' is defined but never used.","'ACCESS_TOKEN' is assigned a value but never used.","'token' is assigned a value but never used.","'requestOptions' is assigned a value but never used.","'getData' is assigned a value but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","Duplicate key 'color'.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [fromDateUNIX, toDateUNIX]",{"range":"396","text":"397"},"Update the dependencies array to be: [toDateUNIX, fromDateUNIX, polygonId, getNDVI]",{"range":"398","text":"399"},[2207,2209],"[fromDateUNIX, toDateUNIX]",[2253,2290],"[toDateUNIX, fromDateUNIX, polygonId, getNDVI]"]