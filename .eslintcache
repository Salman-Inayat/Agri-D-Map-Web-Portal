[{"/home/salman-inayat/Desktop/Agri D Map/src/index.js":"1","/home/salman-inayat/Desktop/Agri D Map/src/serviceWorker.js":"2","/home/salman-inayat/Desktop/Agri D Map/src/context/LayoutContext.js":"3","/home/salman-inayat/Desktop/Agri D Map/src/components/App.js":"4","/home/salman-inayat/Desktop/Agri D Map/src/context/UserContext.js":"5","/home/salman-inayat/Desktop/Agri D Map/src/themes/index.js":"6","/home/salman-inayat/Desktop/Agri D Map/src/components/Layout/Layout.js":"7","/home/salman-inayat/Desktop/Agri D Map/src/pages/error/Error.js":"8","/home/salman-inayat/Desktop/Agri D Map/src/pages/login/Login.js":"9","/home/salman-inayat/Desktop/Agri D Map/src/themes/default.js":"10","/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/Charts.js":"11","/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/components/ApexLineChart.js":"12","/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/components/ApexHeatmap.js":"13","/home/salman-inayat/Desktop/Agri D Map/src/components/PageTitle/PageTitle.js":"14","/home/salman-inayat/Desktop/Agri D Map/src/components/Widget/Widget.js":"15","/home/salman-inayat/Desktop/Agri D Map/src/components/PageTitle/styles.js":"16","/home/salman-inayat/Desktop/Agri D Map/src/components/Widget/styles.js":"17","/home/salman-inayat/Desktop/Agri D Map/src/components/Wrappers/Wrappers.js":"18","/home/salman-inayat/Desktop/Agri D Map/src/pages/login/styles.js":"19","/home/salman-inayat/Desktop/Agri D Map/src/pages/error/styles.js":"20","/home/salman-inayat/Desktop/Agri D Map/src/components/Layout/styles.js":"21","/home/salman-inayat/Desktop/Agri D Map/src/pages/tables/Tables.js":"22","/home/salman-inayat/Desktop/Agri D Map/src/pages/maps/Maps.js":"23","/home/salman-inayat/Desktop/Agri D Map/src/pages/notifications/Notifications.js":"24","/home/salman-inayat/Desktop/Agri D Map/src/pages/typography/Typography.js":"25","/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/Dashboard.js":"26","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/Sidebar.js":"27","/home/salman-inayat/Desktop/Agri D Map/src/components/Header/Header.js":"28","/home/salman-inayat/Desktop/Agri D Map/src/pages/icons/Icons.js":"29","/home/salman-inayat/Desktop/Agri D Map/src/components/Header/styles.js":"30","/home/salman-inayat/Desktop/Agri D Map/src/pages/icons/styles.js":"31","/home/salman-inayat/Desktop/Agri D Map/src/components/UserAvatar/UserAvatar.js":"32","/home/salman-inayat/Desktop/Agri D Map/src/components/Notification/Notification.js":"33","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/styles.js":"34","/home/salman-inayat/Desktop/Agri D Map/src/pages/typography/styles.js":"35","/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/styles.js":"36","/home/salman-inayat/Desktop/Agri D Map/src/pages/notifications/styles.js":"37","/home/salman-inayat/Desktop/Agri D Map/src/pages/maps/styles.js":"38","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/Dot.js":"39","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"40","/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/mock.js":"41","/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/components/Table/Table.js":"42","/home/salman-inayat/Desktop/Agri D Map/src/components/Notification/styles.js":"43","/home/salman-inayat/Desktop/Agri D Map/src/components/UserAvatar/styles.js":"44","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js":"45","/home/salman-inayat/Desktop/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js":"46","/home/salman-inayat/Desktop/Agri D Map/src/components/Image_Picker/Image_Picker.js":"47","/home/salman-inayat/Desktop/Agri D Map/src/pages/Image_Segmentation/styles.js":"48","/home/salman-inayat/Desktop/Agri D Map/src/components/Image_Picker/styles.js":"49","/home/salman-inayat/Desktop/Agri D Map/src/components/Audio_Player/Audio_Player.js":"50","/home/salman-inayat/Desktop/Agri D Map/src/pages/Vari/Vari.js":"51","/home/salman-inayat/Desktop/Agri D Map/src/pages/Vari/styles.js":"52","/home/salman-inayat/Desktop/Agri D Map/src/components/Weather_Widget/WeatherWidget.js":"53","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/Statistics.js":"54","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/styles.js":"55","/home/salman-inayat/Desktop/Agri D Map/src/components/PolygonsTable/PolygonsTable.js":"56","/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/WeatherChart.js":"57","/home/salman-inayat/Desktop/Agri D Map/src/components/Charts/NDVI_Chart.js":"58","/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/base.js":"59","/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/utils.js":"60","/home/salman-inayat/Desktop/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js":"61","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/NDVI_Layers.js":"62","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/index.js":"63","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/serviceWorker.js":"64","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/LayoutContext.js":"65","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/App.js":"66","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/UserContext.js":"67","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/index.js":"68","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/Layout.js":"69","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/Login.js":"70","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/Error.js":"71","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/default.js":"72","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/Statistics.js":"73","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/NDVI_Layers.js":"74","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/styles.js":"75","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/PolygonsTable.js":"76","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Charts/NDVI_Chart.js":"77","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/WeatherChart/WeatherChart.js":"78","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/styles.js":"79","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/styles.js":"80","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/Vari.js":"81","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js":"82","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/styles.js":"83","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/Charts.js":"84","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/Maps.js":"85","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/tables/Tables.js":"86","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/Typography.js":"87","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/Notifications.js":"88","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/Icons.js":"89","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/Dashboard.js":"90","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/Sidebar.js":"91","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/Header.js":"92","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/styles.js":"93","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/styles.js":"94","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/Image_Picker.js":"95","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/styles.js":"96","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/mock.js":"97","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/styles.js":"98","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/styles.js":"99","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/styles.js":"100","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/styles.js":"101","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js":"102","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexHeatmap.js":"103","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexLineChart.js":"104","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/styles.js":"105","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Weather_Widget/WeatherWidget.js":"106","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/PageTitle.js":"107","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/Widget.js":"108","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Wrappers/Wrappers.js":"109","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/components/Table/Table.js":"110","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/styles.js":"111","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/styles.js":"112","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/Notification.js":"113","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"114","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/UserAvatar.js":"115","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/styles.js":"116","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/styles.js":"117","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/styles.js":"118","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/Dot.js":"119","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js":"120","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/styles.js":"121"},{"size":869,"mtime":1633025995997,"results":"122","hashOfConfig":"123"},{"size":4948,"mtime":1618263416000,"results":"124","hashOfConfig":"123"},{"size":1392,"mtime":1618263416000,"results":"125","hashOfConfig":"123"},{"size":1715,"mtime":1633025940609,"results":"126","hashOfConfig":"123"},{"size":1977,"mtime":1618263416000,"results":"127","hashOfConfig":"123"},{"size":502,"mtime":1618263416000,"results":"128","hashOfConfig":"123"},{"size":2275,"mtime":1633255491593,"results":"129","hashOfConfig":"123"},{"size":1571,"mtime":1618263416000,"results":"130","hashOfConfig":"123"},{"size":8758,"mtime":1629189251132,"results":"131","hashOfConfig":"123"},{"size":2987,"mtime":1618263416000,"results":"132","hashOfConfig":"123"},{"size":5556,"mtime":1632834226309,"results":"133","hashOfConfig":"123"},{"size":1328,"mtime":1632834226313,"results":"134","hashOfConfig":"123"},{"size":1794,"mtime":1632834226309,"results":"135","hashOfConfig":"123"},{"size":427,"mtime":1632834226286,"results":"136","hashOfConfig":"123"},{"size":2485,"mtime":1632834226299,"results":"137","hashOfConfig":"123"},{"size":462,"mtime":1632834226289,"results":"138","hashOfConfig":"123"},{"size":969,"mtime":1632834226306,"results":"139","hashOfConfig":"123"},{"size":3790,"mtime":1632834209189,"results":"140","hashOfConfig":"123"},{"size":3361,"mtime":1627796859864,"results":"141","hashOfConfig":"123"},{"size":1334,"mtime":1618263416000,"results":"142","hashOfConfig":"123"},{"size":680,"mtime":1618263416000,"results":"143","hashOfConfig":"123"},{"size":2082,"mtime":1632834226363,"results":"144","hashOfConfig":"123"},{"size":971,"mtime":1632834226339,"results":"145","hashOfConfig":"123"},{"size":13470,"mtime":1632834226346,"results":"146","hashOfConfig":"123"},{"size":4506,"mtime":1632834226363,"results":"147","hashOfConfig":"123"},{"size":6357,"mtime":1633783972352,"results":"148","hashOfConfig":"123"},{"size":4226,"mtime":1633255345445,"results":"149","hashOfConfig":"123"},{"size":9914,"mtime":1632834226283,"results":"150","hashOfConfig":"123"},{"size":377833,"mtime":1632834226329,"results":"151","hashOfConfig":"123"},{"size":3907,"mtime":1627566897234,"results":"152","hashOfConfig":"123"},{"size":780,"mtime":1632834226339,"results":"153","hashOfConfig":"123"},{"size":593,"mtime":1632834226289,"results":"154","hashOfConfig":"123"},{"size":3296,"mtime":1632834202209,"results":"155","hashOfConfig":"123"},{"size":1749,"mtime":1629096633284,"results":"156","hashOfConfig":"123"},{"size":374,"mtime":1632834226363,"results":"157","hashOfConfig":"123"},{"size":1522,"mtime":1633164564476,"results":"158","hashOfConfig":"123"},{"size":1858,"mtime":1632834226363,"results":"159","hashOfConfig":"123"},{"size":171,"mtime":1632834226339,"results":"160","hashOfConfig":"123"},{"size":862,"mtime":1618263416000,"results":"161","hashOfConfig":"123"},{"size":4380,"mtime":1627570127491,"results":"162","hashOfConfig":"123"},{"size":4105,"mtime":1618263416000,"results":"163","hashOfConfig":"123"},{"size":1274,"mtime":1627636511007,"results":"164","hashOfConfig":"123"},{"size":993,"mtime":1618263416000,"results":"165","hashOfConfig":"123"},{"size":276,"mtime":1632834127575,"results":"166","hashOfConfig":"123"},{"size":2193,"mtime":1627575172512,"results":"167","hashOfConfig":"123"},{"size":982,"mtime":1628314949830,"results":"168","hashOfConfig":"123"},{"size":1862,"mtime":1632914609986,"results":"169","hashOfConfig":"123"},{"size":331,"mtime":1627658696298,"results":"170","hashOfConfig":"123"},{"size":1771,"mtime":1628837408211,"results":"171","hashOfConfig":"123"},{"size":1949,"mtime":1632914896086,"results":"172","hashOfConfig":"123"},{"size":1033,"mtime":1630571258430,"results":"173","hashOfConfig":"123"},{"size":331,"mtime":1630570274648,"results":"174","hashOfConfig":"123"},{"size":1337,"mtime":1633162450972,"results":"175","hashOfConfig":"123"},{"size":5586,"mtime":1633947504454,"results":"176","hashOfConfig":"123"},{"size":0,"mtime":1633243333088,"results":"177","hashOfConfig":"123"},{"size":3880,"mtime":1633783895228,"results":"178","hashOfConfig":"123"},{"size":10313,"mtime":1633687100498,"results":"179","hashOfConfig":"123"},{"size":5449,"mtime":1633947687512,"results":"180","hashOfConfig":"123"},{"size":988,"mtime":1633356780260,"results":"181","hashOfConfig":"123"},{"size":2210,"mtime":1633356740246,"results":"182","hashOfConfig":"123"},{"size":5516,"mtime":1633437571832,"results":"183","hashOfConfig":"123"},{"size":8248,"mtime":1633759415809,"results":"184","hashOfConfig":"123"},{"size":869,"mtime":1633025995997,"results":"185","hashOfConfig":"186"},{"size":4948,"mtime":1618263416000,"results":"187","hashOfConfig":"186"},{"size":1392,"mtime":1618263416000,"results":"188","hashOfConfig":"186"},{"size":1715,"mtime":1633025940609,"results":"189","hashOfConfig":"186"},{"size":1977,"mtime":1618263416000,"results":"190","hashOfConfig":"186"},{"size":502,"mtime":1618263416000,"results":"191","hashOfConfig":"186"},{"size":2275,"mtime":1633255491593,"results":"192","hashOfConfig":"186"},{"size":8758,"mtime":1629189251132,"results":"193","hashOfConfig":"186"},{"size":1571,"mtime":1618263416000,"results":"194","hashOfConfig":"186"},{"size":2987,"mtime":1618263416000,"results":"195","hashOfConfig":"186"},{"size":5586,"mtime":1633947504454,"results":"196","hashOfConfig":"186"},{"size":8248,"mtime":1633759415809,"results":"197","hashOfConfig":"186"},{"size":0,"mtime":1633243333088,"results":"198","hashOfConfig":"186"},{"size":3880,"mtime":1633783895228,"results":"199","hashOfConfig":"186"},{"size":5449,"mtime":1633947687512,"results":"200","hashOfConfig":"186"},{"size":10313,"mtime":1633687100498,"results":"201","hashOfConfig":"186"},{"size":1334,"mtime":1618263416000,"results":"202","hashOfConfig":"186"},{"size":3361,"mtime":1627796859864,"results":"203","hashOfConfig":"186"},{"size":1033,"mtime":1630571258430,"results":"204","hashOfConfig":"186"},{"size":982,"mtime":1628314949830,"results":"205","hashOfConfig":"186"},{"size":680,"mtime":1618263416000,"results":"206","hashOfConfig":"186"},{"size":5556,"mtime":1632834226309,"results":"207","hashOfConfig":"186"},{"size":971,"mtime":1632834226339,"results":"208","hashOfConfig":"186"},{"size":2082,"mtime":1632834226363,"results":"209","hashOfConfig":"186"},{"size":4506,"mtime":1632834226363,"results":"210","hashOfConfig":"186"},{"size":13470,"mtime":1632834226346,"results":"211","hashOfConfig":"186"},{"size":377833,"mtime":1632834226329,"results":"212","hashOfConfig":"186"},{"size":6357,"mtime":1633783972352,"results":"213","hashOfConfig":"186"},{"size":4226,"mtime":1633255345445,"results":"214","hashOfConfig":"186"},{"size":9914,"mtime":1632834226283,"results":"215","hashOfConfig":"186"},{"size":331,"mtime":1630570274648,"results":"216","hashOfConfig":"186"},{"size":331,"mtime":1627658696298,"results":"217","hashOfConfig":"186"},{"size":1862,"mtime":1632914609986,"results":"218","hashOfConfig":"186"},{"size":1522,"mtime":1633164564476,"results":"219","hashOfConfig":"186"},{"size":4105,"mtime":1618263416000,"results":"220","hashOfConfig":"186"},{"size":374,"mtime":1632834226363,"results":"221","hashOfConfig":"186"},{"size":1858,"mtime":1632834226363,"results":"222","hashOfConfig":"186"},{"size":171,"mtime":1632834226339,"results":"223","hashOfConfig":"186"},{"size":780,"mtime":1632834226339,"results":"224","hashOfConfig":"186"},{"size":5516,"mtime":1633437571832,"results":"225","hashOfConfig":"186"},{"size":1794,"mtime":1632834226309,"results":"226","hashOfConfig":"186"},{"size":1328,"mtime":1632834226313,"results":"227","hashOfConfig":"186"},{"size":1749,"mtime":1629096633284,"results":"228","hashOfConfig":"186"},{"size":1337,"mtime":1633162450972,"results":"229","hashOfConfig":"186"},{"size":427,"mtime":1632834226286,"results":"230","hashOfConfig":"186"},{"size":2485,"mtime":1632834226299,"results":"231","hashOfConfig":"186"},{"size":3790,"mtime":1632834209189,"results":"232","hashOfConfig":"186"},{"size":1274,"mtime":1627636511007,"results":"233","hashOfConfig":"186"},{"size":3907,"mtime":1627566897234,"results":"234","hashOfConfig":"186"},{"size":1771,"mtime":1628837408211,"results":"235","hashOfConfig":"186"},{"size":3296,"mtime":1632834202209,"results":"236","hashOfConfig":"186"},{"size":4380,"mtime":1627570127491,"results":"237","hashOfConfig":"186"},{"size":593,"mtime":1632834226289,"results":"238","hashOfConfig":"186"},{"size":969,"mtime":1632834226306,"results":"239","hashOfConfig":"186"},{"size":462,"mtime":1632834226289,"results":"240","hashOfConfig":"186"},{"size":993,"mtime":1618263416000,"results":"241","hashOfConfig":"186"},{"size":862,"mtime":1618263416000,"results":"242","hashOfConfig":"186"},{"size":2193,"mtime":1627575172512,"results":"243","hashOfConfig":"186"},{"size":276,"mtime":1632834127575,"results":"244","hashOfConfig":"186"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},"13rr4y1",{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"247"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"247"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"247"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"247"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"247"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"247"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"247"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"247"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"247"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"247"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"247"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"247"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"247"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jy3zzb",{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/salman-inayat/Desktop/Agri D Map/src/index.js",[],["504","505"],"/home/salman-inayat/Desktop/Agri D Map/src/serviceWorker.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/context/LayoutContext.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/App.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/context/UserContext.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/themes/index.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Layout/Layout.js",["506","507","508","509"],"import React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from \"@material-ui/core\";\nimport Icon from \"@mdi/react\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Image_Segmentation from \"../../pages/Image_Segmentation/Image_Segmentation\";\nimport Vari from \"../../pages/Vari/Vari\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport Statistics from \"../../pages/Statistics/Statistics\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/statistics\" component={Statistics} />\n            <Route path=\"/app/segmentation\" component={Image_Segmentation} />\n\n            <Route path=\"/app/vari\" component={Vari} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/tables\" component={Tables} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n          </Switch>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/error/Error.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/login/Login.js",["510"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"demo@demo.com\");\n  var [loginPasswordValue, setLoginPasswordValue] = useState(\"demo\");\n\n  var [signupValue, setSignupValue] = useState(\"\");\n  var [signupPasswordValue, setSignupPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\n      </div> */}\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"Sign up\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.greeting}>\n                Welcome Back!\n              </Typography>\n              {/* <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div> */}\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginPasswordValue}\n                onChange={(e) => setLoginPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || loginPasswordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        loginPasswordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.submitButton}\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forgot Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              {/* <Typography variant=\"h2\" className={classes.greeting}>\n                Welcome!\n              </Typography> */}\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={(e) => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupValue}\n                onChange={(e) => setSignupValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupPasswordValue}\n                onChange={(e) => setSignupPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        signupValue,\n                        signupPasswordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      signupValue.length === 0 ||\n                      signupPasswordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/salman-inayat/Desktop/Agri D Map/src/themes/default.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/Charts.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/components/ApexLineChart.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/charts/components/ApexHeatmap.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/PageTitle/PageTitle.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Widget/Widget.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/PageTitle/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Widget/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Wrappers/Wrappers.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/login/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/error/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Layout/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/tables/Tables.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/maps/Maps.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/notifications/Notifications.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/typography/Typography.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/Dashboard.js",["511","512"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n// import Audio_Player from \"../../components/Audio_Player/Audio_Player\";\n\nimport Geocode from \"react-geocode\";\n\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from \"@turf/turf\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport WeatherWidget from \"../../components/Weather_Widget/WeatherWidget\";\nimport DashboardPolygonTable from \"../../components/PolygonsTable/DashboardPolygonTable\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoic2FsbWFuLWluYXlhdCIsImEiOiJja3U3OGNzZzQzNHVlMm9xaG9sZmtoOXI3In0.rF7GhHsrNL8YPMUCLCI92A\";\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const draw = useRef(null);\n  const [lng, setLng] = useState(73.1386);\n  const [lat, setLat] = useState(33.6762);\n  const [zoom, setZoom] = useState(8);\n  const [roundedArea, setroundedArea] = useState(0);\n  const [location, setLocation] = useState({\n    latitude: 73,\n    longitude: 32,\n  });\n  const [city, setCity] = useState(\"\");\n  const [polygon, setPolygon] = useState({});\n\n  const [polygonName, setpolygonName] = useState(\"\");\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    getCity();\n  }, [location.latitude, location.longitude]);\n\n  const getCity = () => {\n    return Geocode.fromLatLng(location.latitude, location.longitude).then(\n      (response) => {\n        let city;\n        for (\n          let i = 0;\n          i < response.results[0].address_components.length;\n          i++\n        ) {\n          for (\n            let j = 0;\n            j < response.results[0].address_components[i].types.length;\n            j++\n          ) {\n            switch (response.results[0].address_components[i].types[j]) {\n              case \"locality\":\n                city = response.results[0].address_components[i].long_name;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n        setCity(city);\n      },\n      (error) => {\n        console.error(error);\n      },\n    );\n  };\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/salman-inayat/cku817f1m079d18mqqh70gguw\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    draw.current = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true,\n      },\n      defaultMode: \"draw_polygon\",\n    });\n    map.current.addControl(draw.current);\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    map.current.on(\"draw.create\", updateArea);\n    map.current.on(\"draw.delete\", updateArea);\n    map.current.on(\"draw.update\", updateArea);\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  const showMyLocation = () => {\n    if (!map.current) return;\n    map.current.flyTo({\n      center: [location.longitude, location.latitude],\n      essential: true,\n      zoom: zoom,\n      speed: 0.8, // make the flying slow\n      curve: 1,\n    });\n  };\n\n  function updateArea(e) {\n    const data = draw.current.getAll();\n    const polygonData = turf.polygon(data.features[0].geometry.coordinates, {\n      name: { polygonName },\n    });\n\n    setPolygon(polygonData);\n\n    if (data.features.length > 0) {\n      const area = turf.area(data);\n      setroundedArea(Math.round(area * 100) / 100 / 10000);\n    } else {\n      if (e.type !== \"draw.delete\") alert(\"Click the map to draw a polygon.\");\n    }\n  }\n\n  const createPolygon = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        \"http://api.agromonitoring.com/agro/1.0/polygons?appid=b22d00c2f91807b86822083ead929d76\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ geo_json: polygon, name: polygonName }),\n        },\n      );\n      const content = await rawResponse.json();\n      console.log(content);\n    })();\n    setpolygonName(\"\");\n  };\n\n  const handlePolygonNameChange = (e) => {\n    setpolygonName(e.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={7}>\n        <Grid item md={12} style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              left: \"10px\",\n              zIndex: \"2\",\n              backgroundColor: \"white\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n            }}\n          >\n            <p>Click the map to draw a polygon.</p>\n            <div> {roundedArea} ha</div>\n          </div>\n          <div ref={mapContainer} className={classes.map_container} />\n        </Grid>\n        <Button onClick={showMyLocation} variant=\"contained\" color=\"primary\">\n          Locate Me\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={5}>\n        <WeatherWidget city={city} />\n      </Grid>\n\n      <Grid item md={12}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Enter polygon name\"\n          variant=\"outlined\"\n          value={polygonName}\n          onChange={handlePolygonNameChange}\n        />\n        <Button onClick={createPolygon} variant=\"contained\" color=\"primary\">\n          Create polygon\n        </Button>\n      </Grid>\n      <Grid item md={12}>\n        <DashboardPolygonTable />\n      </Grid>\n    </Grid>\n  );\n}\n","/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/Sidebar.js",["513","514","515","516","517","518","519"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  { id: 1, label: \"Statistics\", link: \"/app/statistics\", icon: <HomeIcon /> },\n  {\n    id: 2,\n    label: \"Image Segmentation\",\n    link: \"/app/segmentation\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 3,\n    label: \"Vari  Calculation\",\n    link: \"/app/vari\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 4,\n    label: \"Demo page\",\n    // link: \"/app/dashboard\",\n    icon: <HomeIcon />,\n  },\n  {\n    id: 5,\n    label: \"Demo page\",\n    // link: \"/app/dashboard\",\n    icon: <HomeIcon />,\n  },\n  // {\n  //   id: 2,\n  //   label: \"Typography\",\n  //   link: \"/app/typography\",\n  //   icon: <TypographyIcon />,\n  // },\n  // { id: 3, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n  // {\n  //   id: 4,\n  //   label: \"Notifications\",\n  //   link: \"/app/notifications\",\n  //   icon: <NotificationsIcon />,\n  // },\n  // {\n  //   id: 5,\n  //   label: \"UI Elements\",\n  //   link: \"/app/ui\",\n  //   icon: <UIElementsIcon />,\n  //   children: [\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\n  //   ],\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n      // style={{ backgroundColor: \"#373368\" }}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <div className={classes.userArea}>\n        <img src=\"/person.png\" className={classes.sideBarImage} alt=\"\" />\n        <h3>John Doe</h3>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/salman-inayat/Desktop/Agri D Map/src/components/Header/Header.js",["520","521","522","523","524","525","526","527","528"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Agri D Map\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        {/* <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(e) => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map((message) => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map((notification) => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              John Doe\n            </Typography>\n            {/* <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              Flalogic.com\n            </Typography> */}\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/icons/Icons.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Header/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/icons/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/UserAvatar/UserAvatar.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Notification/Notification.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/typography/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/notifications/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/maps/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/Dot.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/mock.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/dashboard/components/Table/Table.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Notification/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/UserAvatar/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js",["529","530"],"import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    // color: \"white\",\n    background: \"linear-gradient(to right, #373368, #373368)\",\n    backgroundRepeat: \"no-repeat\",\n    transition: \"background-size 1s 0s\",\n    transform: \"perspective(1px) translateZ(0)\",\n    position: \"relative\",\n    transition: \"color 0.3s\",\n    \"&:hover\": {\n      color: \"black\",\n      \"& $linkIcon\": {\n        color: \"#373368\",\n      },\n      \"& $linkText\": {\n        color: \"#373368\",\n      },\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\",\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      zIndex: \"-1\",\n      background: \"white\",\n      transform: \"scaleX(0)\",\n      transformOrigin: \"0 50%;\",\n      transition: \"transform 0.3s ease-out\",\n    },\n    \"&:hover:before\": {\n      transform: \"scaleX(1)\",\n    },\n  },\n  externalLink: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n  linkActive: {\n    background: \"white\",\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"white\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  linkIconActive: {\n    // color: theme.palette.primary.main,\n    color: \"#373368\",\n  },\n  linkText: {\n    padding: 0,\n    color: \"white\",\n    // color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: \"#373368\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js",["531"],"import React from \"react\";\nimport Image_Picker from \"../../components/Image_Picker/Image_Picker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"./styles\";\n\nfunction Image_Segmentation() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container spacing={3} className={classes.grid_container}>\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          <Image_Picker url=\"http://localhost:3000/image-segment\" />\n        </Grid>\n        <Grid item md={6} sm={12} className={classes.ind_grid}>\n          {/* <div>\n            <h1>Segmented Image</h1>\n            <img\n              src=\"https://images.unsplash.com/photo-1593642532454-e138e28a63f4?ixid=MnwxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxfHx8ZW58MHx8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              className={classes.segmented_image}\n            ></img>\n          </div> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Image_Segmentation;\n","/home/salman-inayat/Desktop/Agri D Map/src/components/Image_Picker/Image_Picker.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/pages/Image_Segmentation/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Image_Picker/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Audio_Player/Audio_Player.js",[],["532","533"],"/home/salman-inayat/Desktop/Agri D Map/src/pages/Vari/Vari.js",["534"],"import React from \"react\";\nimport Image_Picker from \"../../components/Image_Picker/Image_Picker\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"./styles\";\n\nfunction Vari() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container spacing={3} className={classes.grid_container}>\n        <Grid item md={12} sm={12}>\n          <h3>Vari Calculation</h3>\n        </Grid>\n        <Grid item md={12} sm={12} className={classes.ind_grid}>\n          <Image_Picker url=\"http://localhost:3000/vari\" />\n        </Grid>\n        <Grid item md={6} sm={12} className={classes.ind_grid}>\n          {/* <div>\n            <h1>Segmented Image</h1>\n            <img\n              src=\"https://images.unsplash.com/photo-1593642532454-e138e28a63f4?ixid=MnwxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxfHx8ZW58MHx8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              className={classes.segmented_image}\n            ></img>\n          </div> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Vari;\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/Vari/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/Weather_Widget/WeatherWidget.js",["535","536"],"import React, { useState, useEffect } from \"react\";\n\nimport ReactWeather from \"react-open-weather-widget\";\nimport \"react-open-weather-widget/lib/css/ReactWeather.css\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyAWa7-RTKOR7BulmJ1PWmDaJ9r2ZB8UqAs\");\n\nGeocode.setLocationType(\"ROOFTOP\");\n\n// Enable or disable logs. Its optional.\nGeocode.enableDebug();\n\nexport default function WeatherWidget(props) {\n  const customStyles = {\n    fontFamily: \"Helvetica, sans-serif\",\n    gradientStart: \"#0181C2\",\n    gradientMid: \"#04A7F9\",\n    gradientEnd: \"#4BC4F7\",\n    locationFontColor: \"#FFF\",\n    todayTempFontColor: \"#FFF\",\n    todayDateFontColor: \"#B5DEF4\",\n    todayRangeFontColor: \"#B5DEF4\",\n    todayDescFontColor: \"#B5DEF4\",\n    todayInfoFontColor: \"#B5DEF4\",\n    todayIconColor: \"#FFF\",\n    forecastBackgroundColor: \"#FFF\",\n    forecastSeparatorColor: \"#DDD\",\n    forecastDateColor: \"#777\",\n    forecastDescColor: \"#777\",\n    forecastRangeColor: \"#777\",\n    forecastIconColor: \"#4BC4F7\",\n  };\n\n  return (\n    <div>\n      {props.city ? (\n        <ReactWeather\n          forecast=\"5days\"\n          apikey=\"f6973195b3a29969a6ad7e393d2ac38b\"\n          type=\"city\"\n          city={props.city}\n          theme={customStyles}\n        />\n      ) : (\n        <div>\n          <h4>{\"\"}</h4>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/Statistics.js",["537","538","539","540","541","542","543","544"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\n\nimport useStyles from \"./styles.js\";\n\nimport NDVIChart from \"../../components/Charts/NDVI_Chart\";\nimport WeatherChart from \"../../components/WeatherChart/WeatherChart\";\nimport PolygonTable from \"../../components/PolygonsTable/PolygonsTable\";\nimport NDVILayers from \"./NDVI_Layers\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function Statistics(props) {\n  const initialToDate = new Date();\n  const UNIX_initialToDate = initialToDate.getTime() / 1000;\n\n  const priorDate = new Date();\n  priorDate.setDate(priorDate.getDate() - 30);\n\n  const UNIX_initialFromDate = priorDate.getTime() / 1000;\n\n  const initialDate = new Date();\n  initialDate.setDate(initialDate.getDate() - 30);\n\n  const [fromDate, setfromDate] = useState(initialDate);\n  const [toDate, settoDate] = useState(new Date());\n  const [fromDateUNIX, setfromDateUNIX] = useState(UNIX_initialFromDate);\n  const [toDateUNIX, settoDateUNIX] = useState(UNIX_initialToDate);\n  const [NDVI_data, setNDVI_data] = useState([]);\n  const [polygonId, setPolygonId] = useState(\"\");\n  const [firstPolygonId, setFirstPolygonId] = useState(\"\");\n  const [mountComponent, setMountComponent] = useState(false);\n\n  useEffect(() => {\n    let firstPolygon;\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons?appid=b22d00c2f91807b86822083ead929d76`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        firstPolygon = data[0].id;\n        setPolygonId(firstPolygon);\n        setFirstPolygonId(firstPolygon);\n        setTimeout(() => {\n          setMountComponent(true);\n        }, 1000);\n      });\n\n    setTimeout(() => {\n      console.log(firstPolygon);\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/ndvi/history?polyid=${firstPolygon}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=b22d00c2f91807b86822083ead929d76`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setNDVI_data(data);\n        });\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    getNDVI();\n  }, [toDateUNIX, fromDateUNIX, polygonId]);\n\n  const handleFromDateChange = (date) => {\n    setfromDate(date);\n    const UNIX_dateFrom = date.getTime() / 1000;\n    setfromDateUNIX(UNIX_dateFrom);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleToDateChange = (date) => {\n    settoDate(date);\n    const UNIX_dateTo = date.getTime() / 1000;\n    settoDateUNIX(UNIX_dateTo);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleChange = (value) => {\n    setPolygonId(value);\n    setTimeout(() => {\n      setMountComponent(true);\n    }, 1000);\n  };\n\n  const getNDVI = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        `https://api.agromonitoring.com/agro/1.0/ndvi/history?polyid=${polygonId}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=b22d00c2f91807b86822083ead929d76`,\n      );\n      const data = await rawResponse.json();\n      setNDVI_data(data);\n    })();\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        item\n        md={12}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          margin: \"10px\",\n          padding: \"20px\",\n        }}\n      >\n        <PolygonTable onChange={handleChange} value={polygonId} />\n      </Grid>\n      <Grid\n        container\n        style={{\n          margin: \"10px\",\n          padding: \"20px\",\n          // backgroundColor: \"#373368\",\n          // color: \"white\",\n          borderRadius: \"10px\",\n        }}\n      >\n        <Grid item md={5}>\n          <h4>Historical</h4>\n          <h2>NDVI</h2>\n        </Grid>\n        <Grid item md={3}></Grid>\n        <Grid\n          item\n          md={4}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              label=\"From\"\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n            />\n          </MuiPickersUtilsProvider>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              label=\"To\"\n              style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n              variant=\"inline\"\n              openTo=\"date\"\n              views={[\"year\", \"month\", \"date\"]}\n              format=\"dd/MM/yyyy\"\n              value={toDate}\n              onChange={handleToDateChange}\n              maxDate={new Date()}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item md={12}>\n          {\" \"}\n          {NDVI_data.length > 0 && <NDVIChart data={NDVI_data} />}\n        </Grid>\n      </Grid>\n\n      <Grid item md={12}>\n        {mountComponent && (\n          <NDVILayers\n            fromDateUNIX={fromDateUNIX}\n            toDateUNIX={toDateUNIX}\n            polygonId={polygonId}\n          />\n        )}\n      </Grid>\n      {/* {mountComponent && (\n          <WeatherChart firstPolygon={firstPolygonId} polygonId={polygonId} />\n        )} */}\n    </Grid>\n  );\n}\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/styles.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/PolygonsTable/PolygonsTable.js",["545"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n\nconst PolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://api.agromonitoring.com/agro/1.0/polygons?appid=${API_KEY}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setValue(data[0].id);\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n          data[i].area.toFixed(1);\n        });\n        setdata(data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 10);\n  };\n\n  const handleChange = (event) => {\n    props.onChange(event.target.value);\n    setValue(event.target.value);\n  };\n\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\n    <Cell {...props} sstyle={{ padding: \"auto 0px\" }}>\n      <div>\n        <Radio\n          checked={value === rowData.id}\n          onChange={handleChange}\n          value={rowData.id}\n          name=\"radio-button\"\n          inputProps={{ \"aria-label\": \"A\" }}\n        />\n      </div>\n    </Cell>\n  );\n\n  return loading ? (\n    <div style={{ height: \"200px\" }}>\n      <img\n        src=\"/horizontal-loader.gif\"\n        alt=\"loader\"\n        style={{ display: \"block\", margin: \"auto\" }}\n      ></img>\n    </div>\n  ) : (\n    <Table\n      height={420}\n      data={getData()}\n      sortColumn={sortColumn}\n      sortType={sortType}\n      onSortColumn={handleSortColumn}\n      loading={loading}\n      autoHeight={true}\n      hover={false}\n      rowHeight={60}\n      headerHeight={50}\n      // cellBordered={false}\n      // bordered={false}\n      style={{\n        width: \"80%\",\n      }}\n    >\n      <Column width={200} align=\"center\" fixed>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Select a polygon\n        </HeaderCell>\n        <CheckCell dataKey=\"id\" />\n      </Column>\n\n      <Column width={250} fixed sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Polygon Name\n        </HeaderCell>\n        <Cell dataKey=\"name\" />\n      </Column>\n\n      <Column width={200} sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Created at\n        </HeaderCell>\n        <Cell dataKey=\"created_at\" />\n      </Column>\n\n      <Column width={150} sortable>\n        <HeaderCell style={{ backgroundColor: \"#373368\", color: \"white\" }}>\n          Area\n        </HeaderCell>\n        <Cell dataKey=\"area\" />\n      </Column>\n    </Table>\n  );\n};\n\nexport default PolygonTable;\n","/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/WeatherChart.js",["546","547","548","549","550","551","552","553","554"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction WeatherChart(props) {\n  const [changedPolygonID, setChangedPolygonID] = useState();\n  console.log(\"Weather polygon ID: \", changedPolygonID);\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null,\n  });\n  const [temperature, setTemperature] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [pressure, setPressure] = useState([]);\n  const [tempMin, setTempMin] = useState([]);\n  const [tempMax, setTempMax] = useState([]);\n  const [feelsLike, setFeelsLike] = useState([]);\n  const [date, setDate] = useState([]);\n\n  useEffect(() => {\n    setChangedPolygonID(props.polygonId);\n\n    let coordinates = [];\n    let latitudes;\n    let longitudes;\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${props.firstPolygon}?appid=b22d00c2f91807b86822083ead929d76`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        coordinates = data.geo_json.geometry.coordinates[0][0];\n        latitudes = coordinates[1];\n        longitudes = coordinates[0];\n        setLocation({\n          latitude: latitudes,\n          longitude: longitudes,\n        });\n      });\n\n    setTimeout(() => {\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/weather/forecast?lat=${latitudes}&lon=${longitudes}&appid=b22d00c2f91807b86822083ead929d76`,\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          data.map((item, i) => {\n            const unixTimestamp = item.dt;\n\n            var dateObj = new Date(unixTimestamp * 1000);\n            var utcString = dateObj.toUTCString();\n\n            var time = utcString.slice(-12, -7);\n\n            setTemperature((prevarr) => [...prevarr, item.main.temp]);\n            setTempMax((prevarr) => [...prevarr, item.main.temp_max]);\n            setTempMin((prevarr) => [...prevarr, item.main.temp_min]);\n            setPressure((prevarr) => [...prevarr, item.main.pressure]);\n            setHumidity((prevarr) => [...prevarr, item.main.humidity]);\n            setFeelsLike((prevarr) => [...prevarr, item.main.feels_like]);\n            setDate((prevarr) => [...prevarr, time]);\n          });\n        });\n    }, 1000);\n  }, []);\n\n  const refreshWeather = () => {\n    console.log(\"Called when polygon id is changed\");\n    let coordinates = [];\n    let latitudes;\n    let longitudes;\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${props.polygonId}?appid=b22d00c2f91807b86822083ead929d76`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        coordinates = data.geo_json.geometry.coordinates[0][0];\n        latitudes = coordinates[1];\n        longitudes = coordinates[0];\n        setLocation({\n          latitude: latitudes,\n          longitude: longitudes,\n        });\n      });\n\n    console.log(\"Latitude: \", latitudes, \"Longitude: \", longitudes);\n    setTimeout(() => {\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/weather/forecast?lat=${latitudes}&lon=${longitudes}&appid=b22d00c2f91807b86822083ead929d76`,\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          data.map((item, i) => {\n            const unixTimestamp = item.dt;\n\n            var dateObj = new Date(unixTimestamp * 1000);\n            var utcString = dateObj.toUTCString();\n\n            var time = utcString.slice(-12, -7);\n\n            setTemperature((prevarr) => [...prevarr, item.main.temp]);\n            setTempMax((prevarr) => [...prevarr, item.main.temp_max]);\n            setTempMin((prevarr) => [...prevarr, item.main.temp_min]);\n            setPressure((prevarr) => [...prevarr, item.main.pressure]);\n            setHumidity((prevarr) => [...prevarr, item.main.humidity]);\n            setFeelsLike((prevarr) => [...prevarr, item.main.feels_like]);\n            setDate((prevarr) => [...prevarr, time]);\n          });\n        });\n    }, 500);\n  };\n\n  let chartData = {\n    labels: date,\n    datasets: [\n      {\n        label: \"Temperature\",\n        yAxisID: \"temperature\",\n        fill: false,\n        borderColor: \"#ba54f5\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#ba54f5\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#ba54f5\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 1,\n        data: temperature,\n      },\n      // {\n      //   label: \"Pressure\",\n      //   data: pressure,\n      //   hidden: true,\n      // },\n      // {\n      //   label: \"Humidity\",\n      //   data: humidity,\n      //   hidden: true,\n      // },\n      // {\n      //   label: \"Date\",\n      //   data: date,\n      //   hidden: true,\n      // },\n    ],\n  };\n\n  return (\n    <div>\n      <Button onClick={refreshWeather}>Refresh Weather</Button>\n      <Line\n        data={chartData}\n        width={2000}\n        height={500}\n        options={{\n          scales: {\n            // yAxes: [\n            //   {\n            //     id: \"temperature\",\n            //     display: false,\n            //     position: \"left\",\n            //     barPercentage: 1.6,\n            //     gridLines: {\n            //       drawBorder: false,\n            //       color: \"rgba(29,140,248,0.0)\",\n            //       zeroLineColor: \"transparent\",\n            //     },\n            //     ticks: {\n            //       fontColor: \"#9a9a9a\",\n            //       maxTicksLimit: 6,\n            //       callback: function (value) {\n            //         return value + \"°\";\n            //       },\n            //       padding: 25,\n            //     },\n            //   },\n            // ],\n            xAxes: [\n              {\n                // barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: \"rgba(29,140,248,0.1)\",\n                  zeroLineColor: \"transparent\",\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9a9a9a\",\n                  autoSkip: true,\n                  maxTicksLimit: 5,\n                },\n              },\n              {\n                id: \"temp\",\n                offset: true,\n                position: \"top\",\n                ticks: {\n                  autoSkip: false,\n                  callback: (el) => {\n                    return \"el.temp\";\n                  },\n                  fontColor: \"#ba54f5\",\n                },\n              },\n              // {\n              //   id: \"description\",\n              //   position: \"top\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) => formatDesc(el).split(\" \"),\n              //     fontColor: \"#ffffff\",\n              //   },\n              // },\n              {\n                id: \"dt\",\n                offset: true,\n                position: \"top\",\n                ticks: {\n                  autoSkip: false,\n                  fontStyle: \"bold\",\n                  fontColor: \"#ffffff\",\n                  callback: (el) => {\n                    return el.dt;\n                  },\n                },\n              },\n              // {\n              //   id: \"rain\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) =>\n              //       (0 + (el.rain && el.rain[\"1h\"])\n              //         ? el.rain[\"1h\"]\n              //         : 0 + (el.snow && el.snow[\"1h\"])\n              //         ? el.snow[\"1h\"]\n              //         : 0\n              //       ).toFixed(2) + \"mm\",\n              //     fontColor: \"#1f8ef1\",\n              //   },\n              // },\n\n              // {\n              //   id: \"windSpeed\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) => formatWindSpeed(el, isMetric),\n              //     fontColor: \"#ffffff\",\n              //   },\n              // },\n              {\n                id: \"pressure\",\n                offset: true,\n                ticks: {\n                  autoSkip: false,\n                  callback: (el) => {\n                    return el.pressure;\n                  },\n                  fontColor: \"#ffffff\",\n                },\n              },\n              {\n                id: \"humidity\",\n                offset: true,\n                ticks: {\n                  autoSkip: false,\n                  callback: (el) => {\n                    return el.humidity;\n                  },\n                  fontColor: \"#ffffff\",\n                },\n              },\n              // {\n              //   id: \"dewPoint\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) => formatTemp(el.dew_point, isMetric),\n              //     fontColor: \"#ffffff\",\n              //   },\n              // },\n              // {\n              //   id: \"uvi\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) => formatUvi(el),\n              //     fontColor: \"#ffffff\",\n              //   },\n              // },\n              // {\n              //   id: \"clouds\",\n              //   offset: true,\n              //   ticks: {\n              //     autoSkip: false,\n              //     callback: (el) => formatClouds(el),\n              //     fontColor: \"#ffffff\",\n              //   },\n              // },\n            ],\n          },\n          plugins: {\n            legend: {\n              display: false,\n            },\n          },\n          tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"index\",\n            enabled: true,\n            intersect: 0,\n            position: \"nearest\",\n          },\n          interaction: {\n            intersect: false,\n            mode: \"index\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default WeatherChart;\n","/home/salman-inayat/Desktop/Agri D Map/src/components/Charts/NDVI_Chart.js",["555","556","557","558","559"],"import React, { useState, useEffect } from \"react\";\n// import { Chart, LineAdvance, Axis } from \"bizcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction NDVIChart(props) {\n  let result = [];\n  // const [options, setOptions] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [chartDate, setChartDate] = useState([]);\n  result.push({\n    name: \"Maximum\",\n    data: [],\n  });\n  result.push({\n    name: \"Minimum\",\n    data: [],\n  });\n  result.push({\n    name: \"Mean\",\n    data: [],\n  });\n  props.data.map((item, i) => {\n    var unixTimestamp = props.data[i].dt;\n    var date = new Date(unixTimestamp * 1000);\n    const standard_date =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n    result[0].data.push(item.data.max.toFixed(2));\n    result[1].data.push(item.data.min.toFixed(2));\n    result[2].data.push(item.data.mean.toFixed(2));\n    chartDate.push(standard_date);\n\n    // result.push({\n    //   label: \"max\",\n    //   value: props.data[i].data.max.toFixed(2),\n    //   date: standard_date,\n    // });\n    // result.push({\n    //   label: \"min\",\n    //   value: props.data[i].data.min.toFixed(2),\n    //   date: standard_date,\n    // });\n    // result.push({\n    //   label: \"mean\",\n    //   value: props.data[i].data.mean,\n    //   date: standard_date,\n    // });\n  });\n\n  // result.reverse();\n\n  const options = {\n    chart: {\n      borderRadius: 10,\n      foreColor: \"#373d3f\",\n      height: \"auto\",\n      type: \"line\",\n      // background: \"#373368\",\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 3,\n    },\n    // title: {\n    //   text: \"NDVI Statistics\",\n    //   margin: 20,\n    //   style: {\n    //     fontSize: \"18px\",\n    //     fontWeight: \"light\",\n    //     color: \"white\",\n    //   },\n    //   align: \"center\",\n    // },\n\n    legend: {\n      show: true,\n      showForSingleSeries: false,\n      showForNullSeries: true,\n      showForZeroSeries: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      fontFamily: \"Helvetica, Arial\",\n      fontWeight: 400,\n      formatter: undefined,\n      inverseOrder: false,\n      height: 50,\n      tooltipHoverFormatter: function (val, opts) {\n        return (\n          val +\n          \" - \" +\n          opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\n          \"\"\n        );\n      },\n      customLegendItems: [],\n      offsetX: 0,\n      offsetY: 0,\n      labels: {\n        // colors: \"#fff\",\n        useSeriesColors: false,\n      },\n      markers: {\n        width: 12,\n        height: 12,\n        strokeWidth: 0,\n        // strokeColor: \"#fff\",\n        fillColors: undefined,\n        radius: 12,\n        customHTML: undefined,\n        onClick: undefined,\n        offsetX: 0,\n        offsetY: 0,\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 0,\n      },\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n\n    xaxis: {\n      categories: chartDate,\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    // grid: {\n    //   borderColor: \"red\",\n    //   strokeDashArray: 0,\n    //   position: \"back\",\n    //   show: true,\n    //   xaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    //   yaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    // },\n    theme: {\n      pallete: \"palette1\",\n      // mode: \"dark\",\n    },\n    tooltip: {\n      theme: false,\n      y: [\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      ],\n    },\n    colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n    responsive: [\n      {\n        breakpoint: 1000,\n        options: {\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    animations: {\n      enabled: true,\n      easing: \"easeinout\",\n      speed: 800,\n      animateGradually: {\n        enabled: true,\n        delay: 150,\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 350,\n      },\n    },\n  };\n\n  return (\n    // <Chart\n    //   padding={\"auto\"}\n    //   appendPadding={10}\n    //   scale={{ date: { type: \"cat\", nice: false } }}\n    //   autoFit\n    //   height={300}\n    //   data={result}\n    // >\n    //   <LineAdvance shape=\"smooth\" point position=\"date*value\" color=\"label\" />\n    //   <Axis\n    //     name=\"date\"\n    //     label={{\n    //       rotate: 0.5,\n    //       autoRotate: true,\n    //       style: { textAlign: \"start\", fontSize: 11 },\n    //     }}\n    //   />\n    // </Chart>\n    <ReactApexChart\n      options={options}\n      series={result}\n      type=\"line\"\n      height={350}\n      style={{ borderRadius: \"5px\" }}\n    />\n  );\n}\n\nexport default NDVIChart;\n","/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/base.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/WeatherChart/utils.js",[],"/home/salman-inayat/Desktop/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js",["560"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst DashboardPolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [editName, setEditName] = useState(\"\");\n  const [polygonId, setPolygonId] = useState();\n\n  const API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n  useEffect(() => {\n    fetchPolygons();\n  }, []);\n\n  const fetchPolygons = () => {\n    fetch(`http://api.agromonitoring.com/agro/1.0/polygons?appid=${API_KEY}`)\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n        });\n        setdata(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 5);\n  };\n\n  const ModalClick = (id) => {\n    setOpen(true);\n    setPolygonId(id);\n  };\n\n  const EditPolygon = () => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${polygonId}?appid=${API_KEY}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: editName,\n        }),\n      },\n    );\n    setOpen(false);\n    setEditName(\"\");\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const DeletePolygon = (id) => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/polygons/${id}?appid=${API_KEY}`,\n      {\n        method: \"DELETE\",\n      },\n    );\n    console.log(\"Delete polygon id: \", id);\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const EditPolygonsCell = ({\n    rowData,\n    onChange,\n    checkedKeys,\n    dataKey,\n    ...props\n  }) => (\n    <Cell {...props} style={{ padding: 0 }}>\n      <div style={{ lineHeight: \"46px\" }}>\n        <Button>\n          <EditIcon onClick={() => ModalClick(rowData.id)} />\n        </Button>\n        |\n        <Button onClick={() => DeletePolygon(rowData.id)}>\n          <DeleteIcon />\n        </Button>\n      </div>\n    </Cell>\n  );\n\n  const handleEditNameChange = (e) => {\n    setEditName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Table\n        height={300}\n        width={900}\n        data={getData()}\n        sortColumn={sortColumn}\n        sortType={sortType}\n        onSortColumn={handleSortColumn}\n        loading={loading}\n        autoHeight={true}\n      >\n        <Column width={250} fixed sortable align=\"center\">\n          <HeaderCell>Polygon Name </HeaderCell>\n          <Cell dataKey=\"name\" />\n        </Column>\n\n        <Column width={250} sortable align=\"center\">\n          <HeaderCell>Created at</HeaderCell>\n          <Cell dataKey=\"created_at\" />\n        </Column>\n\n        <Column width={250} sortable align=\"center\">\n          <HeaderCell>Area</HeaderCell>\n          <Cell dataKey=\"area\" />\n        </Column>\n\n        <Column width={150} align=\"center\">\n          <HeaderCell>\n            <Button onClick={() => fetchPolygons()}>\n              <RefreshIcon />\n            </Button>\n          </HeaderCell>\n          <EditPolygonsCell />\n        </Column>\n      </Table>\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            backgroundColor: \"white\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"500px\",\n            height: \"200px\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter polygon name\"\n            variant=\"outlined\"\n            value={editName}\n            onChange={handleEditNameChange}\n          />\n          <Button onClick={EditPolygon} variant=\"contained\" color=\"primary\">\n            Update Polygon\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DashboardPolygonTable;\n","/home/salman-inayat/Desktop/Agri D Map/src/pages/Statistics/NDVI_Layers.js",["561","562","563","564","565"],"import React, { useState, useEffect } from \"react\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst API_KEY = \"b22d00c2f91807b86822083ead929d76\";\n\nfunction NDVILayers(props) {\n  const [metric, setMetric] = useState(\"ndvi\");\n  const [layersData, setLayersData] = useState([]);\n  const [tableData, setTableData] = useState({});\n  const [metricDate, setMetricDate] = useState(\"\");\n  const [imageURL, setImageURL] = useState();\n  const [imageLoading, setImageLoading] = useState();\n\n  useEffect(() => {\n    fetch(\n      `http://api.agromonitoring.com/agro/1.0/image/search?start=${props.fromDateUNIX}&end=${props.toDateUNIX}&polyid=${props.polygonId}&appid=${API_KEY}`,\n    )\n      .then((response) => response.json())\n\n      .then((data) => {\n        const dataB = data;\n        setLayersData(dataB);\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  }, [props]);\n\n  const handleDateChange = (event) => {\n    setMetricDate(event.target.value);\n    const required_layer_object = layersData.filter(\n      (layer) => layer.dt === event.target.value,\n    );\n    switchFunction(metric, required_layer_object);\n    setImageLoading(true);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    const required_layer_object = layersData.filter(\n      (layer) => layer.dt === metricDate,\n    );\n    switchFunction(event.target.value, required_layer_object);\n  };\n\n  const switchFunction = (value, required_layer_object) => {\n    switch (value) {\n      case \"ndvi\":\n        setImageURL(required_layer_object[0].image.ndvi);\n        fetchStatsData(required_layer_object[0].stats.ndvi);\n        break;\n      case \"evi\":\n        setImageURL(required_layer_object[0].image.evi);\n        fetchStatsData(required_layer_object[0].stats.evi);\n        break;\n      case \"evi2\":\n        setImageURL(required_layer_object[0].image.evi2);\n        fetchStatsData(required_layer_object[0].stats.evi2);\n        break;\n      case \"ndwi\":\n        setImageURL(required_layer_object[0].image.ndwi);\n        fetchStatsData(required_layer_object[0].stats.ndwi);\n        break;\n      case \"nri\":\n        setImageURL(required_layer_object[0].image.nri);\n        fetchStatsData(required_layer_object[0].stats.nri);\n        break;\n      case \"dswi\":\n        setImageURL(required_layer_object[0].image.dswi);\n        fetchStatsData(required_layer_object[0].stats.dswi);\n        break;\n      default:\n        console.log(\"Incorrect choice\");\n    }\n    setImageLoading(false);\n  };\n\n  const fetchStatsData = (url) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setTableData(data);\n      });\n  };\n\n  const formatDate = (d) => {\n    const date = new Date(d * 1000);\n    return (\n      date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()\n    );\n  };\n\n  const Layers = () => {\n    const standard_date = formatDate(metricDate);\n    return (\n      <Card>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>{standard_date}</TableCell>\n                <TableCell align=\"right\">{metric.toUpperCase()}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Maximum\n                </TableCell>\n                <TableCell align=\"right\">{tableData.max.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Minimum\n                </TableCell>\n                <TableCell align=\"right\">{tableData.min.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Mean\n                </TableCell>\n                <TableCell align=\"right\">{tableData.mean.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Median\n                </TableCell>\n                <TableCell align=\"right\">\n                  {tableData.median.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Deviation\n                </TableCell>\n                <TableCell align=\"right\">{tableData.std.toFixed(2)}</TableCell>\n              </TableRow>\n              <TableRow\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  Number of pixels\n                </TableCell>\n                <TableCell align=\"right\">{tableData.num.toFixed(0)}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Card>\n    );\n  };\n\n  var dateToBeSelected;\n\n  return (\n    <div>\n      <Box\n        style={{\n          width: \"400px\",\n          margin: \"50px 20px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"space-around\",\n        }}\n      >\n        {\" \"}\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Select Date</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={metricDate}\n            label=\"date\"\n            onChange={(e) => handleDateChange(e)}\n          >\n            {layersData.map(\n              (layer, i) => (\n                (dateToBeSelected = formatDate(layer.dt)),\n                (\n                  <MenuItem value={layer.dt} key={i}>\n                    {dateToBeSelected}\n                  </MenuItem>\n                )\n              ),\n            )}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Select Metric</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={metric}\n            label=\"metric\"\n            onChange={(e) => handleMetricChange(e)}\n          >\n            <MenuItem value=\"ndvi\">NDVI</MenuItem>\n            <MenuItem value=\"evi\">EVI</MenuItem>\n            <MenuItem value=\"evi2\">EVI2</MenuItem>\n            <MenuItem value=\"ndwi\">NDWI</MenuItem>\n            <MenuItem value=\"nri\">NRI</MenuItem>\n            <MenuItem value=\"dswi\">DSWI</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item md={4}>\n          {\" \"}\n          {tableData.max && <Layers />}\n        </Grid>\n        <Grid item md={6}>\n          {tableData.max && (\n            <img src={imageURL} alt=\"loading\" height=\"300\" width=\"400\"></img>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default NDVILayers;\n","/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/index.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/serviceWorker.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/LayoutContext.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/App.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/context/UserContext.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/index.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/Layout.js",["566","567","568","569"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/Login.js",["570"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/Error.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/themes/default.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/Statistics.js",["571","572","573","574","575","576","577","578"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/NDVI_Layers.js",["579","580","581","582","583"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Statistics/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/PolygonsTable.js",["584"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Charts/NDVI_Chart.js",["585","586","587","588","589"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/WeatherChart/WeatherChart.js",["590","591","592","593","594","595","596","597","598"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/error/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/login/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/Vari.js",["599"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/Image_Segmentation.js",["600"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Layout/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/Charts.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/Maps.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/tables/Tables.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/Typography.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/Notifications.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/Icons.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/Dashboard.js",["601","602"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/Sidebar.js",["603","604","605","606","607","608","609"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/Header.js",["610","611","612","613","614","615","616","617","618"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Vari/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/Image_Segmentation/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/Image_Picker.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/mock.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/typography/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/notifications/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/maps/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/icons/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PolygonsTable/DashboardPolygonTable.js",["619"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexHeatmap.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/charts/components/ApexLineChart.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Weather_Widget/WeatherWidget.js",["620","621"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/PageTitle.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/Widget.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Wrappers/Wrappers.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/pages/dashboard/components/Table/Table.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Header/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Image_Picker/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/Notification.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/UserAvatar.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Widget/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/PageTitle/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Notification/styles.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/Dot.js",[],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/Sidebar/components/SidebarLink/styles.js",["622","623"],"/run/media/salman-inayat/Partition D/Shared Data/Coding Folder/Agri D Map/src/components/UserAvatar/styles.js",[],{"ruleId":"624","replacedBy":"625"},{"ruleId":"626","replacedBy":"627"},{"ruleId":"628","severity":1,"message":"629","line":4,"column":10,"nodeType":"630","messageId":"631","endLine":4,"endColumn":13},{"ruleId":"628","severity":1,"message":"632","line":4,"column":15,"nodeType":"630","messageId":"631","endLine":4,"endColumn":25},{"ruleId":"628","severity":1,"message":"633","line":4,"column":27,"nodeType":"630","messageId":"631","endLine":4,"endColumn":31},{"ruleId":"628","severity":1,"message":"634","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":12},{"ruleId":"628","severity":1,"message":"635","line":13,"column":8,"nodeType":"630","messageId":"631","endLine":13,"endColumn":18},{"ruleId":"628","severity":1,"message":"636","line":24,"column":8,"nodeType":"630","messageId":"631","endLine":24,"endColumn":20},{"ruleId":"637","severity":1,"message":"638","line":59,"column":6,"nodeType":"639","endLine":59,"endColumn":45,"suggestions":"640"},{"ruleId":"628","severity":1,"message":"641","line":5,"column":24,"nodeType":"630","messageId":"631","endLine":5,"endColumn":41},{"ruleId":"628","severity":1,"message":"642","line":6,"column":17,"nodeType":"630","messageId":"631","endLine":6,"endColumn":31},{"ruleId":"628","severity":1,"message":"643","line":7,"column":17,"nodeType":"630","messageId":"631","endLine":7,"endColumn":31},{"ruleId":"628","severity":1,"message":"644","line":8,"column":16,"nodeType":"630","messageId":"631","endLine":8,"endColumn":25},{"ruleId":"628","severity":1,"message":"645","line":9,"column":21,"nodeType":"630","messageId":"631","endLine":9,"endColumn":32},{"ruleId":"628","severity":1,"message":"646","line":10,"column":19,"nodeType":"630","messageId":"631","endLine":10,"endColumn":30},{"ruleId":"628","severity":1,"message":"647","line":11,"column":18,"nodeType":"630","messageId":"631","endLine":11,"endColumn":25},{"ruleId":"628","severity":1,"message":"633","line":10,"column":3,"nodeType":"630","messageId":"631","endLine":10,"endColumn":7},{"ruleId":"628","severity":1,"message":"648","line":14,"column":18,"nodeType":"630","messageId":"631","endLine":14,"endColumn":26},{"ruleId":"628","severity":1,"message":"641","line":15,"column":24,"nodeType":"630","messageId":"631","endLine":15,"endColumn":41},{"ruleId":"628","severity":1,"message":"649","line":27,"column":10,"nodeType":"630","messageId":"631","endLine":27,"endColumn":15},{"ruleId":"628","severity":1,"message":"650","line":27,"column":29,"nodeType":"630","messageId":"631","endLine":27,"endColumn":35},{"ruleId":"628","severity":1,"message":"651","line":102,"column":8,"nodeType":"630","messageId":"631","endLine":102,"endColumn":21},{"ruleId":"628","severity":1,"message":"652","line":102,"column":23,"nodeType":"630","messageId":"631","endLine":102,"endColumn":39},{"ruleId":"628","severity":1,"message":"653","line":104,"column":8,"nodeType":"630","messageId":"631","endLine":104,"endColumn":29},{"ruleId":"628","severity":1,"message":"654","line":104,"column":31,"nodeType":"630","messageId":"631","endLine":104,"endColumn":55},{"ruleId":"655","severity":1,"message":"656","line":12,"column":5,"nodeType":"657","messageId":"658","endLine":12,"endColumn":15},{"ruleId":"655","severity":1,"message":"659","line":64,"column":5,"nodeType":"657","messageId":"658","endLine":64,"endColumn":10},{"ruleId":"660","severity":1,"message":"661","line":13,"column":11,"nodeType":"662","messageId":"663","endLine":13,"endColumn":69},{"ruleId":"624","replacedBy":"664"},{"ruleId":"626","replacedBy":"665"},{"ruleId":"660","severity":1,"message":"661","line":16,"column":11,"nodeType":"662","messageId":"663","endLine":16,"endColumn":60},{"ruleId":"628","severity":1,"message":"666","line":1,"column":17,"nodeType":"630","messageId":"631","endLine":1,"endColumn":25},{"ruleId":"628","severity":1,"message":"667","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"668","line":1,"column":17,"nodeType":"630","messageId":"631","endLine":1,"endColumn":23},{"ruleId":"628","severity":1,"message":"669","line":2,"column":10,"nodeType":"630","messageId":"631","endLine":2,"endColumn":21},{"ruleId":"628","severity":1,"message":"670","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":17},{"ruleId":"628","severity":1,"message":"671","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":20},{"ruleId":"628","severity":1,"message":"650","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":14},{"ruleId":"628","severity":1,"message":"672","line":36,"column":10,"nodeType":"630","messageId":"631","endLine":36,"endColumn":24},{"ruleId":"637","severity":1,"message":"673","line":64,"column":6,"nodeType":"639","endLine":64,"endColumn":8,"suggestions":"674"},{"ruleId":"637","severity":1,"message":"675","line":68,"column":6,"nodeType":"639","endLine":68,"endColumn":43,"suggestions":"676"},{"ruleId":"677","severity":1,"message":"678","line":21,"column":28,"nodeType":"679","messageId":"680","endLine":21,"endColumn":30},{"ruleId":"628","severity":1,"message":"681","line":8,"column":10,"nodeType":"630","messageId":"631","endLine":8,"endColumn":18},{"ruleId":"628","severity":1,"message":"682","line":13,"column":10,"nodeType":"630","messageId":"631","endLine":13,"endColumn":18},{"ruleId":"628","severity":1,"message":"683","line":14,"column":10,"nodeType":"630","messageId":"631","endLine":14,"endColumn":18},{"ruleId":"628","severity":1,"message":"684","line":15,"column":10,"nodeType":"630","messageId":"631","endLine":15,"endColumn":17},{"ruleId":"628","severity":1,"message":"685","line":16,"column":10,"nodeType":"630","messageId":"631","endLine":16,"endColumn":17},{"ruleId":"628","severity":1,"message":"686","line":17,"column":10,"nodeType":"630","messageId":"631","endLine":17,"endColumn":19},{"ruleId":"677","severity":1,"message":"678","line":46,"column":30,"nodeType":"679","messageId":"680","endLine":46,"endColumn":32},{"ruleId":"637","severity":1,"message":"687","line":64,"column":6,"nodeType":"639","endLine":64,"endColumn":8,"suggestions":"688"},{"ruleId":"677","severity":1,"message":"678","line":93,"column":30,"nodeType":"679","messageId":"680","endLine":93,"endColumn":32},{"ruleId":"628","severity":1,"message":"667","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"689","line":8,"column":10,"nodeType":"630","messageId":"631","endLine":8,"endColumn":19},{"ruleId":"628","severity":1,"message":"690","line":8,"column":21,"nodeType":"630","messageId":"631","endLine":8,"endColumn":33},{"ruleId":"628","severity":1,"message":"691","line":9,"column":21,"nodeType":"630","messageId":"631","endLine":9,"endColumn":33},{"ruleId":"677","severity":1,"message":"678","line":22,"column":28,"nodeType":"679","messageId":"680","endLine":22,"endColumn":30},{"ruleId":"677","severity":1,"message":"678","line":29,"column":28,"nodeType":"679","messageId":"680","endLine":29,"endColumn":30},{"ruleId":"628","severity":1,"message":"692","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":19},{"ruleId":"628","severity":1,"message":"693","line":11,"column":8,"nodeType":"630","messageId":"631","endLine":11,"endColumn":19},{"ruleId":"628","severity":1,"message":"694","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":17},{"ruleId":"628","severity":1,"message":"695","line":30,"column":10,"nodeType":"630","messageId":"631","endLine":30,"endColumn":22},{"ruleId":"696","severity":1,"message":"697","line":206,"column":58,"nodeType":"698","messageId":"699","endLine":206,"endColumn":59},{"ruleId":"628","severity":1,"message":"629","line":4,"column":10,"nodeType":"630","messageId":"631","endLine":4,"endColumn":13},{"ruleId":"628","severity":1,"message":"632","line":4,"column":15,"nodeType":"630","messageId":"631","endLine":4,"endColumn":25},{"ruleId":"628","severity":1,"message":"633","line":4,"column":27,"nodeType":"630","messageId":"631","endLine":4,"endColumn":31},{"ruleId":"628","severity":1,"message":"634","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":12},{"ruleId":"628","severity":1,"message":"635","line":13,"column":8,"nodeType":"630","messageId":"631","endLine":13,"endColumn":18},{"ruleId":"628","severity":1,"message":"668","line":1,"column":17,"nodeType":"630","messageId":"631","endLine":1,"endColumn":23},{"ruleId":"628","severity":1,"message":"669","line":2,"column":10,"nodeType":"630","messageId":"631","endLine":2,"endColumn":21},{"ruleId":"628","severity":1,"message":"670","line":5,"column":8,"nodeType":"630","messageId":"631","endLine":5,"endColumn":17},{"ruleId":"628","severity":1,"message":"671","line":8,"column":8,"nodeType":"630","messageId":"631","endLine":8,"endColumn":20},{"ruleId":"628","severity":1,"message":"650","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":14},{"ruleId":"628","severity":1,"message":"672","line":36,"column":10,"nodeType":"630","messageId":"631","endLine":36,"endColumn":24},{"ruleId":"637","severity":1,"message":"673","line":64,"column":6,"nodeType":"639","endLine":64,"endColumn":8,"suggestions":"700"},{"ruleId":"637","severity":1,"message":"675","line":68,"column":6,"nodeType":"639","endLine":68,"endColumn":43,"suggestions":"701"},{"ruleId":"628","severity":1,"message":"692","line":10,"column":8,"nodeType":"630","messageId":"631","endLine":10,"endColumn":19},{"ruleId":"628","severity":1,"message":"693","line":11,"column":8,"nodeType":"630","messageId":"631","endLine":11,"endColumn":19},{"ruleId":"628","severity":1,"message":"694","line":12,"column":8,"nodeType":"630","messageId":"631","endLine":12,"endColumn":17},{"ruleId":"628","severity":1,"message":"695","line":30,"column":10,"nodeType":"630","messageId":"631","endLine":30,"endColumn":22},{"ruleId":"696","severity":1,"message":"697","line":206,"column":58,"nodeType":"698","messageId":"699","endLine":206,"endColumn":59},{"ruleId":"677","severity":1,"message":"678","line":21,"column":28,"nodeType":"679","messageId":"680","endLine":21,"endColumn":30},{"ruleId":"628","severity":1,"message":"667","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"628","severity":1,"message":"689","line":8,"column":10,"nodeType":"630","messageId":"631","endLine":8,"endColumn":19},{"ruleId":"628","severity":1,"message":"690","line":8,"column":21,"nodeType":"630","messageId":"631","endLine":8,"endColumn":33},{"ruleId":"628","severity":1,"message":"691","line":9,"column":21,"nodeType":"630","messageId":"631","endLine":9,"endColumn":33},{"ruleId":"677","severity":1,"message":"678","line":22,"column":28,"nodeType":"679","messageId":"680","endLine":22,"endColumn":30},{"ruleId":"628","severity":1,"message":"681","line":8,"column":10,"nodeType":"630","messageId":"631","endLine":8,"endColumn":18},{"ruleId":"628","severity":1,"message":"682","line":13,"column":10,"nodeType":"630","messageId":"631","endLine":13,"endColumn":18},{"ruleId":"628","severity":1,"message":"683","line":14,"column":10,"nodeType":"630","messageId":"631","endLine":14,"endColumn":18},{"ruleId":"628","severity":1,"message":"684","line":15,"column":10,"nodeType":"630","messageId":"631","endLine":15,"endColumn":17},{"ruleId":"628","severity":1,"message":"685","line":16,"column":10,"nodeType":"630","messageId":"631","endLine":16,"endColumn":17},{"ruleId":"628","severity":1,"message":"686","line":17,"column":10,"nodeType":"630","messageId":"631","endLine":17,"endColumn":19},{"ruleId":"677","severity":1,"message":"678","line":46,"column":30,"nodeType":"679","messageId":"680","endLine":46,"endColumn":32},{"ruleId":"637","severity":1,"message":"687","line":64,"column":6,"nodeType":"639","endLine":64,"endColumn":8,"suggestions":"702"},{"ruleId":"677","severity":1,"message":"678","line":93,"column":30,"nodeType":"679","messageId":"680","endLine":93,"endColumn":32},{"ruleId":"660","severity":1,"message":"661","line":16,"column":11,"nodeType":"662","messageId":"663","endLine":16,"endColumn":60},{"ruleId":"660","severity":1,"message":"661","line":13,"column":11,"nodeType":"662","messageId":"663","endLine":13,"endColumn":69},{"ruleId":"628","severity":1,"message":"636","line":24,"column":8,"nodeType":"630","messageId":"631","endLine":24,"endColumn":20},{"ruleId":"637","severity":1,"message":"638","line":59,"column":6,"nodeType":"639","endLine":59,"endColumn":45,"suggestions":"703"},{"ruleId":"628","severity":1,"message":"641","line":5,"column":24,"nodeType":"630","messageId":"631","endLine":5,"endColumn":41},{"ruleId":"628","severity":1,"message":"642","line":6,"column":17,"nodeType":"630","messageId":"631","endLine":6,"endColumn":31},{"ruleId":"628","severity":1,"message":"643","line":7,"column":17,"nodeType":"630","messageId":"631","endLine":7,"endColumn":31},{"ruleId":"628","severity":1,"message":"644","line":8,"column":16,"nodeType":"630","messageId":"631","endLine":8,"endColumn":25},{"ruleId":"628","severity":1,"message":"645","line":9,"column":21,"nodeType":"630","messageId":"631","endLine":9,"endColumn":32},{"ruleId":"628","severity":1,"message":"646","line":10,"column":19,"nodeType":"630","messageId":"631","endLine":10,"endColumn":30},{"ruleId":"628","severity":1,"message":"647","line":11,"column":18,"nodeType":"630","messageId":"631","endLine":11,"endColumn":25},{"ruleId":"628","severity":1,"message":"633","line":10,"column":3,"nodeType":"630","messageId":"631","endLine":10,"endColumn":7},{"ruleId":"628","severity":1,"message":"648","line":14,"column":18,"nodeType":"630","messageId":"631","endLine":14,"endColumn":26},{"ruleId":"628","severity":1,"message":"641","line":15,"column":24,"nodeType":"630","messageId":"631","endLine":15,"endColumn":41},{"ruleId":"628","severity":1,"message":"649","line":27,"column":10,"nodeType":"630","messageId":"631","endLine":27,"endColumn":15},{"ruleId":"628","severity":1,"message":"650","line":27,"column":29,"nodeType":"630","messageId":"631","endLine":27,"endColumn":35},{"ruleId":"628","severity":1,"message":"651","line":102,"column":8,"nodeType":"630","messageId":"631","endLine":102,"endColumn":21},{"ruleId":"628","severity":1,"message":"652","line":102,"column":23,"nodeType":"630","messageId":"631","endLine":102,"endColumn":39},{"ruleId":"628","severity":1,"message":"653","line":104,"column":8,"nodeType":"630","messageId":"631","endLine":104,"endColumn":29},{"ruleId":"628","severity":1,"message":"654","line":104,"column":31,"nodeType":"630","messageId":"631","endLine":104,"endColumn":55},{"ruleId":"677","severity":1,"message":"678","line":29,"column":28,"nodeType":"679","messageId":"680","endLine":29,"endColumn":30},{"ruleId":"628","severity":1,"message":"666","line":1,"column":17,"nodeType":"630","messageId":"631","endLine":1,"endColumn":25},{"ruleId":"628","severity":1,"message":"667","line":1,"column":27,"nodeType":"630","messageId":"631","endLine":1,"endColumn":36},{"ruleId":"655","severity":1,"message":"656","line":12,"column":5,"nodeType":"657","messageId":"658","endLine":12,"endColumn":15},{"ruleId":"655","severity":1,"message":"659","line":64,"column":5,"nodeType":"657","messageId":"658","endLine":64,"endColumn":10},"no-native-reassign",["704"],"no-negated-in-lhs",["705"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'classnames' is defined but never used.","'DateFnsUtils' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCity'. Either include it or remove the dependency array.","ArrayExpression",["706"],"'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'MailIcon' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","Duplicate key 'color'.","react/jsx-pascal-case","Imported JSX component Image_Picker must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase",["704"],["705"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useLocation' is defined but never used.","'useStyles' is defined but never used.","'WeatherChart' is defined but never used.","'firstPolygonId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fromDateUNIX' and 'toDateUNIX'. Either include them or remove the dependency array.",["707"],"React Hook useEffect has a missing dependency: 'getNDVI'. Either include it or remove the dependency array.",["708"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'location' is assigned a value but never used.","'humidity' is assigned a value but never used.","'pressure' is assigned a value but never used.","'tempMin' is assigned a value but never used.","'tempMax' is assigned a value but never used.","'feelsLike' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.firstPolygon' and 'props.polygonId'. Either include them or remove the dependency array. If 'setChangedPolygonID' needs the current value of 'props.polygonId', you can also switch to useReducer instead of useState and read 'props.polygonId' in the reducer.",["709"],"'chartData' is assigned a value but never used.","'setChartData' is assigned a value but never used.","'setChartDate' is assigned a value but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'imageLoading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["710"],["711"],["712"],["713"],"no-global-assign","no-unsafe-negation",{"desc":"714","fix":"715"},{"desc":"716","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"716","fix":"722"},{"desc":"718","fix":"723"},{"desc":"720","fix":"724"},{"desc":"714","fix":"725"},"Update the dependencies array to be: [getCity, location.latitude, location.longitude]",{"range":"726","text":"727"},"Update the dependencies array to be: [fromDateUNIX, toDateUNIX]",{"range":"728","text":"729"},"Update the dependencies array to be: [toDateUNIX, fromDateUNIX, polygonId, getNDVI]",{"range":"730","text":"731"},"Update the dependencies array to be: [props.firstPolygon, props.polygonId]",{"range":"732","text":"733"},{"range":"734","text":"729"},{"range":"735","text":"731"},{"range":"736","text":"733"},{"range":"737","text":"727"},[1880,1919],"[getCity, location.latitude, location.longitude]",[2257,2259],"[fromDateUNIX, toDateUNIX]",[2303,2340],"[toDateUNIX, fromDateUNIX, polygonId, getNDVI]",[2317,2319],"[props.firstPolygon, props.polygonId]",[2257,2259],[2303,2340],[2317,2319],[1880,1919]]