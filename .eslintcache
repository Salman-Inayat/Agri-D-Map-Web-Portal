[{"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/index.js":"1","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/serviceWorker.js":"2","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/App.js":"3","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/context/UserContext.js":"4","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/context/LayoutContext.js":"5","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/themes/index.js":"6","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/themes/default.js":"7","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Layout/Layout.js":"8","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/error/Error.js":"9","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/login/Login.js":"10","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/login/styles.js":"11","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/error/styles.js":"12","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/Statistics.js":"13","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Image_Segmentation/Image_Segmentation.js":"14","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Layout/styles.js":"15","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/weather/index.js":"16","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Webcam/Webcam.js":"17","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/styles.js":"18","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Audio_Player/Audio_Player.js":"19","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Tab/Tab.js":"20","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/Sidebar.js":"21","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/dashboard/Dashboard.js":"22","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Header/Header.js":"23","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Image_Segmentation/styles.js":"24","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Image_Picker/Image_Picker.js":"25","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/NDVI_Layers.js":"26","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Webcam/styles.js":"27","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/PolygonsTable/PolygonsTable.js":"28","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Charts/NDVI_Chart.js":"29","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Tab/styles.js":"30","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Image_Picker/styles.js":"31","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Header/styles.js":"32","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/dashboard/styles.js":"33","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Notification/Notification.js":"34","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/UserAvatar/UserAvatar.js":"35","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/PolygonsTable/DashboardPolygonTable.js":"36","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Weather_Widget/WeatherWidget.js":"37","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Wrappers/Wrappers.js":"38","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/UserAvatar/styles.js":"39","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Notification/styles.js":"40","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/styles.js":"41","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"42","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/SidebarLink/styles.js":"43","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/Dot.js":"44","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/weather/styles.js":"45"},{"size":869,"mtime":1649382010010,"results":"46","hashOfConfig":"47"},{"size":5005,"mtime":1649382010015,"results":"48","hashOfConfig":"47"},{"size":1867,"mtime":1649382010006,"results":"49","hashOfConfig":"47"},{"size":1990,"mtime":1650332016146,"results":"50","hashOfConfig":"47"},{"size":1515,"mtime":1649382010010,"results":"51","hashOfConfig":"47"},{"size":496,"mtime":1650702743197,"results":"52","hashOfConfig":"47"},{"size":2987,"mtime":1649382010015,"results":"53","hashOfConfig":"47"},{"size":1556,"mtime":1650219868282,"results":"54","hashOfConfig":"47"},{"size":1571,"mtime":1649382010012,"results":"55","hashOfConfig":"47"},{"size":9175,"mtime":1650332054268,"results":"56","hashOfConfig":"47"},{"size":3711,"mtime":1649382010014,"results":"57","hashOfConfig":"47"},{"size":1334,"mtime":1649382010013,"results":"58","hashOfConfig":"47"},{"size":6057,"mtime":1650332636786,"results":"59","hashOfConfig":"47"},{"size":18424,"mtime":1650702714231,"results":"60","hashOfConfig":"47"},{"size":827,"mtime":1649382010007,"results":"61","hashOfConfig":"47"},{"size":9665,"mtime":1650332711264,"results":"62","hashOfConfig":"47"},{"size":2027,"mtime":1649382010009,"results":"63","hashOfConfig":"47"},{"size":822,"mtime":1649382010011,"results":"64","hashOfConfig":"47"},{"size":416,"mtime":1649382010006,"results":"65","hashOfConfig":"47"},{"size":6234,"mtime":1649382010009,"results":"66","hashOfConfig":"47"},{"size":4263,"mtime":1650333000121,"results":"67","hashOfConfig":"47"},{"size":7073,"mtime":1650332030653,"results":"68","hashOfConfig":"47"},{"size":3646,"mtime":1650332839308,"results":"69","hashOfConfig":"47"},{"size":778,"mtime":1649382010011,"results":"70","hashOfConfig":"47"},{"size":909,"mtime":1650331979083,"results":"71","hashOfConfig":"47"},{"size":11019,"mtime":1650702145419,"results":"72","hashOfConfig":"47"},{"size":278,"mtime":1649382010009,"results":"73","hashOfConfig":"47"},{"size":4762,"mtime":1650327871497,"results":"74","hashOfConfig":"47"},{"size":5360,"mtime":1650331955706,"results":"75","hashOfConfig":"47"},{"size":293,"mtime":1649382010009,"results":"76","hashOfConfig":"47"},{"size":1792,"mtime":1649382010007,"results":"77","hashOfConfig":"47"},{"size":3860,"mtime":1650332270250,"results":"78","hashOfConfig":"47"},{"size":2531,"mtime":1649382010012,"results":"79","hashOfConfig":"47"},{"size":3296,"mtime":1649382010007,"results":"80","hashOfConfig":"47"},{"size":593,"mtime":1649382010009,"results":"81","hashOfConfig":"47"},{"size":7644,"mtime":1650331977297,"results":"82","hashOfConfig":"47"},{"size":2181,"mtime":1650332012402,"results":"83","hashOfConfig":"47"},{"size":3790,"mtime":1649382010010,"results":"84","hashOfConfig":"47"},{"size":276,"mtime":1649382010009,"results":"85","hashOfConfig":"47"},{"size":993,"mtime":1649382010007,"results":"86","hashOfConfig":"47"},{"size":1749,"mtime":1649382010008,"results":"87","hashOfConfig":"47"},{"size":4723,"mtime":1649382010008,"results":"88","hashOfConfig":"47"},{"size":2193,"mtime":1649382010008,"results":"89","hashOfConfig":"47"},{"size":862,"mtime":1649382010008,"results":"90","hashOfConfig":"47"},{"size":275,"mtime":1650274693495,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"ago36b",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/index.js",[],["199","200"],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/serviceWorker.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/App.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/context/UserContext.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/context/LayoutContext.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/themes/index.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/themes/default.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Layout/Layout.js",["201","202","203","204","205"],"import React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from \"@material-ui/core\";\nimport Icon from \"@mdi/react\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Image_Segmentation from \"../../pages/Image_Segmentation/Image_Segmentation\";\nimport Statistics from \"../../pages/Statistics/Statistics\";\nimport Weather from \"../../pages/weather\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar history={props.history} />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/fields\" component={Dashboard} />\n            <Route path=\"/app/statistics\" component={Statistics} />\n            <Route\n              path=\"/app/disease-detection\"\n              component={Image_Segmentation}\n            />\n            <Route path=\"/app/weather\" component={Weather} />\n          </Switch>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/error/Error.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/login/Login.js",["206"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n  const history = useHistory();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [loginPasswordValue, setLoginPasswordValue] = useState(\"\");\n\n  var [signupValue, setSignupValue] = useState(\"\");\n  var [signupPasswordValue, setSignupPasswordValue] = useState(\"\");\n  const [errroMessage, setErrorMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const handleEmailChange = (event) => {\n    setSignupValue(event.target.value);\n\n    if (\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        event.target.value,\n      )\n    ) {\n      setEmailError(\"\");\n      return true;\n    }\n    setEmailError(\"Email is not valid\");\n    return false;\n  };\n\n  const handlePasswordChange = (event) => {\n    setSignupPasswordValue(event.target.value);\n    if (event.target.value.length > 5) {\n      setPasswordError(\"\");\n      return true;\n    }\n    setPasswordError(\"Password must be at least 6 characters\");\n    return false;\n  };\n\n  const handleSignupUser = () => {\n    setIsLoading(true);\n    const data = {\n      name: nameValue,\n      email: signupValue,\n      password: signupPasswordValue,\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_SERVER_URL}/register`, data)\n      .then((res) => {\n        props.history.push(\"/\");\n        setIsLoading(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n        setErrorMessage(err.response.data.message);\n      });\n  };\n\n  const handleLoginUser = () => {\n    setIsLoading(true);\n    const data = {\n      email: loginValue,\n      password: loginPasswordValue,\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_SERVER_URL}/login`, data)\n      .then((res) => {\n        loginUser(\n          userDispatch,\n          loginValue,\n          loginPasswordValue,\n          props.history,\n          setIsLoading,\n          setError,\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        setIsLoading(false);\n        setErrorMessage(err.response.data.message);\n      });\n  };\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"Sign up\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.greeting}>\n                Welcome Back!\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                // onChange={(e) => setLoginValue(e.target.value)}\n                onChange={(e) => {\n                  setLoginValue(e.target.value);\n                  setErrorMessage(\"\");\n                }}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginPasswordValue}\n                onChange={(e) => {\n                  setLoginPasswordValue(e.target.value);\n                  setErrorMessage(\"\");\n                }}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n\n              <Typography className={classes.loginError}>\n                {errroMessage}\n              </Typography>\n\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || loginPasswordValue.length === 0\n                    }\n                    onClick={handleLoginUser}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.submitButton}\n                  >\n                    Login\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={(e) => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupValue}\n                onChange={handleEmailChange}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n                helperText={emailError}\n                FormHelperTextProps={{\n                  classes: {\n                    root: classes.root,\n                  },\n                }}\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={signupPasswordValue}\n                onChange={handlePasswordChange}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n                helperText={passwordError}\n                FormHelperTextProps={{\n                  classes: {\n                    root: classes.root,\n                  },\n                }}\n              />\n\n              <Typography className={classes.loginError}>\n                {errroMessage}\n              </Typography>\n\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={handleSignupUser}\n                    disabled={\n                      signupValue.length === 0 ||\n                      signupPasswordValue.length <= 5 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/login/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/error/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/Statistics.js",["207","208","209"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// import useStyles from \"./styles.js\";\n\nimport NDVIChart from \"../../components/Charts/NDVI_Chart\";\n// import WeatherChart from \"../../components/WeatherChart/WeatherChart\";\nimport PolygonTable from \"../../components/PolygonsTable/PolygonsTable\";\nimport NDVILayers from \"./NDVI_Layers\";\nimport useStyles from \"./styles.js\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function Statistics(props) {\n  var classes = useStyles();\n\n  const initialToDate = new Date();\n  const UNIX_initialToDate = initialToDate.getTime() / 1000;\n\n  const priorDate = new Date();\n  priorDate.setDate(priorDate.getDate() - 30);\n\n  const UNIX_initialFromDate = priorDate.getTime() / 1000;\n\n  const initialDate = new Date();\n  initialDate.setDate(initialDate.getDate() - 30);\n\n  const [fromDate, setfromDate] = useState(initialDate);\n  const [toDate, settoDate] = useState(new Date());\n  const [fromDateUNIX, setfromDateUNIX] = useState(UNIX_initialFromDate);\n  const [toDateUNIX, settoDateUNIX] = useState(UNIX_initialToDate);\n  const [NDVI_data, setNDVI_data] = useState([]);\n  const [polygonId, setPolygonId] = useState(\"\");\n  const [firstPolygonId, setFirstPolygonId] = useState(\"\");\n  const [mountComponent, setMountComponent] = useState(false);\n  const [doesPolygonExist, setDoesPolygonExist] = useState(false);\n\n  useEffect(() => {\n    let firstPolygon;\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setDoesPolygonExist(true);\n          firstPolygon = data[0].id;\n\n          setPolygonId(firstPolygon);\n          setFirstPolygonId(firstPolygon);\n          setTimeout(() => {\n            setMountComponent(true);\n          }, 1000);\n        } else {\n          setDoesPolygonExist(false);\n          setPolygonId(\"\");\n          setFirstPolygonId(\"\");\n          setTimeout(() => {\n            setMountComponent(true);\n          }, 1000);\n        }\n      });\n\n    setTimeout(() => {\n      fetch(\n        `${process.env.REACT_APP_AGROMONITORING_API_URL}ndvi/history?polyid=${firstPolygon}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setNDVI_data(data);\n        });\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    getNDVI();\n  }, [toDateUNIX, fromDateUNIX, polygonId]);\n\n  const handleFromDateChange = (date) => {\n    setfromDate(date);\n    const UNIX_dateFrom = date.getTime() / 1000;\n    setfromDateUNIX(UNIX_dateFrom);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleToDateChange = (date) => {\n    settoDate(date);\n    const UNIX_dateTo = date.getTime() / 1000;\n    settoDateUNIX(UNIX_dateTo);\n    setTimeout(() => {\n      getNDVI();\n    }, 500);\n  };\n\n  const handleChange = (value) => {\n    setPolygonId(value);\n    setTimeout(() => {\n      setMountComponent(true);\n    }, 1000);\n  };\n\n  const getNDVI = () => {\n    (async () => {\n      const rawResponse = await fetch(\n        `${process.env.REACT_APP_AGROMONITORING_API_URL}ndvi/history?polyid=${polygonId}&start=${fromDateUNIX}&end=${toDateUNIX}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      );\n      const data = await rawResponse.json();\n      setNDVI_data(data);\n    })();\n  };\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item md={12} xs={12}>\n        <PolygonTable onChange={handleChange} value={polygonId} />\n      </Grid>\n      {doesPolygonExist && (\n        <Grid container className={classes.NDVIContainer}>\n          <Grid item md={5}>\n            <Typography variant=\"h5\" style={{ color: \"#fff\" }}>\n              Historical\n            </Typography>\n            <Typography variant=\"h1\" style={{ color: \"#fff\" }}>\n              NDVI\n            </Typography>\n          </Grid>\n          <Grid item md={3}></Grid>\n          <Grid\n            item\n            md={4}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n                label=\"From\"\n                variant=\"inline\"\n                openTo=\"date\"\n                views={[\"year\", \"month\", \"date\"]}\n                format=\"dd/MM/yyyy\"\n                value={fromDate}\n                onChange={handleFromDateChange}\n                disableFuture\n              />\n            </MuiPickersUtilsProvider>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                label=\"To\"\n                style={{ margin: \"5px\", width: \"130px\", color: \"white\" }}\n                variant=\"inline\"\n                openTo=\"date\"\n                views={[\"year\", \"month\", \"date\"]}\n                format=\"dd/MM/yyyy\"\n                value={toDate}\n                onChange={handleToDateChange}\n                maxDate={new Date()}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item md={12} xs={12}>\n            {\" \"}\n            {NDVI_data.length > 0 && <NDVIChart data={NDVI_data} />}\n          </Grid>\n          <Grid item md={12} xs={12}>\n            {mountComponent && (\n              <NDVILayers\n                fromDateUNIX={fromDateUNIX}\n                toDateUNIX={toDateUNIX}\n                polygonId={polygonId}\n              />\n            )}\n          </Grid>\n        </Grid>\n      )}\n      {/* {mountComponent && (\n          <WeatherChart firstPolygon={firstPolygonId} polygonId={polygonId} />\n        )} */}\n    </Grid>\n  );\n}\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Image_Segmentation/Image_Segmentation.js",["210","211","212","213"],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Layout/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/weather/index.js",["214","215","216","217","218","219","220","221","222","223"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Input,\n  FormHelperText,\n  Card,\n  CardContent,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport useStyles from \"./styles.js\";\n\nconst StyledTableCell = withStyles({\n  root: {\n    color: \"#fff\",\n  },\n})(TableCell);\n\nconst Weather = () => {\n  const classes = useStyles();\n  const [polygons, setPolygons] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState();\n  const [currentSoil, setCurrentSoil] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchPolygons();\n  }, []);\n\n  const fetchPolygons = () => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n        });\n        setPolygons(data);\n        fetchWeather(data[0].center[0], data[0].center[1]);\n        fetchSoil(data[0].id);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const fetchWeather = async (lat, lon) => {\n    const promise = new Promise((resolve, reject) => {\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setCurrentWeather(data);\n        })\n        .catch((err) => console.log(err));\n    });\n    return promise;\n  };\n\n  const fetchSoil = async (id) => {\n    const promise = new Promise((resolve, reject) => {\n      fetch(\n        `https://api.agromonitoring.com/agro/1.0/soil?polygon_id=${id}&appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setCurrentSoil(data);\n          resolve(data);\n        })\n        .catch((err) => console.log(err));\n    });\n    return promise;\n  };\n\n  const handleFieldClick = async (field) => {\n    setLoading(true);\n    const promise1 = new Promise((resolve, reject) => {\n      fetchWeather(field.center[0], field.center[1]);\n      resolve();\n    });\n    const promise2 = new Promise((resolve, reject) => {\n      fetchSoil(field.id);\n      resolve();\n    });\n    await Promise.all([promise1, promise2]);\n    setLoading(false);\n  };\n\n  const convertKelinToCelcius = (kelvin) => {\n    return (kelvin - 273.15).toFixed(1);\n  };\n\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item md={4} xs={12}>\n          <Card\n            style={{\n              backgroundColor: \"#3F4257\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <CardContent>\n              <TableContainer\n                // component={Card}\n                style={{ backgroundColor: \"transparent\", color: \"white\" }}\n                sx={{\n                  \".MuiTableBody-root\": {\n                    backgroundColor: \"transparent\",\n                    color: \"white\",\n                  },\n                }}\n              >\n                <Table\n                  sx={{ minWidth: 500, color: \"#fff\" }}\n                  aria-label=\"simple table\"\n                >\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        Fields\n                      </StyledTableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {polygons.map((item, i) => {\n                      return (\n                        <TableRow\n                          key={i}\n                          style={{\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => handleFieldClick(item)}\n                        >\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {item.name}\n                          </StyledTableCell>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {item.area.toFixed(2)}ha\n                          </StyledTableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Card\n            style={{\n              backgroundColor: \"#3F4257\",\n              borderRadius: \"10px\",\n              color: \"white\",\n            }}\n          >\n            <CardContent>\n              {loading ? (\n                <CircularProgress />\n              ) : (\n                <Grid container spacing={2}>\n                  <Grid item md={12}>\n                    <Typography variant=\"body1\" component=\"h2\">\n                      Current\n                    </Typography>\n                    <Typography\n                      style={{\n                        fontSize: \"1.7rem\",\n                        fontWeight: \"400\",\n                      }}\n                    >\n                      Weather\n                    </Typography>\n                  </Grid>\n                  <Grid item md={6}>\n                    <img\n                      src={`https://openweathermap.org/img/w/${currentWeather?.weather[0]?.icon}.png`}\n                      alt=\"weather\"\n                      style={{\n                        width: \"80px\",\n                        height: \"80px\",\n                      }}\n                    />\n                  </Grid>\n                  <Grid item md={6}>\n                    <Typography\n                      style={{ fontSize: \"2.5rem\", fontWeight: \"400\" }}\n                      align=\"center\"\n                    >\n                      {convertKelinToCelcius(currentWeather?.main?.temp)}°\n                    </Typography>\n                    <Typography\n                      style={{ fontSize: \"1rem\", fontWeight: \"400\" }}\n                      align=\"center\"\n                    >\n                      {currentWeather?.weather[0]?.description}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Card\n            style={{\n              backgroundColor: \"#3F4257\",\n              borderRadius: \"10px\",\n              color: \"white\",\n            }}\n          >\n            <CardContent>\n              {loading ? (\n                <CircularProgress />\n              ) : (\n                <Grid container spacing={2}>\n                  <Grid item md={12}>\n                    <Typography variant=\"body1\" component=\"h2\">\n                      Current\n                    </Typography>\n                    <Typography\n                      style={{\n                        fontSize: \"1.7rem\",\n                        fontWeight: \"400\",\n                      }}\n                    >\n                      Soil data\n                    </Typography>\n                  </Grid>\n                  <Grid item md={12}>\n                    <Grid container spacing={3}>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilLeftText}>\n                          Temperature at the surface\n                        </Typography>\n                      </Grid>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilRightText}>\n                          {convertKelinToCelcius(currentSoil?.t0)}°C\n                        </Typography>\n                      </Grid>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilLeftText}>\n                          Temperature at the depth of 10cm\n                        </Typography>\n                      </Grid>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilRightText}>\n                          {convertKelinToCelcius(currentSoil?.t10)}°C\n                        </Typography>\n                      </Grid>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilLeftText}>\n                          Soil moisture\n                        </Typography>\n                      </Grid>\n                      <Grid item md={6}>\n                        <Typography className={classes.soilRightText}>\n                          {(currentSoil?.moisture * 100).toFixed(2)}%\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Weather;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Webcam/Webcam.js",["224"],"import React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@material-ui/core\";\nimport useStyles from \"./styles.js\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\n\nconst WebcamCapture = (props) => {\n  const classes = useStyles();\n\n  const [image, setImage] = useState(\"\");\n  const webcamRef = useRef(null);\n\n  const videoConstraints = {\n    width: 300,\n    height: 300,\n    facingMode: \"user\",\n  };\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n    props.handleImage(imageSrc);\n  });\n\n  const retake = () => {\n    setImage(\"\");\n    props.handleImagePresent(false);\n  };\n\n  return (\n    <div className=\"webcam-container\">\n      <div className=\"webcam-img\">\n        {image === \"\" ? (\n          <Webcam\n            audio={false}\n            // height={400}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            // width={300}\n            videoConstraints={videoConstraints}\n          />\n        ) : (\n          <img src={image} alt=\"img\" />\n        )}\n        {/* <input type=\"file\" accept=\"image/*\" capture=\"environment\" />{\" \"} */}\n      </div>\n      <div>\n        {image !== \"\" ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => {\n              e.preventDefault();\n              retake();\n            }}\n            className={classes.webcamBtn}\n            startIcon={<CameraAltIcon />}\n          >\n            Retake Image\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => {\n              e.preventDefault();\n              capture();\n            }}\n            className={classes.webcamBtn}\n            startIcon={<CameraAltIcon />}\n          >\n            Capture\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WebcamCapture;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Audio_Player/Audio_Player.js",["225","226","227"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import AudioPlayer from \"material-ui-audio-player\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nfunction Audio(props) {\n  return <AudioPlayer src={props.audio} style={{ borderRadius: \"10px\" }} />;\n}\n\nexport default Audio;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Tab/Tab.js",["228","229"],"import React, { useEffect, useState } from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport PropTypes from \"prop-types\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Audio from \"../../components/Audio_Player/Audio_Player\";\nimport useStyles from \"./styles.js\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      className={classes.tabPanel}\n      style={{ padding: isMobile ? \"10px 0px\" : \"50px 20px\" }}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function ReaultTab(props) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const { audio, englishData, urduData } = props;\n  const [image, setImage] = useState();\n  const [imageURL, setImageURL] = useState();\n  const [fallback, setFallback] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    setImage(props.image);\n    setImageURL(\n      `${process.env.REACT_APP_SERVER_URL}/${props.image.replace(\n        \"jpg\",\n        \"png\",\n      )}`,\n    );\n  }, []);\n\n  useEffect(() => {\n    setImage(props.image);\n    setImageURL(\n      `${process.env.REACT_APP_SERVER_URL}/${props.image.replace(\n        \"jpg\",\n        \"png\",\n      )}`,\n    );\n  }, [props.image]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const reloadSrc = (e) => {\n    if (fallback) {\n      e.target.src = `${process.env.REACT_APP_SERVER_URL}/${props.image.replace(\n        \"jpg\",\n        \"png\",\n      )}`;\n    } else {\n      e.target.src = imageURL(\n        `${process.env.REACT_APP_SERVER_URL}/${props.image}`,\n      );\n      setFallback(true);\n    }\n  };\n\n  return (\n    <Card\n      style={{\n        width: \"100%\",\n        padding: isMobile ? \"0.3rem\" : \"1rem\",\n        backgroundColor: \"#3f4257\",\n        color: \"#fff\",\n      }}\n    >\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab label=\"English\" {...a11yProps(0)} />\n          <Tab label=\"اُردُو\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <Grid container spacing={4}>\n          <Grid item md={6} xs={12} style={{ padding: \"1rem\" }}>\n            <Typography\n              variant=\"h4\"\n              component=\"h2\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              {englishData.title}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"p\"\n              style={{ textAlign: \"justify\" }}\n            >\n              {englishData.description}\n            </Typography>\n\n            <Typography\n              variant=\"h5\"\n              bold\n              component=\"h2\"\n              style={{ fontWeight: \"bold\", marginTop: \"20px\" }}\n            >\n              Symptoms\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              {englishData.symptoms.map((symptom, index) => (\n                <li key={index}>{symptom}</li>\n              ))}\n            </Typography>\n          </Grid>\n\n          <Grid\n            item\n            md={6}\n            xs={12}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n          >\n            <Audio audio={audio} />\n            <img\n              src={imageURL}\n              alt=\"result\"\n              className={classes.resultImage}\n              key={Date.now()}\n            />\n          </Grid>\n        </Grid>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Grid container spacing={4}>\n          <Grid item md={6} xs={12} style={{ padding: \"1rem\" }}>\n            <Typography\n              variant=\"h4\"\n              component=\"h2\"\n              style={{ fontWeight: \"bold\", direction: \"rtl\" }}\n            >\n              {urduData.title}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"p\"\n              style={{ textAlign: \"justify\", direction: \"rtl\" }}\n            >\n              {urduData.description}\n            </Typography>\n\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              style={{\n                fontWeight: \"bold\",\n                marginTop: \"20px\",\n                direction: \"rtl\",\n              }}\n            >\n              علامات\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"p\"\n              style={{\n                direction: \"rtl\",\n              }}\n            >\n              {urduData.symptoms.map((symptom, index) => (\n                <li key={index}>{symptom}</li>\n              ))}\n            </Typography>\n          </Grid>\n\n          <Grid\n            item\n            md={6}\n            xs={12}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n          >\n            <Audio audio={audio} />\n            <img\n              src={imageURL}\n              alt=\"result\"\n              className={classes.resultImage}\n              onError={reloadSrc}\n            />\n          </Grid>\n        </Grid>\n      </TabPanel>\n    </Card>\n  );\n}\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/Sidebar.js",["230","231","232","233","234","235","236","237","238","239"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List, Typography } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { useMediaQuery } from \"react-responsive\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"Disease Detection\",\n    link: \"/app/disease-detection\",\n    icon: <HomeIcon />,\n  },\n  { id: 1, label: \"Fields\", link: \"/app/fields\", icon: <HomeIcon /> },\n  { id: 2, label: \"Statistics\", link: \"/app/statistics\", icon: <HomeIcon /> },\n  { id: 3, label: \"Weather\", link: \"/app/weather\", icon: <HomeIcon /> },\n];\n\nfunction Sidebar({ location, history }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var userDispatch = useUserDispatch();\n\n  var isDesktop = useMediaQuery({\n    query: \"(min-width: 1024px)\",\n  });\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n      // style={{ backgroundColor: \"#373368\" }}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <div className={classes.userArea}>\n        <img src=\"/person.png\" className={classes.sideBarImage} alt=\"\" />\n        <h3>John Doe</h3>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"30%\",\n          width: \"100%\",\n          height: \"50px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography\n          onClick={() => signOut(userDispatch, history)}\n          variant=\"body1\"\n          style={{\n            cursor: \"pointer\",\n            fontSize: \"1rem\",\n            color: \"#fff\",\n          }}\n        >\n          Logout\n        </Typography>\n      </div>{\" \"}\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/dashboard/Dashboard.js",["240","241","242"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n// import Audio_Player from \"../../components/Audio_Player/Audio_Player\";\n\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as turf from \"@turf/turf\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport WeatherWidget from \"../../components/Weather_Widget/WeatherWidget\";\nimport DashboardPolygonTable from \"../../components/PolygonsTable/DashboardPolygonTable\";\n\nimport Button from \"@material-ui/core/Button\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_GL_ACCESS_TOKEN;\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const draw = useRef(null);\n  const [lng, setLng] = useState(73.1386);\n  const [lat, setLat] = useState(33.6762);\n  const [zoom, setZoom] = useState(8);\n  const [roundedArea, setroundedArea] = useState(0);\n  const [location, setLocation] = useState({\n    latitude: 32,\n    longitude: 73,\n  });\n  const [polygon, setPolygon] = useState({});\n\n  const [polygonName, setpolygonName] = useState(\"\");\n  const [fieldHelperText, setFieldHelperText] = useState(\"\");\n\n  const childRef = useRef();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_GEO_LOCATION_URL}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLocation({\n          latitude: data.latitude,\n          longitude: data.longitude,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: process.env.REACT_APP_MAPBOX_GL_STYLE,\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    draw.current = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true,\n      },\n      defaultMode: \"draw_polygon\",\n    });\n    map.current.addControl(draw.current);\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    map.current.on(\"draw.create\", updateArea);\n    map.current.on(\"draw.delete\", updateArea);\n    map.current.on(\"draw.update\", updateArea);\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  const showMyLocation = () => {\n    if (!map.current) return;\n    map.current.flyTo({\n      center: [location.longitude, location.latitude],\n      essential: true,\n      zoom: 13,\n      speed: 2, // make the flying slow\n      curve: 1,\n    });\n  };\n\n  function updateArea(e) {\n    const data = draw.current.getAll();\n\n    if (data.features.length > 0) {\n      const area = turf.area(data);\n      setroundedArea(Math.round(area * 100) / 100 / 10000);\n      setFieldHelperText(\"\");\n\n      const polygonData = turf.polygon(data.features[0].geometry.coordinates, {\n        name: { polygonName },\n      });\n\n      setPolygon(polygonData);\n    } else {\n      setroundedArea(0);\n      if (e.type !== \"draw.delete\") alert(\"Click the map to draw a polygon.\");\n    }\n  }\n\n  const createPolygon = () => {\n    if (roundedArea > 250) {\n      setFieldHelperText(\"Area cannot exceed 200ha\");\n    } else {\n      (async () => {\n        const rawResponse = await fetch(\n          `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ geo_json: polygon, name: polygonName }),\n          },\n        );\n        const content = await rawResponse.json();\n        childRef.current.updateTable();\n      })();\n      setpolygonName(\"\");\n    }\n  };\n\n  const handlePolygonNameChange = (e) => {\n    setpolygonName(e.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        item\n        xs={12}\n        md={7}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Grid item md={12} style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              left: \"10px\",\n              zIndex: \"2\",\n              backgroundColor: \"white\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n            }}\n          >\n            <p style={{ margin: \"0px\" }}>Click the map to draw a polygon.</p>{\" \"}\n            <p style={{ margin: \"0px\" }}>\n              Note: Area cannot be greater than 200ha\n            </p>\n            <p style={{ margin: \"0px\" }}>\n              {\" \"}\n              {roundedArea > 0 ? `${roundedArea.toFixed(2)} ha` : \"\"}\n            </p>\n          </div>\n          <div ref={mapContainer} className={classes.map_container} />\n        </Grid>\n        <Button\n          onClick={showMyLocation}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.locateButton}\n          startIcon={<LocationOnIcon />}\n        >\n          Locate Me\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={5}>\n        <WeatherWidget location={location} />\n      </Grid>\n\n      <Grid item md={7} xs={12} m={20} className={classes.addPolygonContainer}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Enter field name\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={polygonName}\n          onChange={handlePolygonNameChange}\n          className={classes.addPolygonInput}\n          helperText={fieldHelperText}\n          FormHelperTextProps={{\n            classes: {\n              root: classes.root,\n            },\n          }}\n          style={{\n            backgroundColor: \"rgba(255,255,255,1)\",\n            borderRadius: 25,\n            color: \"#fff\",\n          }}\n        />\n        <Button\n          onClick={createPolygon}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.createPolygonButon}\n          // startIcon={<AddIcon />}\n          disabled={roundedArea > 0 ? false : true}\n        >\n          Create field\n        </Button>\n      </Grid>\n      <Grid item md={12} xs={12} style={{ marginTop: \"50px\" }}>\n        <DashboardPolygonTable ref={childRef} />\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Header/Header.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        {isMobile && (\n          <IconButton\n            color=\"inherit\"\n            onClick={() => toggleSidebar(layoutDispatch)}\n            className={classNames(\n              classes.headerMenuButtonSandwich,\n              classes.headerMenuButtonCollapse,\n            )}\n          >\n            {layoutState.isSidebarOpened ? (\n              <ArrowBackIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            ) : (\n              <MenuIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n          </IconButton>\n        )}\n        <Typography variant=\"h4\" weight=\"medium\" className={classes.logotype}>\n          AgriVision\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Image_Segmentation/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Image_Picker/Image_Picker.js",["273","274"],"import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport useStyles from \"./styles.js\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport ImageUploader from \"react-images-upload\";\n\nfunction ImagePicker(props) {\n  const classes = useStyles();\n\n  const onDrop = (pictureFile, pictureDataURL) => {\n    if (pictureDataURL.length > 0) {\n      props.handleImage(pictureDataURL[0]);\n    } else {\n      props.handleImagePresent(false);\n    }\n  };\n\n  return (\n    <div className={classes.image_picker_container}>\n      <ImageUploader\n        singleImage={true}\n        withPreview={true}\n        withIcon={true}\n        buttonText=\"Choose an image\"\n        onChange={onDrop}\n        imgExtension={[\".jpg\", \".jpeg\", \".png\"]}\n        label=\"Max file size: 10MB, accepted: JPG, PNG, JPEG\"\n        maxFileSize={10485760}\n      />\n    </div>\n  );\n}\n\nexport default ImagePicker;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/Statistics/NDVI_Layers.js",["275","276","277","278","279","280"],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Webcam/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/PolygonsTable/PolygonsTable.js",["281"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst PolygonTable = (props) => {\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [sortType, setSortType] = useState();\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setValue(data[0].id);\n          data.map((item, i) => {\n            const unixTimestamp = data[i].created_at;\n            var date = new Date(unixTimestamp * 1000);\n            const standard_date =\n              date.getDate() +\n              \"-\" +\n              (date.getMonth() + 1) +\n              \"-\" +\n              date.getFullYear();\n            data[i].created_at = standard_date;\n            data[i].area.toFixed(1);\n          });\n          setdata(data);\n        } else {\n          setdata([]);\n        }\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getData = () => {\n    if (sortColumn && sortType) {\n      return data.sort((a, b) => {\n        let x = a[sortColumn];\n        let y = b[sortColumn];\n        if (typeof x === \"string\") {\n          x = x.charCodeAt();\n        }\n        if (typeof y === \"string\") {\n          y = y.charCodeAt();\n        }\n        if (sortType === \"asc\") {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n    return data;\n  };\n\n  const handleSortColumn = (sortColumn, sortType) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setSortColumn(sortColumn);\n      setSortType(sortType);\n    }, 10);\n  };\n\n  const handleChange = (event) => {\n    props.onChange(event.target.value);\n    setValue(event.target.value);\n  };\n\n  const CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\n    <Cell {...props}>\n      <div>\n        <Radio\n          checked={value === rowData.id}\n          onChange={handleChange}\n          value={rowData.id}\n          name=\"radio-button\"\n          inputProps={{ \"aria-label\": \"A\" }}\n        />\n      </div>\n    </Cell>\n  );\n\n  return (\n    // loading ? (\n    //   <div style={{ height: \"200px\" }}>\n    //     <img\n    //       src=\"/horizontal-loader.gif\"\n    //       alt=\"loader\"\n    //       style={{ display: \"block\", margin: \"auto\" }}\n    //     ></img>\n    //   </div>\n    // ) : (\n    <Table\n      height={420}\n      data={getData()}\n      sortColumn={sortColumn}\n      sortType={sortType}\n      onSortColumn={handleSortColumn}\n      loading={loading}\n      autoHeight={true}\n      hover={false}\n      rowHeight={60}\n      headerHeight={40}\n      cellBordered={false}\n      bordered={false}\n      style={{\n        width: \"100%\",\n        backgroundColor: \"transparent\",\n        borderRadius: \"1rem\",\n        border: \"1px solid #fff\",\n      }}\n    >\n      <Column\n        width={isMobile ? 60 : 100}\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell\n          style={{ backgroundColor: \"#3f4257\", color: \"white\", height: \"3rem\" }}\n        >\n          Select\n        </HeaderCell>\n        <CheckCell dataKey=\"id\" />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Polygon Name\n        </HeaderCell>\n        <Cell dataKey=\"name\" style={{ padding: \"20px\", border: \"none\" }} />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Created at\n        </HeaderCell>\n        <Cell dataKey=\"created_at\" style={{ padding: \"20px\" }} />\n      </Column>\n\n      <Column\n        flexGrow={1}\n        sortable\n        align=\"center\"\n        style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n      >\n        <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n          Area\n        </HeaderCell>\n        <Cell dataKey=\"area\" style={{ padding: \"20px\" }} />\n      </Column>\n    </Table>\n  );\n};\n\nexport default PolygonTable;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Charts/NDVI_Chart.js",["282","283","284","285","286"],"import React, { useState, useEffect } from \"react\";\n// import { Chart, LineAdvance, Axis } from \"bizcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction NDVIChart(props) {\n  let result = [];\n  // const [options, setOptions] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [chartDate, setChartDate] = useState([]);\n  result.push({\n    name: \"Maximum\",\n    data: [],\n  });\n  result.push({\n    name: \"Minimum\",\n    data: [],\n  });\n  result.push({\n    name: \"Mean\",\n    data: [],\n  });\n  props.data.map((item, i) => {\n    var unixTimestamp = props.data[i].dt;\n    var date = new Date(unixTimestamp * 1000);\n    const standard_date =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n    result[0].data.push(item.data.max.toFixed(2));\n    result[1].data.push(item.data.min.toFixed(2));\n    result[2].data.push(item.data.mean.toFixed(2));\n    // setChartDate((prevState) => [...prevState, standard_date]);\n    chartDate.push(standard_date);\n  });\n\n  const options = {\n    chart: {\n      borderRadius: 10,\n      foreColor: \"#fff\",\n      height: \"auto\",\n      type: \"line\",\n      // background: \"#373368\",\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 3,\n    },\n    // title: {\n    //   text: \"NDVI Statistics\",\n    //   margin: 20,\n    //   style: {\n    //     fontSize: \"18px\",\n    //     fontWeight: \"light\",\n    //     color: \"white\",\n    //   },\n    //   align: \"center\",\n    // },\n\n    legend: {\n      show: true,\n      showForSingleSeries: false,\n      showForNullSeries: true,\n      showForZeroSeries: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      fontFamily: \"Helvetica, Arial\",\n      fontWeight: 400,\n      formatter: undefined,\n      inverseOrder: false,\n      height: 50,\n      tooltipHoverFormatter: function (val, opts) {\n        return (\n          val +\n          \" - \" +\n          opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\n          \"\"\n        );\n      },\n      customLegendItems: [],\n      offsetX: 0,\n      offsetY: 0,\n      labels: {\n        // colors: \"#fff\",\n        useSeriesColors: false,\n      },\n      markers: {\n        width: 12,\n        height: 12,\n        strokeWidth: 0,\n        // strokeColor: \"#fff\",\n        fillColors: undefined,\n        radius: 12,\n        customHTML: undefined,\n        onClick: undefined,\n        offsetX: 0,\n        offsetY: 0,\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 0,\n      },\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n\n    xaxis: {\n      categories: chartDate.reverse(),\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          // colors: \"#fff\",\n        },\n      },\n    },\n    // grid: {\n    //   borderColor: \"red\",\n    //   strokeDashArray: 0,\n    //   position: \"back\",\n    //   show: true,\n    //   xaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    //   yaxis: {\n    //     lines: {\n    //       show: false,\n    //     },\n    //   },\n    // },\n    theme: {\n      pallete: \"palette2\",\n      // mode: \"dark\",\n    },\n    tooltip: {\n      theme: false,\n      y: [\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      ],\n    },\n    colors: [\"#F44336\", \"#E91E63\", \"#9C27B0\"],\n    responsive: [\n      {\n        breakpoint: 1000,\n        options: {\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    animations: {\n      enabled: true,\n      easing: \"easeinout\",\n      speed: 800,\n      animateGradually: {\n        enabled: true,\n        delay: 150,\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 350,\n      },\n    },\n    noData: {\n      text: \"No data for selected period\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n      offsetX: 0,\n      offsetY: 0,\n      style: {\n        color: undefined,\n        fontSize: \"14px\",\n        fontFamily: undefined,\n      },\n    },\n  };\n\n  return (\n    // <Chart\n    //   padding={\"auto\"}\n    //   appendPadding={10}\n    //   scale={{ date: { type: \"cat\", nice: false } }}\n    //   autoFit\n    //   height={300}\n    //   data={result}\n    // >\n    //   <LineAdvance shape=\"smooth\" point position=\"date*value\" color=\"label\" />\n    //   <Axis\n    //     name=\"date\"\n    //     label={{\n    //       rotate: 0.5,\n    //       autoRotate: true,\n    //       style: { textAlign: \"start\", fontSize: 11 },\n    //     }}\n    //   />\n    // </Chart>\n    <ReactApexChart\n      options={options}\n      series={result}\n      type=\"line\"\n      height={350}\n      style={{ borderRadius: \"5px\" }}\n    />\n  );\n}\n\nexport default NDVIChart;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Tab/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Image_Picker/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Header/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/dashboard/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Notification/Notification.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/UserAvatar/UserAvatar.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/PolygonsTable/DashboardPolygonTable.js",["287","288","289","290","291","292","293","294","295"],"import React, {\n  useState,\n  useEffect,\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Table, Column, HeaderCell, Cell } from \"rsuite-table\";\nimport \"rsuite-table/dist/css/rsuite-table.css\";\nimport {\n  Dialog,\n  Button,\n  TextField,\n  Modal,\n  DialogActions,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst DashboardPolygonTable = forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const [data, setdata] = useState([]);\n  const [sortColumn, setSortColumn] = useState();\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [editName, setEditName] = useState(\"\");\n  const [polygonId, setPolygonId] = useState();\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [polygonToDelete, setPolygonToDelete] = useState();\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    fetchPolygons();\n  }, []);\n\n  const fetchPolygons = () => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((item, i) => {\n          const unixTimestamp = data[i].created_at;\n          var date = new Date(unixTimestamp * 1000);\n          const standard_date =\n            date.getDate() +\n            \"-\" +\n            (date.getMonth() + 1) +\n            \"-\" +\n            date.getFullYear();\n          data[i].created_at = standard_date;\n        });\n        if (data.length > 0) {\n          setdata(data);\n        } else {\n          setdata([]);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useImperativeHandle(ref, () => ({\n    updateTable() {\n      fetchPolygons();\n    },\n  }));\n\n  const ModalClick = (id) => {\n    setOpen(true);\n    setPolygonId(id);\n  };\n\n  const EditPolygon = () => {\n    fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons/${polygonId}?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: editName,\n        }),\n      },\n    );\n    setOpen(false);\n    setEditName(\"\");\n    setTimeout(() => {\n      fetchPolygons();\n    }, 500);\n  };\n\n  const DeletePolygon = async (id) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_AGROMONITORING_API_URL}polygons/${id}?appid=${process.env.REACT_APP_AGROMONITORING_API_KEY}`,\n      {\n        method: \"DELETE\",\n      },\n    );\n\n    setDialogOpen(false);\n\n    setTimeout(() => {}, fetchPolygons(), 1000);\n  };\n\n  const EditPolygonsCell = ({\n    rowData,\n    onChange,\n    checkedKeys,\n    dataKey,\n    ...props\n  }) => (\n    <Cell {...props}>\n      <div>\n        <IconButton size=\"small\" onClick={() => ModalClick(rowData.id)}>\n          <EditIcon style={{ color: \"#fff\" }} />\n        </IconButton>\n        |\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            setDialogOpen(true);\n            setPolygonToDelete(rowData.id);\n          }}\n        >\n          <DeleteIcon style={{ color: \"#fff\" }} />\n        </IconButton>\n      </div>\n    </Cell>\n  );\n\n  const handleEditNameChange = (e) => {\n    setEditName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Table\n        height={420}\n        data={data}\n        sortColumn={sortColumn}\n        loading={loading}\n        autoHeight={true}\n        cellBordered={false}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"transparent\",\n          borderRadius: \"1rem\",\n          border: \"1px solid #fff\",\n        }}\n      >\n        <Column\n          align=\"center\"\n          flexGrow={2}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Field Name\n          </HeaderCell>\n          <Cell dataKey=\"name\" />\n        </Column>\n\n        <Column\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Created at\n          </HeaderCell>\n          <Cell dataKey=\"created_at\" />\n        </Column>\n\n        <Column\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell style={{ backgroundColor: \"#3f4257\", color: \"white\" }}>\n            Area\n          </HeaderCell>\n          <Cell dataKey=\"area\" />\n        </Column>\n\n        <Column\n          align=\"center\"\n          flexGrow={1}\n          style={{ backgroundColor: \" #3f4257\", color: \"white\" }}\n        >\n          <HeaderCell\n            style={{\n              backgroundColor: \"#3f4257\",\n              color: \"white\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button onClick={() => fetchPolygons()}>\n              <RefreshIcon style={{ color: \"white\" }} />\n            </Button>\n          </HeaderCell>\n          <EditPolygonsCell />\n        </Column>\n      </Table>\n\n      <Dialog\n        fullWidth\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        BackdropProps={{ style: { backgroundColor: \"rgba(0,0,0,0.5)\" } }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">Edit field name</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Enter field name\"\n              variant=\"outlined\"\n              defaultValue={editName}\n              value={editName}\n              fullWidth\n              onChange={handleEditNameChange}\n              required\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            onClick={EditPolygon}\n            color=\"primary\"\n            disabled={editName === \"\" ? true : false}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullWidth\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        BackdropProps={{ style: { backgroundColor: \"rgba(0,0,0,0.5)\" } }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirm delete</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this field?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => setDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => DeletePolygon(polygonToDelete)}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n});\n\nexport default DashboardPolygonTable;\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Weather_Widget/WeatherWidget.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Wrappers/Wrappers.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/UserAvatar/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Notification/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/styles.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/SidebarLink/SidebarLink.js",["296"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { useMediaQuery } from \"react-responsive\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../../../context/LayoutContext.js\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n  var layoutDispatch = useLayoutDispatch();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n  if (link && link.includes(\"http\")) {\n    return (\n      <ListItem\n        button\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <a className={classes.externalLink} href={link}>\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive,\n            })}\n          >\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened,\n              }),\n            }}\n            primary={label}\n          />\n        </a>\n      </ListItem>\n    );\n  }\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n        onClick={() => (isMobile ? toggleSidebar(layoutDispatch) : \"\")}\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map((childrenLink) => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/SidebarLink/styles.js",["297","298"],"import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    // color: \"white\",\n    background: \"linear-gradient(to right, #3F4257, #3F4257)\",\n    backgroundRepeat: \"no-repeat\",\n    transition: \"background-size 1s 0s\",\n    transform: \"perspective(1px) translateZ(0)\",\n    position: \"relative\",\n    transition: \"color 0.3s\",\n    \"&:hover\": {\n      color: \"black\",\n      \"& $linkIcon\": {\n        color: \"#3F4257\",\n      },\n      \"& $linkText\": {\n        color: \"#3F4257\",\n      },\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\",\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      zIndex: \"-1\",\n      background: \"white\",\n      transform: \"scaleX(0)\",\n      transformOrigin: \"0 50%;\",\n      transition: \"transform 0.3s ease-out\",\n    },\n    \"&:hover:before\": {\n      transform: \"scaleX(1)\",\n    },\n  },\n  externalLink: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n  linkActive: {\n    background: \"white\",\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"white\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  linkIconActive: {\n    // color: theme.palette.primary.main,\n    color: \"#3F4257\",\n  },\n  linkText: {\n    padding: 0,\n    color: \"white\",\n    // color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: \"#3F4257\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/components/Sidebar/components/Dot.js",[],"/Users/salmaninayat/Coding Folder/Agri-D-Map-Web-Portal/src/pages/weather/styles.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":2,"column":25,"nodeType":"305","messageId":"306","endLine":2,"endColumn":33},{"ruleId":"303","severity":1,"message":"307","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":13},{"ruleId":"303","severity":1,"message":"308","line":4,"column":15,"nodeType":"305","messageId":"306","endLine":4,"endColumn":25},{"ruleId":"303","severity":1,"message":"309","line":4,"column":27,"nodeType":"305","messageId":"306","endLine":4,"endColumn":31},{"ruleId":"303","severity":1,"message":"310","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":12},{"ruleId":"303","severity":1,"message":"311","line":22,"column":9,"nodeType":"305","messageId":"306","endLine":22,"endColumn":16},{"ruleId":"303","severity":1,"message":"312","line":38,"column":10,"nodeType":"305","messageId":"306","endLine":38,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":77,"column":6,"nodeType":"315","endLine":77,"endColumn":8,"suggestions":"316"},{"ruleId":"313","severity":1,"message":"317","line":81,"column":6,"nodeType":"315","endLine":81,"endColumn":43,"suggestions":"318"},{"ruleId":"303","severity":1,"message":"319","line":18,"column":8,"nodeType":"305","messageId":"306","endLine":18,"endColumn":22},{"ruleId":"303","severity":1,"message":"320","line":19,"column":8,"nodeType":"305","messageId":"306","endLine":19,"endColumn":13},{"ruleId":"303","severity":1,"message":"321","line":23,"column":8,"nodeType":"305","messageId":"306","endLine":23,"endColumn":22},{"ruleId":"303","severity":1,"message":"322","line":31,"column":10,"nodeType":"305","messageId":"306","endLine":31,"endColumn":17},{"ruleId":"303","severity":1,"message":"323","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":9},{"ruleId":"303","severity":1,"message":"324","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":12},{"ruleId":"303","severity":1,"message":"325","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":9},{"ruleId":"303","severity":1,"message":"326","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":11},{"ruleId":"303","severity":1,"message":"327","line":9,"column":3,"nodeType":"305","messageId":"306","endLine":9,"endColumn":13},{"ruleId":"303","severity":1,"message":"328","line":10,"column":3,"nodeType":"305","messageId":"306","endLine":10,"endColumn":14},{"ruleId":"303","severity":1,"message":"329","line":11,"column":3,"nodeType":"305","messageId":"306","endLine":11,"endColumn":8},{"ruleId":"303","severity":1,"message":"330","line":12,"column":3,"nodeType":"305","messageId":"306","endLine":12,"endColumn":17},{"ruleId":"313","severity":1,"message":"331","line":42,"column":6,"nodeType":"315","endLine":42,"endColumn":8,"suggestions":"332"},{"ruleId":"333","severity":1,"message":"334","line":50,"column":28,"nodeType":"335","messageId":"336","endLine":50,"endColumn":30},{"ruleId":"313","severity":1,"message":"337","line":19,"column":19,"nodeType":"338","endLine":19,"endColumn":36},{"ruleId":"303","severity":1,"message":"339","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"340","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":20},{"ruleId":"303","severity":1,"message":"323","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"341","line":51,"column":10,"nodeType":"305","messageId":"306","endLine":51,"endColumn":15},{"ruleId":"313","severity":1,"message":"342","line":64,"column":6,"nodeType":"315","endLine":64,"endColumn":8,"suggestions":"343"},{"ruleId":"303","severity":1,"message":"344","line":5,"column":24,"nodeType":"305","messageId":"306","endLine":5,"endColumn":41},{"ruleId":"303","severity":1,"message":"345","line":6,"column":17,"nodeType":"305","messageId":"306","endLine":6,"endColumn":31},{"ruleId":"303","severity":1,"message":"346","line":7,"column":17,"nodeType":"305","messageId":"306","endLine":7,"endColumn":31},{"ruleId":"303","severity":1,"message":"347","line":8,"column":16,"nodeType":"305","messageId":"306","endLine":8,"endColumn":25},{"ruleId":"303","severity":1,"message":"348","line":9,"column":21,"nodeType":"305","messageId":"306","endLine":9,"endColumn":32},{"ruleId":"303","severity":1,"message":"349","line":10,"column":19,"nodeType":"305","messageId":"306","endLine":10,"endColumn":30},{"ruleId":"303","severity":1,"message":"350","line":11,"column":18,"nodeType":"305","messageId":"306","endLine":11,"endColumn":25},{"ruleId":"303","severity":1,"message":"351","line":51,"column":7,"nodeType":"305","messageId":"306","endLine":51,"endColumn":16},{"ruleId":"303","severity":1,"message":"352","line":55,"column":9,"nodeType":"305","messageId":"306","endLine":55,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":60,"column":7,"nodeType":"305","messageId":"355","endLine":60,"endColumn":19},{"ruleId":"303","severity":1,"message":"356","line":19,"column":8,"nodeType":"305","messageId":"306","endLine":19,"endColumn":15},{"ruleId":"303","severity":1,"message":"357","line":24,"column":8,"nodeType":"305","messageId":"306","endLine":24,"endColumn":20},{"ruleId":"303","severity":1,"message":"358","line":143,"column":15,"nodeType":"305","messageId":"306","endLine":143,"endColumn":22},{"ruleId":"303","severity":1,"message":"359","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":12},{"ruleId":"303","severity":1,"message":"360","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":7},{"ruleId":"303","severity":1,"message":"326","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":11},{"ruleId":"303","severity":1,"message":"361","line":9,"column":3,"nodeType":"305","messageId":"306","endLine":9,"endColumn":6},{"ruleId":"303","severity":1,"message":"309","line":10,"column":3,"nodeType":"305","messageId":"306","endLine":10,"endColumn":7},{"ruleId":"303","severity":1,"message":"362","line":14,"column":18,"nodeType":"305","messageId":"306","endLine":14,"endColumn":26},{"ruleId":"303","severity":1,"message":"344","line":15,"column":24,"nodeType":"305","messageId":"306","endLine":15,"endColumn":41},{"ruleId":"303","severity":1,"message":"363","line":16,"column":13,"nodeType":"305","messageId":"306","endLine":16,"endColumn":24},{"ruleId":"303","severity":1,"message":"364","line":17,"column":13,"nodeType":"305","messageId":"306","endLine":17,"endColumn":23},{"ruleId":"303","severity":1,"message":"365","line":18,"column":11,"nodeType":"305","messageId":"306","endLine":18,"endColumn":19},{"ruleId":"303","severity":1,"message":"366","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":15},{"ruleId":"303","severity":1,"message":"323","line":27,"column":29,"nodeType":"305","messageId":"306","endLine":27,"endColumn":35},{"ruleId":"303","severity":1,"message":"367","line":28,"column":8,"nodeType":"305","messageId":"306","endLine":28,"endColumn":20},{"ruleId":"303","severity":1,"message":"368","line":29,"column":8,"nodeType":"305","messageId":"306","endLine":29,"endColumn":18},{"ruleId":"303","severity":1,"message":"369","line":37,"column":27,"nodeType":"305","messageId":"306","endLine":37,"endColumn":34},{"ruleId":"303","severity":1,"message":"370","line":40,"column":7,"nodeType":"305","messageId":"306","endLine":40,"endColumn":15},{"ruleId":"303","severity":1,"message":"371","line":71,"column":7,"nodeType":"305","messageId":"306","endLine":71,"endColumn":20},{"ruleId":"303","severity":1,"message":"372","line":100,"column":7,"nodeType":"305","messageId":"306","endLine":100,"endColumn":19},{"ruleId":"303","severity":1,"message":"373","line":103,"column":8,"nodeType":"305","messageId":"306","endLine":103,"endColumn":16},{"ruleId":"303","severity":1,"message":"374","line":103,"column":18,"nodeType":"305","messageId":"306","endLine":103,"endColumn":29},{"ruleId":"303","severity":1,"message":"375","line":104,"column":8,"nodeType":"305","messageId":"306","endLine":104,"endColumn":21},{"ruleId":"303","severity":1,"message":"376","line":104,"column":23,"nodeType":"305","messageId":"306","endLine":104,"endColumn":39},{"ruleId":"303","severity":1,"message":"377","line":105,"column":8,"nodeType":"305","messageId":"306","endLine":105,"endColumn":25},{"ruleId":"303","severity":1,"message":"378","line":105,"column":27,"nodeType":"305","messageId":"306","endLine":105,"endColumn":47},{"ruleId":"303","severity":1,"message":"379","line":106,"column":8,"nodeType":"305","messageId":"306","endLine":106,"endColumn":29},{"ruleId":"303","severity":1,"message":"380","line":106,"column":31,"nodeType":"305","messageId":"306","endLine":106,"endColumn":55},{"ruleId":"303","severity":1,"message":"381","line":107,"column":8,"nodeType":"305","messageId":"306","endLine":107,"endColumn":19},{"ruleId":"303","severity":1,"message":"382","line":107,"column":21,"nodeType":"305","messageId":"306","endLine":107,"endColumn":35},{"ruleId":"303","severity":1,"message":"383","line":108,"column":8,"nodeType":"305","messageId":"306","endLine":108,"endColumn":20},{"ruleId":"303","severity":1,"message":"384","line":108,"column":22,"nodeType":"305","messageId":"306","endLine":108,"endColumn":35},{"ruleId":"303","severity":1,"message":"339","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"385","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"307","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"386","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":19},{"ruleId":"303","severity":1,"message":"387","line":12,"column":8,"nodeType":"305","messageId":"306","endLine":12,"endColumn":17},{"ruleId":"303","severity":1,"message":"388","line":21,"column":8,"nodeType":"305","messageId":"306","endLine":21,"endColumn":13},{"ruleId":"303","severity":1,"message":"389","line":41,"column":10,"nodeType":"305","messageId":"306","endLine":41,"endColumn":22},{"ruleId":"390","severity":1,"message":"391","line":270,"column":62,"nodeType":"392","messageId":"393","endLine":270,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":25,"column":30,"nodeType":"335","messageId":"336","endLine":25,"endColumn":32},{"ruleId":"303","severity":1,"message":"394","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"395","line":8,"column":10,"nodeType":"305","messageId":"306","endLine":8,"endColumn":19},{"ruleId":"303","severity":1,"message":"396","line":8,"column":21,"nodeType":"305","messageId":"306","endLine":8,"endColumn":33},{"ruleId":"303","severity":1,"message":"397","line":9,"column":21,"nodeType":"305","messageId":"306","endLine":9,"endColumn":33},{"ruleId":"333","severity":1,"message":"334","line":22,"column":28,"nodeType":"335","messageId":"336","endLine":22,"endColumn":30},{"ruleId":"303","severity":1,"message":"398","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":9},{"ruleId":"303","severity":1,"message":"399","line":14,"column":3,"nodeType":"305","messageId":"306","endLine":14,"endColumn":8},{"ruleId":"303","severity":1,"message":"400","line":16,"column":3,"nodeType":"305","messageId":"306","endLine":16,"endColumn":13},{"ruleId":"303","severity":1,"message":"401","line":32,"column":9,"nodeType":"305","messageId":"306","endLine":32,"endColumn":16},{"ruleId":"303","severity":1,"message":"402","line":35,"column":22,"nodeType":"305","messageId":"306","endLine":35,"endColumn":35},{"ruleId":"303","severity":1,"message":"403","line":36,"column":19,"nodeType":"305","messageId":"306","endLine":36,"endColumn":29},{"ruleId":"303","severity":1,"message":"352","line":44,"column":9,"nodeType":"305","messageId":"306","endLine":44,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":56,"column":28,"nodeType":"335","messageId":"336","endLine":56,"endColumn":30},{"ruleId":"303","severity":1,"message":"404","line":108,"column":11,"nodeType":"305","messageId":"306","endLine":108,"endColumn":19},{"ruleId":"303","severity":1,"message":"405","line":18,"column":3,"nodeType":"305","messageId":"306","endLine":18,"endColumn":17},{"ruleId":"406","severity":1,"message":"407","line":12,"column":5,"nodeType":"408","messageId":"409","endLine":12,"endColumn":15},{"ruleId":"406","severity":1,"message":"410","line":64,"column":5,"nodeType":"408","messageId":"409","endLine":64,"endColumn":10},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'history' is assigned a value but never used.","'firstPolygonId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromDateUNIX' and 'toDateUNIX'. Either include them or remove the dependency array.","ArrayExpression",["413"],"React Hook useEffect has a missing dependency: 'getNDVI'. Either include it or remove the dependency array.",["414"],"'LoadingOverlay' is defined but never used.","'Audio' is defined but never used.","'FileUplaodIcon' is defined but never used.","'loading' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPolygons'. Either include it or remove the dependency array.",["415"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'useState' is defined but never used.","'makeStyles' is defined but never used.","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.image'. Either include it or remove the dependency array. If 'setImage' needs the current value of 'props.image', you can also switch to useReducer instead of useState and read 'props.image' in the reducer.",["416"],"'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'isDesktop' is assigned a value but never used.","'isMobile' is assigned a value but never used.","no-redeclare","'userDispatch' is already defined.","redeclared","'AddIcon' is defined but never used.","'DateFnsUtils' is defined but never used.","'content' is assigned a value but never used.","'InputBase' is defined but never used.","'Menu' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'Dropzone' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'imageLoading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'chartData' is assigned a value but never used.","'setChartData' is assigned a value but never used.","'setChartDate' is assigned a value but never used.","'useRef' is defined but never used.","'Modal' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'setSortColumn' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'response' is assigned a value but never used.","'useLayoutState' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","Duplicate key 'color'.","no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},"Update the dependencies array to be: [fromDateUNIX, toDateUNIX]",{"range":"425","text":"426"},"Update the dependencies array to be: [toDateUNIX, fromDateUNIX, polygonId, getNDVI]",{"range":"427","text":"428"},"Update the dependencies array to be: [fetchPolygons]",{"range":"429","text":"430"},"Update the dependencies array to be: [props.image]",{"range":"431","text":"432"},[2654,2656],"[fromDateUNIX, toDateUNIX]",[2700,2737],"[toDateUNIX, fromDateUNIX, polygonId, getNDVI]",[1094,1096],"[fetchPolygons]",[1836,1838],"[props.image]"]